

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Apr 08 19:23:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 12/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F47K42 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   002B2C                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _sevenSegValues
    75   002B2C  3F                 	db	63
    76   002B2D  06                 	db	6
    77   002B2E  5B                 	db	91
    78   002B2F  4F                 	db	79
    79   002B30  66                 	db	102
    80   002B31  6D                 	db	109
    81   002B32  7D                 	db	125
    82   002B33  07                 	db	7
    83   002B34  7F                 	db	127
    84   002B35  67                 	db	103
    85   002B36  00                 	db	0
    86   002B37  79                 	db	121
    87   000000                     _PORTBbits	set	16331
    88   000000                     _PORTAbits	set	16330
    89   000000                     _ANSELA	set	14912
    90   000000                     _LATA	set	16314
    91   000000                     _PORTA	set	16330
    92   000000                     _PORTD	set	16333
    93   000000                     _PORTC	set	16332
    94   000000                     _PORTB	set	16331
    95   000000                     _LATD	set	16317
    96   000000                     _LATC	set	16316
    97   000000                     _LATB	set	16315
    98   000000                     _TRISA	set	16322
    99   000000                     _ANSELB	set	14928
   100   000000                     _TRISD	set	16325
   101   000000                     _TRISC	set	16324
   102   000000                     _TRISB	set	16323
   103   000000                     _ANSELC	set	14944
   104   000000                     _ANSELD	set	14960
   105                           
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109   002A4A                     __pcinit:
   110                           	callstack 0
   111   002A4A                     start_initialization:
   112                           	callstack 0
   113   002A4A                     __initialization:
   114                           	callstack 0
   115                           
   116                           ; Initialize objects allocated to COMRAM (12 bytes)
   117                           ; load TBLPTR registers with __pidataCOMRAM
   118   002A4A  0E2C               	movlw	low __pidataCOMRAM
   119   002A4C  6EF6               	movwf	tblptrl,c
   120   002A4E  0E2B               	movlw	high __pidataCOMRAM
   121   002A50  6EF7               	movwf	tblptrh,c
   122   002A52  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   123   002A54  6EF8               	movwf	tblptru,c
   124   002A56  EE00  F021         	lfsr	0,__pdataCOMRAM
   125   002A5A  EE10 F00C          	lfsr	1,12
   126   002A5E                     copy_data0:
   127   002A5E  0009               	tblrd		*+
   128   002A60  006F FFD7 FFEE     	movff	tablat,postinc0
   129   002A66  50E5               	movf	postdec1,w,c
   130   002A68  50E1               	movf	fsr1l,w,c
   131   002A6A  E1F9               	bnz	copy_data0
   132   002A6C                     end_of_initialization:
   133                           	callstack 0
   134   002A6C                     __end_of__initialization:
   135                           	callstack 0
   136   002A6C  0100               	movlb	0
   137   002A6E  EFD5  F012         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	dataCOMRAM
   140   000021                     __pdataCOMRAM:
   141                           	callstack 0
   142   000021                     _sevenSegValues:
   143                           	callstack 0
   144   000021                     	ds	12
   145                           
   146                           	psect	cstackCOMRAM
   147   000001                     __pcstackCOMRAM:
   148                           	callstack 0
   149   000001                     ?_Addition_Op:
   150                           	callstack 0
   151   000001                     ?_Subtraction_Op:
   152                           	callstack 0
   153   000001                     ?_getKeypad:
   154                           	callstack 0
   155   000001                     ?___wmul:
   156                           	callstack 0
   157   000001                     ?___awdiv:
   158                           	callstack 0
   159   000001                     ?___awmod:
   160                           	callstack 0
   161   000001                     rhsSevenSeg@index:
   162                           	callstack 0
   163   000001                     lhsSevenSeg@index:
   164                           	callstack 0
   165   000001                     Addition_Op@valueX:
   166                           	callstack 0
   167   000001                     Subtraction_Op@valueX:
   168                           	callstack 0
   169   000001                     ___wmul@multiplier:
   170                           	callstack 0
   171   000001                     ___awdiv@dividend:
   172                           	callstack 0
   173   000001                     ___awmod@dividend:
   174                           	callstack 0
   175                           
   176                           ; 2 bytes @ 0x0
   177   000001                     	ds	2
   178   000003                     ??_rhsSevenSeg:
   179   000003                     ??_lhsSevenSeg:
   180   000003                     getKeypad@buttonNumber:
   181                           	callstack 0
   182   000003                     Addition_Op@valueY:
   183                           	callstack 0
   184   000003                     Subtraction_Op@valueY:
   185                           	callstack 0
   186   000003                     ___wmul@multiplicand:
   187                           	callstack 0
   188   000003                     ___awdiv@divisor:
   189                           	callstack 0
   190   000003                     ___awmod@divisor:
   191                           	callstack 0
   192                           
   193                           ; 2 bytes @ 0x2
   194   000003                     	ds	2
   195   000005                     ___awdiv@counter:
   196                           	callstack 0
   197   000005                     ___awmod@counter:
   198                           	callstack 0
   199   000005                     ___wmul@product:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x4
   203   000005                     	ds	1
   204   000006                     ___awdiv@sign:
   205                           	callstack 0
   206   000006                     ___awmod@sign:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x5
   210   000006                     	ds	1
   211   000007                     ?_Multiplication_Op:
   212                           	callstack 0
   213   000007                     Multiplication_Op@valueX:
   214                           	callstack 0
   215   000007                     ___awdiv@quotient:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x6
   219   000007                     	ds	2
   220   000009                     ?_Division_Op:
   221                           	callstack 0
   222   000009                     updateSevenSeg@lhsIndex:
   223                           	callstack 0
   224   000009                     negSevenSeg@lhs:
   225                           	callstack 0
   226   000009                     Multiplication_Op@valueY:
   227                           	callstack 0
   228   000009                     Division_Op@valueX:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x8
   232   000009                     	ds	2
   233   00000B                     updateSevenSeg@rhsIndex:
   234                           	callstack 0
   235   00000B                     negSevenSeg@rhs:
   236                           	callstack 0
   237   00000B                     Division_Op@valueY:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0xA
   241   00000B                     	ds	2
   242   00000D                     ??_negSevenSeg:
   243   00000D                     ?_getValue:
   244                           	callstack 0
   245   00000D                     ?_calculateFinalValue:
   246                           	callstack 0
   247   00000D                     getValue@operation:
   248                           	callstack 0
   249   00000D                     calculateFinalValue@operation:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xC
   253   00000D                     	ds	1
   254   00000E                     getValue@isEqualSign:
   255                           	callstack 0
   256   00000E                     dispConvNumber@decimalValue:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0xD
   260   00000E                     	ds	1
   261   00000F                     calculateFinalValue@valueX:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0xE
   265   00000F                     	ds	1
   266   000010                     
   267                           ; 1 bytes @ 0xF
   268   000010                     	ds	1
   269   000011                     getValue@decimalValue:
   270                           	callstack 0
   271   000011                     calculateFinalValue@valueY:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x10
   275   000011                     	ds	2
   276   000013                     ??_calculateFinalValue:
   277   000013                     getValue@value1:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x12
   281   000013                     	ds	2
   282   000015                     getValue@value2:
   283                           	callstack 0
   284   000015                     calculateFinalValue@finalValue:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x14
   288   000015                     	ds	2
   289   000017                     main@Display_Result_REG:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x16
   293   000017                     	ds	2
   294   000019                     main@X_Input_REG:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x18
   298   000019                     	ds	2
   299   00001B                     main@Y_Input_REG:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x1A
   303   00001B                     	ds	2
   304   00001D                     main@isEqualSign:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x1C
   308   00001D                     	ds	2
   309   00001F                     main@Operation_REG:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x1E
   313   00001F                     	ds	2
   314                           
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 47 in file "calculator.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  Operation_RE    2   30[COMRAM] int 
   325 ;;  isEqualSign     2   28[COMRAM] int 
   326 ;;  Y_Input_REG     2   26[COMRAM] int 
   327 ;;  X_Input_REG     2   24[COMRAM] int 
   328 ;;  Display_Resu    2   22[COMRAM] int 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  2  213[None  ] int 
   331 ;; Registers used:
   332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   339 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   341 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   342 ;;Total ram usage:       10 bytes
   343 ;; Hardware stack levels required when called: 3
   344 ;; This function calls:
   345 ;;		_calculateFinalValue
   346 ;;		_dispConvNumber
   347 ;;		_getKeypad
   348 ;;		_getValue
   349 ;;		_initializeAllPorts
   350 ;; This function is called by:
   351 ;;		Startup code after reset
   352 ;; This function uses a non-reentrant model
   353 ;;
   354                           
   355                           	psect	text0
   356   0025AA                     __ptext0:
   357                           	callstack 0
   358   0025AA                     _main:
   359                           	callstack 28
   360   0025AA                     
   361                           ;calculator.c: 49:     initializeAllPorts();
   362   0025AA  EC7F  F015         	call	_initializeAllPorts	;wreg free
   363   0025AE                     l1520:
   364                           
   365                           ;calculator.c: 59:         Operation_REG = 0;
   366   0025AE  0E00               	movlw	0
   367   0025B0  6E20               	movwf	(main@Operation_REG+1)^0,c
   368   0025B2  0E00               	movlw	0
   369   0025B4  6E1F               	movwf	main@Operation_REG^0,c
   370   0025B6                     
   371                           ;calculator.c: 60:         isEqualSign = 0;
   372   0025B6  0E00               	movlw	0
   373   0025B8  6E1E               	movwf	(main@isEqualSign+1)^0,c
   374   0025BA  0E00               	movlw	0
   375   0025BC  6E1D               	movwf	main@isEqualSign^0,c
   376   0025BE                     
   377                           ;calculator.c: 66:         X_Input_REG = getValue(&Operation_REG,&isEqualSign);
   378   0025BE  0E1F               	movlw	low main@Operation_REG
   379   0025C0  6E0D               	movwf	getValue@operation^0,c
   380   0025C2  0E1D               	movlw	low main@isEqualSign
   381   0025C4  6E0E               	movwf	getValue@isEqualSign^0,c
   382   0025C6  EC30  F011         	call	_getValue	;wreg free
   383   0025CA  C00D  F019         	movff	?_getValue,main@X_Input_REG
   384   0025CE  C00E  F01A         	movff	?_getValue+1,main@X_Input_REG+1
   385                           
   386                           ;calculator.c: 69:         while(Operation_REG <= 10 || Operation_REG >= 15){
   387   0025D2  EFF7  F012         	goto	l1536
   388   0025D6                     l1532:
   389                           
   390                           ;calculator.c: 70:             dispConvNumber(X_Input_REG);
   391   0025D6  C019  F00E         	movff	main@X_Input_REG,dispConvNumber@decimalValue
   392   0025DA  C01A  F00F         	movff	main@X_Input_REG+1,dispConvNumber@decimalValue+1
   393   0025DE  EC36  F012         	call	_dispConvNumber	;wreg free
   394   0025E2                     
   395                           ;calculator.c: 71:             Operation_REG = getKeypad();
   396   0025E2  EC01  F010         	call	_getKeypad	;wreg free
   397   0025E6  C001  F01F         	movff	?_getKeypad,main@Operation_REG
   398   0025EA  C002  F020         	movff	?_getKeypad+1,main@Operation_REG+1
   399   0025EE                     l1536:
   400                           
   401                           ;calculator.c: 69:         while(Operation_REG <= 10 || Operation_REG >= 15){
   402   0025EE  BE20               	btfsc	(main@Operation_REG+1)^0,7,c
   403   0025F0  EF03  F013         	goto	u1311
   404   0025F4  5020               	movf	(main@Operation_REG+1)^0,w,c
   405   0025F6  E109               	bnz	u1310
   406   0025F8  0E0B               	movlw	11
   407   0025FA  5C1F               	subwf	main@Operation_REG^0,w,c
   408   0025FC  A0D8               	btfss	status,0,c
   409   0025FE  EF03  F013         	goto	u1311
   410   002602  EF05  F013         	goto	u1310
   411   002606                     u1311:
   412   002606  EFEB  F012         	goto	l1532
   413   00260A                     u1310:
   414   00260A  BE20               	btfsc	(main@Operation_REG+1)^0,7,c
   415   00260C  EF13  F013         	goto	u1320
   416   002610  5020               	movf	(main@Operation_REG+1)^0,w,c
   417   002612  E107               	bnz	u1321
   418   002614  0E0F               	movlw	15
   419   002616  5C1F               	subwf	main@Operation_REG^0,w,c
   420   002618  B0D8               	btfsc	status,0,c
   421   00261A  EF11  F013         	goto	u1321
   422   00261E  EF13  F013         	goto	u1320
   423   002622                     u1321:
   424   002622  EFEB  F012         	goto	l1532
   425   002626                     u1320:
   426   002626                     
   427                           ;calculator.c: 75:         Y_Input_REG = getValue(&Operation_REG,&isEqualSign);
   428   002626  0E1F               	movlw	low main@Operation_REG
   429   002628  6E0D               	movwf	getValue@operation^0,c
   430   00262A  0E1D               	movlw	low main@isEqualSign
   431   00262C  6E0E               	movwf	getValue@isEqualSign^0,c
   432   00262E  EC30  F011         	call	_getValue	;wreg free
   433   002632  C00D  F01B         	movff	?_getValue,main@Y_Input_REG
   434   002636  C00E  F01C         	movff	?_getValue+1,main@Y_Input_REG+1
   435                           
   436                           ;calculator.c: 78:         while(isEqualSign != 10){
   437   00263A  EF2B  F013         	goto	l1546
   438   00263E                     l1542:
   439                           
   440                           ;calculator.c: 79:             dispConvNumber(Y_Input_REG);
   441   00263E  C01B  F00E         	movff	main@Y_Input_REG,dispConvNumber@decimalValue
   442   002642  C01C  F00F         	movff	main@Y_Input_REG+1,dispConvNumber@decimalValue+1
   443   002646  EC36  F012         	call	_dispConvNumber	;wreg free
   444   00264A                     
   445                           ;calculator.c: 80:             isEqualSign = getKeypad();
   446   00264A  EC01  F010         	call	_getKeypad	;wreg free
   447   00264E  C001  F01D         	movff	?_getKeypad,main@isEqualSign
   448   002652  C002  F01E         	movff	?_getKeypad+1,main@isEqualSign+1
   449   002656                     l1546:
   450                           
   451                           ;calculator.c: 78:         while(isEqualSign != 10){
   452   002656  0E0A               	movlw	10
   453   002658  181D               	xorwf	main@isEqualSign^0,w,c
   454   00265A  101E               	iorwf	(main@isEqualSign+1)^0,w,c
   455   00265C  A4D8               	btfss	status,2,c
   456   00265E  EF33  F013         	goto	u1331
   457   002662  EF35  F013         	goto	u1330
   458   002666                     u1331:
   459   002666  EF1F  F013         	goto	l1542
   460   00266A                     u1330:
   461   00266A                     
   462                           ;calculator.c: 84:         Display_Result_REG = calculateFinalValue(Operation_REG,X_Inpu
      +                          t_REG,Y_Input_REG);
   463   00266A  C01F  F00D         	movff	main@Operation_REG,calculateFinalValue@operation
   464   00266E  C020  F00E         	movff	main@Operation_REG+1,calculateFinalValue@operation+1
   465   002672  C019  F00F         	movff	main@X_Input_REG,calculateFinalValue@valueX
   466   002676  C01A  F010         	movff	main@X_Input_REG+1,calculateFinalValue@valueX+1
   467   00267A  C01B  F011         	movff	main@Y_Input_REG,calculateFinalValue@valueY
   468   00267E  C01C  F012         	movff	main@Y_Input_REG+1,calculateFinalValue@valueY+1
   469   002682  EC63  F013         	call	_calculateFinalValue	;wreg free
   470   002686  C00D  F017         	movff	?_calculateFinalValue,main@Display_Result_REG
   471   00268A  C00E  F018         	movff	?_calculateFinalValue+1,main@Display_Result_REG+1
   472                           
   473                           ;calculator.c: 87:         while(Operation_REG != 15){
   474   00268E  EF55  F013         	goto	l1554
   475   002692                     l1550:
   476                           
   477                           ;calculator.c: 88:             dispConvNumber(Display_Result_REG);
   478   002692  C017  F00E         	movff	main@Display_Result_REG,dispConvNumber@decimalValue
   479   002696  C018  F00F         	movff	main@Display_Result_REG+1,dispConvNumber@decimalValue+1
   480   00269A  EC36  F012         	call	_dispConvNumber	;wreg free
   481   00269E                     
   482                           ;calculator.c: 89:             Operation_REG = getKeypad();
   483   00269E  EC01  F010         	call	_getKeypad	;wreg free
   484   0026A2  C001  F01F         	movff	?_getKeypad,main@Operation_REG
   485   0026A6  C002  F020         	movff	?_getKeypad+1,main@Operation_REG+1
   486   0026AA                     l1554:
   487                           
   488                           ;calculator.c: 87:         while(Operation_REG != 15){
   489   0026AA  0E0F               	movlw	15
   490   0026AC  181F               	xorwf	main@Operation_REG^0,w,c
   491   0026AE  1020               	iorwf	(main@Operation_REG+1)^0,w,c
   492   0026B0  A4D8               	btfss	status,2,c
   493   0026B2  EF5D  F013         	goto	u1341
   494   0026B6  EF5F  F013         	goto	u1340
   495   0026BA                     u1341:
   496   0026BA  EF49  F013         	goto	l1550
   497   0026BE                     u1340:
   498   0026BE  EFD7  F012         	goto	l1520
   499   0026C2  EFFE  F0FF         	goto	start
   500   0026C6                     __end_of_main:
   501                           	callstack 0
   502                           
   503 ;; *************** function _initializeAllPorts *****************
   504 ;; Defined at:
   505 ;;		line 30 in file "./calcFunctions.h"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 1
   526 ;; This function calls:
   527 ;;		_initializePORTA
   528 ;;		_initializePORTB
   529 ;;		_initializePORTC
   530 ;;		_initializePORTD
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text1
   537   002AFE                     __ptext1:
   538                           	callstack 0
   539   002AFE                     _initializeAllPorts:
   540                           	callstack 29
   541   002AFE                     
   542                           ;./calcFunctions.h: 31:     initializePORTA();
   543   002AFE  EC75  F015         	call	_initializePORTA	;wreg free
   544                           
   545                           ;./calcFunctions.h: 32:     initializePORTB();
   546   002B02  EC6B  F015         	call	_initializePORTB	;wreg free
   547                           
   548                           ;./calcFunctions.h: 33:     initializePORTC();
   549   002B06  EC61  F015         	call	_initializePORTC	;wreg free
   550                           
   551                           ;./calcFunctions.h: 34:     initializePORTD();
   552   002B0A  EC57  F015         	call	_initializePORTD	;wreg free
   553   002B0E  0012               	return		;funcret
   554   002B10                     __end_of_initializeAllPorts:
   555                           	callstack 0
   556                           
   557 ;; *************** function _initializePORTD *****************
   558 ;; Defined at:
   559 ;;		line 54 in file "./calcFunctions.h"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_initializeAllPorts
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text2
   587   002AAE                     __ptext2:
   588                           	callstack 0
   589   002AAE                     _initializePORTD:
   590                           	callstack 29
   591   002AAE                     
   592                           ;./calcFunctions.h: 55:     TRISD = 0;
   593   002AAE  0E00               	movlw	0
   594   002AB0  6EC5               	movwf	197,c	;volatile
   595                           
   596                           ;./calcFunctions.h: 56:     PORTD = 0;
   597   002AB2  0E00               	movlw	0
   598   002AB4  6ECD               	movwf	205,c	;volatile
   599                           
   600                           ;./calcFunctions.h: 57:     LATD = 0;
   601   002AB6  0E00               	movlw	0
   602   002AB8  6EBD               	movwf	189,c	;volatile
   603                           
   604                           ;./calcFunctions.h: 58:     ANSELD = 0;
   605   002ABA  0E00               	movlw	0
   606   002ABC  013A               	movlb	58	; () banked
   607   002ABE  6F70               	movwf	112,b	;volatile
   608   002AC0                     
   609                           ; BSR set to: 58
   610   002AC0  0012               	return		;funcret
   611   002AC2                     __end_of_initializePORTD:
   612                           	callstack 0
   613                           
   614 ;; *************** function _initializePORTC *****************
   615 ;; Defined at:
   616 ;;		line 48 in file "./calcFunctions.h"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_initializeAllPorts
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text3
   644   002AC2                     __ptext3:
   645                           	callstack 0
   646   002AC2                     _initializePORTC:
   647                           	callstack 29
   648   002AC2                     
   649                           ;./calcFunctions.h: 49:     PORTC = 0;
   650   002AC2  0E00               	movlw	0
   651   002AC4  6ECC               	movwf	204,c	;volatile
   652                           
   653                           ;./calcFunctions.h: 50:     LATC = 0;
   654   002AC6  0E00               	movlw	0
   655   002AC8  6EBC               	movwf	188,c	;volatile
   656                           
   657                           ;./calcFunctions.h: 51:     ANSELC = 0;
   658   002ACA  0E00               	movlw	0
   659   002ACC  013A               	movlb	58	; () banked
   660   002ACE  6F60               	movwf	96,b	;volatile
   661                           
   662                           ;./calcFunctions.h: 52:     TRISC = 0;
   663   002AD0  0E00               	movlw	0
   664   002AD2  6EC4               	movwf	196,c	;volatile
   665   002AD4                     
   666                           ; BSR set to: 58
   667   002AD4  0012               	return		;funcret
   668   002AD6                     __end_of_initializePORTC:
   669                           	callstack 0
   670                           
   671 ;; *************** function _initializePORTB *****************
   672 ;; Defined at:
   673 ;;		line 42 in file "./calcFunctions.h"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_initializeAllPorts
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text4
   701   002AD6                     __ptext4:
   702                           	callstack 0
   703   002AD6                     _initializePORTB:
   704                           	callstack 29
   705   002AD6                     
   706                           ;./calcFunctions.h: 43:     PORTB = 0;
   707   002AD6  0E00               	movlw	0
   708   002AD8  6ECB               	movwf	203,c	;volatile
   709                           
   710                           ;./calcFunctions.h: 44:     LATB = 0;
   711   002ADA  0E00               	movlw	0
   712   002ADC  6EBB               	movwf	187,c	;volatile
   713                           
   714                           ;./calcFunctions.h: 45:     ANSELB = 0;
   715   002ADE  0E00               	movlw	0
   716   002AE0  013A               	movlb	58	; () banked
   717   002AE2  6F50               	movwf	80,b	;volatile
   718                           
   719                           ;./calcFunctions.h: 46:     TRISB = 0b00000011;
   720   002AE4  0E03               	movlw	3
   721   002AE6  6EC3               	movwf	195,c	;volatile
   722   002AE8                     
   723                           ; BSR set to: 58
   724   002AE8  0012               	return		;funcret
   725   002AEA                     __end_of_initializePORTB:
   726                           	callstack 0
   727                           
   728 ;; *************** function _initializePORTA *****************
   729 ;; Defined at:
   730 ;;		line 36 in file "./calcFunctions.h"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_initializeAllPorts
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text5
   758   002AEA                     __ptext5:
   759                           	callstack 0
   760   002AEA                     _initializePORTA:
   761                           	callstack 29
   762   002AEA                     
   763                           ;./calcFunctions.h: 37:     PORTA = 0;
   764   002AEA  0E00               	movlw	0
   765   002AEC  6ECA               	movwf	202,c	;volatile
   766                           
   767                           ;./calcFunctions.h: 38:     LATA = 0;
   768   002AEE  0E00               	movlw	0
   769   002AF0  6EBA               	movwf	186,c	;volatile
   770                           
   771                           ;./calcFunctions.h: 39:     ANSELA = 0;
   772   002AF2  0E00               	movlw	0
   773   002AF4  013A               	movlb	58	; () banked
   774   002AF6  6F40               	movwf	64,b	;volatile
   775                           
   776                           ;./calcFunctions.h: 40:     TRISA = 0b11110000;
   777   002AF8  0EF0               	movlw	240
   778   002AFA  6EC2               	movwf	194,c	;volatile
   779   002AFC                     
   780                           ; BSR set to: 58
   781   002AFC  0012               	return		;funcret
   782   002AFE                     __end_of_initializePORTA:
   783                           	callstack 0
   784                           
   785 ;; *************** function _getValue *****************
   786 ;; Defined at:
   787 ;;		line 205 in file "./calcFunctions.h"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  operation       1   12[COMRAM] PTR int 
   790 ;;		 -> main@Operation_REG(2), 
   791 ;;  isEqualSign     1   13[COMRAM] PTR int 
   792 ;;		 -> main@isEqualSign(2), 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  value2          2   20[COMRAM] int 
   795 ;;  value1          2   18[COMRAM] int 
   796 ;;  decimalValue    2   16[COMRAM] int 
   797 ;; Return value:  Size  Location     Type
   798 ;;                  2   12[COMRAM] int 
   799 ;; Registers used:
   800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   807 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   810 ;;Total ram usage:       10 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 2
   813 ;; This function calls:
   814 ;;		___wmul
   815 ;;		_getKeypad
   816 ;;		_rhsSevenSeg
   817 ;;		_updateSevenSeg
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text6
   824   002260                     __ptext6:
   825                           	callstack 0
   826   002260                     _getValue:
   827                           	callstack 28
   828   002260                     
   829                           ;./calcFunctions.h: 206:     int value1 = -1;
   830   002260  6813               	setf	getValue@value1^0,c
   831   002262  6814               	setf	(getValue@value1+1)^0,c
   832                           
   833                           ;./calcFunctions.h: 207:     int value2 = -1;
   834   002264  6815               	setf	getValue@value2^0,c
   835   002266  6816               	setf	(getValue@value2+1)^0,c
   836   002268                     
   837                           ;./calcFunctions.h: 208:     int decimalValue = 0;
   838   002268  0E00               	movlw	0
   839   00226A  6E12               	movwf	(getValue@decimalValue+1)^0,c
   840   00226C  0E00               	movlw	0
   841   00226E  6E11               	movwf	getValue@decimalValue^0,c
   842   002270                     
   843                           ;./calcFunctions.h: 210:     updateSevenSeg(value1,value2);
   844   002270  0EFF               	movlw	255
   845   002272  6E0A               	movwf	(updateSevenSeg@lhsIndex+1)^0,c
   846   002274  6809               	setf	updateSevenSeg@lhsIndex^0,c
   847   002276  0EFF               	movlw	255
   848   002278  6E0C               	movwf	(updateSevenSeg@rhsIndex+1)^0,c
   849   00227A  680B               	setf	updateSevenSeg@rhsIndex^0,c
   850   00227C  ECFB  F014         	call	_updateSevenSeg	;wreg free
   851                           
   852                           ;./calcFunctions.h: 212:     while(value1 < 0 || value1 > 9){
   853   002280  EF48  F011         	goto	l1424
   854   002284                     l1422:
   855                           
   856                           ;./calcFunctions.h: 213:             value1 = getKeypad();
   857   002284  EC01  F010         	call	_getKeypad	;wreg free
   858   002288  C001  F013         	movff	?_getKeypad,getValue@value1
   859   00228C  C002  F014         	movff	?_getKeypad+1,getValue@value1+1
   860   002290                     l1424:
   861                           
   862                           ;./calcFunctions.h: 212:     while(value1 < 0 || value1 > 9){
   863   002290  BE14               	btfsc	(getValue@value1+1)^0,7,c
   864   002292  EF4D  F011         	goto	u1161
   865   002296  EF4F  F011         	goto	u1160
   866   00229A                     u1161:
   867   00229A  EF42  F011         	goto	l1422
   868   00229E                     u1160:
   869   00229E  BE14               	btfsc	(getValue@value1+1)^0,7,c
   870   0022A0  EF5D  F011         	goto	u1170
   871   0022A4  5014               	movf	(getValue@value1+1)^0,w,c
   872   0022A6  E107               	bnz	u1171
   873   0022A8  0E0A               	movlw	10
   874   0022AA  5C13               	subwf	getValue@value1^0,w,c
   875   0022AC  B0D8               	btfsc	status,0,c
   876   0022AE  EF5B  F011         	goto	u1171
   877   0022B2  EF5D  F011         	goto	u1170
   878   0022B6                     u1171:
   879   0022B6  EF42  F011         	goto	l1422
   880   0022BA                     u1170:
   881   0022BA                     
   882                           ;./calcFunctions.h: 215:     rhsSevenSeg(value1);
   883   0022BA  C013  F001         	movff	getValue@value1,rhsSevenSeg@index
   884   0022BE  C014  F002         	movff	getValue@value1+1,rhsSevenSeg@index+1
   885   0022C2  ECB5  F014         	call	_rhsSevenSeg	;wreg free
   886                           
   887                           ;./calcFunctions.h: 217:     while(value2<0){
   888   0022C6  EF6B  F011         	goto	l1432
   889   0022CA                     l1430:
   890                           
   891                           ;./calcFunctions.h: 218:         value2 = getKeypad();
   892   0022CA  EC01  F010         	call	_getKeypad	;wreg free
   893   0022CE  C001  F015         	movff	?_getKeypad,getValue@value2
   894   0022D2  C002  F016         	movff	?_getKeypad+1,getValue@value2+1
   895   0022D6                     l1432:
   896                           
   897                           ;./calcFunctions.h: 217:     while(value2<0){
   898   0022D6  BE16               	btfsc	(getValue@value2+1)^0,7,c
   899   0022D8  EF70  F011         	goto	u1181
   900   0022DC  EF72  F011         	goto	u1180
   901   0022E0                     u1181:
   902   0022E0  EF65  F011         	goto	l1430
   903   0022E4                     u1180:
   904   0022E4                     
   905                           ;./calcFunctions.h: 220:     if(*operation < 10){
   906   0022E4  500D               	movf	getValue@operation^0,w,c
   907   0022E6  6ED9               	movwf	fsr2l,c
   908   0022E8  6ADA               	clrf	fsr2h,c
   909   0022EA  0E01               	movlw	1
   910   0022EC  BEDB               	btfsc	plusw2,7,c
   911   0022EE  EF85  F011         	goto	u1190
   912   0022F2  0E01               	movlw	1
   913   0022F4  50DB               	movf	plusw2,w,c
   914   0022F6  E107               	bnz	u1191
   915   0022F8  0E0A               	movlw	10
   916   0022FA  5CDE               	subwf	postinc2,w,c
   917   0022FC  B0D8               	btfsc	status,0,c
   918   0022FE  EF83  F011         	goto	u1191
   919   002302  EF85  F011         	goto	u1190
   920   002306                     u1191:
   921   002306  EFCB  F011         	goto	l1450
   922   00230A                     u1190:
   923   00230A                     
   924                           ;./calcFunctions.h: 223:         if(value2 >= 0 && value2 <= 9){
   925   00230A  BE16               	btfsc	(getValue@value2+1)^0,7,c
   926   00230C  EF8A  F011         	goto	u1201
   927   002310  EF8C  F011         	goto	u1200
   928   002314                     u1201:
   929   002314  EFB6  F011         	goto	l1444
   930   002318                     u1200:
   931   002318  BE16               	btfsc	(getValue@value2+1)^0,7,c
   932   00231A  EF9A  F011         	goto	u1210
   933   00231E  5016               	movf	(getValue@value2+1)^0,w,c
   934   002320  E107               	bnz	u1211
   935   002322  0E0A               	movlw	10
   936   002324  5C15               	subwf	getValue@value2^0,w,c
   937   002326  B0D8               	btfsc	status,0,c
   938   002328  EF98  F011         	goto	u1211
   939   00232C  EF9A  F011         	goto	u1210
   940   002330                     u1211:
   941   002330  EFB6  F011         	goto	l1444
   942   002334                     u1210:
   943   002334                     
   944                           ;./calcFunctions.h: 224:                 updateSevenSeg(value1,value2);
   945   002334  C013  F009         	movff	getValue@value1,updateSevenSeg@lhsIndex
   946   002338  C014  F00A         	movff	getValue@value1+1,updateSevenSeg@lhsIndex+1
   947   00233C  C015  F00B         	movff	getValue@value2,updateSevenSeg@rhsIndex
   948   002340  C016  F00C         	movff	getValue@value2+1,updateSevenSeg@rhsIndex+1
   949   002344  ECFB  F014         	call	_updateSevenSeg	;wreg free
   950   002348                     
   951                           ;./calcFunctions.h: 225:                 decimalValue = (value1 * 10) + value2;
   952   002348  C013  F001         	movff	getValue@value1,___wmul@multiplier
   953   00234C  C014  F002         	movff	getValue@value1+1,___wmul@multiplier+1
   954   002350  0E00               	movlw	0
   955   002352  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   956   002354  0E0A               	movlw	10
   957   002356  6E03               	movwf	___wmul@multiplicand^0,c
   958   002358  EC10  F015         	call	___wmul	;wreg free
   959   00235C  5015               	movf	getValue@value2^0,w,c
   960   00235E  2401               	addwf	?___wmul^0,w,c
   961   002360  6E11               	movwf	getValue@decimalValue^0,c
   962   002362  5016               	movf	(getValue@value2+1)^0,w,c
   963   002364  2002               	addwfc	(?___wmul+1)^0,w,c
   964   002366  6E12               	movwf	(getValue@decimalValue+1)^0,c
   965                           
   966                           ;./calcFunctions.h: 226:         }else{
   967   002368  EF31  F012         	goto	l171
   968   00236C                     l1444:
   969                           
   970                           ;./calcFunctions.h: 227:                 *operation = value2;
   971   00236C  500D               	movf	getValue@operation^0,w,c
   972   00236E  6ED9               	movwf	fsr2l,c
   973   002370  6ADA               	clrf	fsr2h,c
   974   002372  0060  F057  FFDE   	movff	getValue@value2,postinc2
   975   002378  0060  F05B  FFDD   	movff	getValue@value2+1,postdec2
   976   00237E                     
   977                           ;./calcFunctions.h: 228:                 decimalValue = value1;
   978   00237E  C013  F011         	movff	getValue@value1,getValue@decimalValue
   979   002382  C014  F012         	movff	getValue@value1+1,getValue@decimalValue+1
   980   002386                     
   981                           ;./calcFunctions.h: 229:                 rhsSevenSeg(0);
   982   002386  0E00               	movlw	0
   983   002388  6E02               	movwf	(rhsSevenSeg@index+1)^0,c
   984   00238A  0E00               	movlw	0
   985   00238C  6E01               	movwf	rhsSevenSeg@index^0,c
   986   00238E  ECB5  F014         	call	_rhsSevenSeg	;wreg free
   987   002392  EF31  F012         	goto	l171
   988   002396                     l1450:
   989                           
   990                           ;./calcFunctions.h: 232:         if(value2 == 10){
   991   002396  0E0A               	movlw	10
   992   002398  1815               	xorwf	getValue@value2^0,w,c
   993   00239A  1016               	iorwf	(getValue@value2+1)^0,w,c
   994   00239C  A4D8               	btfss	status,2,c
   995   00239E  EFD3  F011         	goto	u1221
   996   0023A2  EFD5  F011         	goto	u1220
   997   0023A6                     u1221:
   998   0023A6  EF24  F012         	goto	l1468
   999   0023AA                     u1220:
  1000   0023AA                     
  1001                           ;./calcFunctions.h: 233:             *isEqualSign = value2;
  1002   0023AA  500E               	movf	getValue@isEqualSign^0,w,c
  1003   0023AC  6ED9               	movwf	fsr2l,c
  1004   0023AE  6ADA               	clrf	fsr2h,c
  1005   0023B0  0060  F057  FFDE   	movff	getValue@value2,postinc2
  1006   0023B6  0060  F05B  FFDD   	movff	getValue@value2+1,postdec2
  1007   0023BC                     
  1008                           ;./calcFunctions.h: 234:             decimalValue = value1;
  1009   0023BC  C013  F011         	movff	getValue@value1,getValue@decimalValue
  1010   0023C0  C014  F012         	movff	getValue@value1+1,getValue@decimalValue+1
  1011   0023C4                     
  1012                           ;./calcFunctions.h: 235:             rhsSevenSeg(0);
  1013   0023C4  0E00               	movlw	0
  1014   0023C6  6E02               	movwf	(rhsSevenSeg@index+1)^0,c
  1015   0023C8  0E00               	movlw	0
  1016   0023CA  6E01               	movwf	rhsSevenSeg@index^0,c
  1017   0023CC  ECB5  F014         	call	_rhsSevenSeg	;wreg free
  1018   0023D0  EF24  F012         	goto	l1468
  1019   0023D4                     l1458:
  1020                           
  1021                           ;./calcFunctions.h: 238:             if(value2 >= 0 && value2 <= 9){
  1022   0023D4  BE16               	btfsc	(getValue@value2+1)^0,7,c
  1023   0023D6  EFEF  F011         	goto	u1231
  1024   0023DA  EFF1  F011         	goto	u1230
  1025   0023DE                     u1231:
  1026   0023DE  EF19  F012         	goto	l1466
  1027   0023E2                     u1230:
  1028   0023E2  BE16               	btfsc	(getValue@value2+1)^0,7,c
  1029   0023E4  EFFF  F011         	goto	u1240
  1030   0023E8  5016               	movf	(getValue@value2+1)^0,w,c
  1031   0023EA  E107               	bnz	u1241
  1032   0023EC  0E0A               	movlw	10
  1033   0023EE  5C15               	subwf	getValue@value2^0,w,c
  1034   0023F0  B0D8               	btfsc	status,0,c
  1035   0023F2  EFFD  F011         	goto	u1241
  1036   0023F6  EFFF  F011         	goto	u1240
  1037   0023FA                     u1241:
  1038   0023FA  EF19  F012         	goto	l1466
  1039   0023FE                     u1240:
  1040   0023FE                     
  1041                           ;./calcFunctions.h: 239:                 updateSevenSeg(value1,value2);
  1042   0023FE  C013  F009         	movff	getValue@value1,updateSevenSeg@lhsIndex
  1043   002402  C014  F00A         	movff	getValue@value1+1,updateSevenSeg@lhsIndex+1
  1044   002406  C015  F00B         	movff	getValue@value2,updateSevenSeg@rhsIndex
  1045   00240A  C016  F00C         	movff	getValue@value2+1,updateSevenSeg@rhsIndex+1
  1046   00240E  ECFB  F014         	call	_updateSevenSeg	;wreg free
  1047   002412                     
  1048                           ;./calcFunctions.h: 240:                 decimalValue = (value1 * 10) + value2;
  1049   002412  C013  F001         	movff	getValue@value1,___wmul@multiplier
  1050   002416  C014  F002         	movff	getValue@value1+1,___wmul@multiplier+1
  1051   00241A  0E00               	movlw	0
  1052   00241C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1053   00241E  0E0A               	movlw	10
  1054   002420  6E03               	movwf	___wmul@multiplicand^0,c
  1055   002422  EC10  F015         	call	___wmul	;wreg free
  1056   002426  5015               	movf	getValue@value2^0,w,c
  1057   002428  2401               	addwf	?___wmul^0,w,c
  1058   00242A  6E11               	movwf	getValue@decimalValue^0,c
  1059   00242C  5016               	movf	(getValue@value2+1)^0,w,c
  1060   00242E  2002               	addwfc	(?___wmul+1)^0,w,c
  1061   002430  6E12               	movwf	(getValue@decimalValue+1)^0,c
  1062   002432                     l1466:
  1063                           
  1064                           ;./calcFunctions.h: 242:             *isEqualSign = getKeypad();
  1065   002432  EC01  F010         	call	_getKeypad	;wreg free
  1066   002436  500E               	movf	getValue@isEqualSign^0,w,c
  1067   002438  6ED9               	movwf	fsr2l,c
  1068   00243A  6ADA               	clrf	fsr2h,c
  1069   00243C  0060  F007  FFDE   	movff	?_getKeypad,postinc2
  1070   002442  0060  F00B  FFDD   	movff	?_getKeypad+1,postdec2
  1071   002448                     l1468:
  1072                           
  1073                           ;./calcFunctions.h: 237:         while(*isEqualSign != 10){
  1074   002448  500E               	movf	getValue@isEqualSign^0,w,c
  1075   00244A  6ED9               	movwf	fsr2l,c
  1076   00244C  6ADA               	clrf	fsr2h,c
  1077   00244E  0E0A               	movlw	10
  1078   002450  18DE               	xorwf	postinc2,w,c
  1079   002452  10DE               	iorwf	postinc2,w,c
  1080   002454  A4D8               	btfss	status,2,c
  1081   002456  EF2F  F012         	goto	u1251
  1082   00245A  EF31  F012         	goto	u1250
  1083   00245E                     u1251:
  1084   00245E  EFEA  F011         	goto	l1458
  1085   002462                     u1250:
  1086   002462                     l171:
  1087                           
  1088                           ;./calcFunctions.h: 246:     return decimalValue;
  1089   002462  C011  F00D         	movff	getValue@decimalValue,?_getValue
  1090   002466  C012  F00E         	movff	getValue@decimalValue+1,?_getValue+1
  1091   00246A  0012               	return		;funcret
  1092   00246C                     __end_of_getValue:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _getKeypad *****************
  1096 ;; Defined at:
  1097 ;;		line 102 in file "./calcFunctions.h"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  buttonNumber    2    2[COMRAM] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  2    0[COMRAM] int 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1115 ;;Total ram usage:        4 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_getValue
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text7
  1126   002002                     __ptext7:
  1127                           	callstack 0
  1128   002002                     _getKeypad:
  1129                           	callstack 29
  1130   002002                     
  1131                           ;./calcFunctions.h: 103:     int buttonNumber = -1;
  1132   002002  6803               	setf	getKeypad@buttonNumber^0,c
  1133   002004  6804               	setf	(getKeypad@buttonNumber+1)^0,c
  1134                           
  1135                           ;./calcFunctions.h: 106:     PORTAbits.RA0 = 1;
  1136   002006  80CA               	bsf	202,0,c	;volatile
  1137                           
  1138                           ;./calcFunctions.h: 107:     if(PORTAbits.RA4 == 1){
  1139   002008  A8CA               	btfss	202,4,c	;volatile
  1140   00200A  EF09  F010         	goto	u781
  1141   00200E  EF0B  F010         	goto	u780
  1142   002012                     u781:
  1143   002012  EF16  F010         	goto	l95
  1144   002016                     u780:
  1145   002016                     
  1146                           ;./calcFunctions.h: 109:         buttonNumber = 1;
  1147   002016  0E00               	movlw	0
  1148   002018  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1149   00201A  0E01               	movlw	1
  1150   00201C  6E03               	movwf	getKeypad@buttonNumber^0,c
  1151   00201E                     l96:
  1152   00201E  B8CA               	btfsc	202,4,c	;volatile
  1153   002020  EF14  F010         	goto	u791
  1154   002024  EF16  F010         	goto	u790
  1155   002028                     u791:
  1156   002028  EF0F  F010         	goto	l96
  1157   00202C                     u790:
  1158   00202C                     l95:
  1159                           
  1160                           ;./calcFunctions.h: 112:     if(PORTAbits.RA5 == 1){
  1161   00202C  AACA               	btfss	202,5,c	;volatile
  1162   00202E  EF1B  F010         	goto	u801
  1163   002032  EF1D  F010         	goto	u800
  1164   002036                     u801:
  1165   002036  EF28  F010         	goto	l99
  1166   00203A                     u800:
  1167   00203A                     
  1168                           ;./calcFunctions.h: 114:         buttonNumber = 4;
  1169   00203A  0E00               	movlw	0
  1170   00203C  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1171   00203E  0E04               	movlw	4
  1172   002040  6E03               	movwf	getKeypad@buttonNumber^0,c
  1173   002042                     l100:
  1174   002042  BACA               	btfsc	202,5,c	;volatile
  1175   002044  EF26  F010         	goto	u811
  1176   002048  EF28  F010         	goto	u810
  1177   00204C                     u811:
  1178   00204C  EF21  F010         	goto	l100
  1179   002050                     u810:
  1180   002050                     l99:
  1181                           
  1182                           ;./calcFunctions.h: 117:     if(PORTBbits.RB0 == 1){
  1183   002050  A0CB               	btfss	203,0,c	;volatile
  1184   002052  EF2D  F010         	goto	u821
  1185   002056  EF2F  F010         	goto	u820
  1186   00205A                     u821:
  1187   00205A  EF3A  F010         	goto	l103
  1188   00205E                     u820:
  1189   00205E                     
  1190                           ;./calcFunctions.h: 119:         buttonNumber = 7;
  1191   00205E  0E00               	movlw	0
  1192   002060  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1193   002062  0E07               	movlw	7
  1194   002064  6E03               	movwf	getKeypad@buttonNumber^0,c
  1195   002066                     l104:
  1196   002066  B0CB               	btfsc	203,0,c	;volatile
  1197   002068  EF38  F010         	goto	u831
  1198   00206C  EF3A  F010         	goto	u830
  1199   002070                     u831:
  1200   002070  EF33  F010         	goto	l104
  1201   002074                     u830:
  1202   002074                     l103:
  1203                           
  1204                           ;./calcFunctions.h: 122:     if(PORTBbits.RB1 == 1){
  1205   002074  A2CB               	btfss	203,1,c	;volatile
  1206   002076  EF3F  F010         	goto	u841
  1207   00207A  EF41  F010         	goto	u840
  1208   00207E                     u841:
  1209   00207E  EF4C  F010         	goto	l107
  1210   002082                     u840:
  1211   002082                     
  1212                           ;./calcFunctions.h: 124:         buttonNumber = 15;
  1213   002082  0E00               	movlw	0
  1214   002084  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1215   002086  0E0F               	movlw	15
  1216   002088  6E03               	movwf	getKeypad@buttonNumber^0,c
  1217   00208A                     l108:
  1218   00208A  B2CB               	btfsc	203,1,c	;volatile
  1219   00208C  EF4A  F010         	goto	u851
  1220   002090  EF4C  F010         	goto	u850
  1221   002094                     u851:
  1222   002094  EF45  F010         	goto	l108
  1223   002098                     u850:
  1224   002098                     l107:
  1225                           
  1226                           ;./calcFunctions.h: 127:     PORTAbits.RA0 = 0;
  1227   002098  90CA               	bcf	202,0,c	;volatile
  1228                           
  1229                           ;./calcFunctions.h: 130:     PORTAbits.RA1 = 1;
  1230   00209A  82CA               	bsf	202,1,c	;volatile
  1231                           
  1232                           ;./calcFunctions.h: 131:     if(PORTAbits.RA4 == 1){
  1233   00209C  A8CA               	btfss	202,4,c	;volatile
  1234   00209E  EF53  F010         	goto	u861
  1235   0020A2  EF55  F010         	goto	u860
  1236   0020A6                     u861:
  1237   0020A6  EF60  F010         	goto	l111
  1238   0020AA                     u860:
  1239   0020AA                     
  1240                           ;./calcFunctions.h: 133:         buttonNumber = 2;
  1241   0020AA  0E00               	movlw	0
  1242   0020AC  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1243   0020AE  0E02               	movlw	2
  1244   0020B0  6E03               	movwf	getKeypad@buttonNumber^0,c
  1245   0020B2                     l112:
  1246   0020B2  B8CA               	btfsc	202,4,c	;volatile
  1247   0020B4  EF5E  F010         	goto	u871
  1248   0020B8  EF60  F010         	goto	u870
  1249   0020BC                     u871:
  1250   0020BC  EF59  F010         	goto	l112
  1251   0020C0                     u870:
  1252   0020C0                     l111:
  1253                           
  1254                           ;./calcFunctions.h: 136:     if(PORTAbits.RA5 == 1){
  1255   0020C0  AACA               	btfss	202,5,c	;volatile
  1256   0020C2  EF65  F010         	goto	u881
  1257   0020C6  EF67  F010         	goto	u880
  1258   0020CA                     u881:
  1259   0020CA  EF72  F010         	goto	l115
  1260   0020CE                     u880:
  1261   0020CE                     
  1262                           ;./calcFunctions.h: 138:         buttonNumber = 5;
  1263   0020CE  0E00               	movlw	0
  1264   0020D0  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1265   0020D2  0E05               	movlw	5
  1266   0020D4  6E03               	movwf	getKeypad@buttonNumber^0,c
  1267   0020D6                     l116:
  1268   0020D6  BACA               	btfsc	202,5,c	;volatile
  1269   0020D8  EF70  F010         	goto	u891
  1270   0020DC  EF72  F010         	goto	u890
  1271   0020E0                     u891:
  1272   0020E0  EF6B  F010         	goto	l116
  1273   0020E4                     u890:
  1274   0020E4                     l115:
  1275                           
  1276                           ;./calcFunctions.h: 141:     if(PORTBbits.RB0 == 1){
  1277   0020E4  A0CB               	btfss	203,0,c	;volatile
  1278   0020E6  EF77  F010         	goto	u901
  1279   0020EA  EF79  F010         	goto	u900
  1280   0020EE                     u901:
  1281   0020EE  EF84  F010         	goto	l119
  1282   0020F2                     u900:
  1283   0020F2                     
  1284                           ;./calcFunctions.h: 143:         buttonNumber = 8;
  1285   0020F2  0E00               	movlw	0
  1286   0020F4  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1287   0020F6  0E08               	movlw	8
  1288   0020F8  6E03               	movwf	getKeypad@buttonNumber^0,c
  1289   0020FA                     l120:
  1290   0020FA  B0CB               	btfsc	203,0,c	;volatile
  1291   0020FC  EF82  F010         	goto	u911
  1292   002100  EF84  F010         	goto	u910
  1293   002104                     u911:
  1294   002104  EF7D  F010         	goto	l120
  1295   002108                     u910:
  1296   002108                     l119:
  1297                           
  1298                           ;./calcFunctions.h: 146:     if(PORTBbits.RB1 == 1){
  1299   002108  A2CB               	btfss	203,1,c	;volatile
  1300   00210A  EF89  F010         	goto	u921
  1301   00210E  EF8B  F010         	goto	u920
  1302   002112                     u921:
  1303   002112  EF96  F010         	goto	l123
  1304   002116                     u920:
  1305   002116                     
  1306                           ;./calcFunctions.h: 148:         buttonNumber = 0;
  1307   002116  0E00               	movlw	0
  1308   002118  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1309   00211A  0E00               	movlw	0
  1310   00211C  6E03               	movwf	getKeypad@buttonNumber^0,c
  1311   00211E                     l124:
  1312   00211E  B2CB               	btfsc	203,1,c	;volatile
  1313   002120  EF94  F010         	goto	u931
  1314   002124  EF96  F010         	goto	u930
  1315   002128                     u931:
  1316   002128  EF8F  F010         	goto	l124
  1317   00212C                     u930:
  1318   00212C                     l123:
  1319                           
  1320                           ;./calcFunctions.h: 151:     PORTAbits.RA1 = 0;
  1321   00212C  92CA               	bcf	202,1,c	;volatile
  1322                           
  1323                           ;./calcFunctions.h: 154:     PORTAbits.RA2 = 1;
  1324   00212E  84CA               	bsf	202,2,c	;volatile
  1325                           
  1326                           ;./calcFunctions.h: 155:     if(PORTAbits.RA4 == 1){
  1327   002130  A8CA               	btfss	202,4,c	;volatile
  1328   002132  EF9D  F010         	goto	u941
  1329   002136  EF9F  F010         	goto	u940
  1330   00213A                     u941:
  1331   00213A  EFAA  F010         	goto	l127
  1332   00213E                     u940:
  1333   00213E                     
  1334                           ;./calcFunctions.h: 157:         buttonNumber = 3;
  1335   00213E  0E00               	movlw	0
  1336   002140  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1337   002142  0E03               	movlw	3
  1338   002144  6E03               	movwf	getKeypad@buttonNumber^0,c
  1339   002146                     l128:
  1340   002146  B8CA               	btfsc	202,4,c	;volatile
  1341   002148  EFA8  F010         	goto	u951
  1342   00214C  EFAA  F010         	goto	u950
  1343   002150                     u951:
  1344   002150  EFA3  F010         	goto	l128
  1345   002154                     u950:
  1346   002154                     l127:
  1347                           
  1348                           ;./calcFunctions.h: 160:     if(PORTAbits.RA5 == 1){
  1349   002154  AACA               	btfss	202,5,c	;volatile
  1350   002156  EFAF  F010         	goto	u961
  1351   00215A  EFB1  F010         	goto	u960
  1352   00215E                     u961:
  1353   00215E  EFBC  F010         	goto	l131
  1354   002162                     u960:
  1355   002162                     
  1356                           ;./calcFunctions.h: 162:         buttonNumber = 6;
  1357   002162  0E00               	movlw	0
  1358   002164  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1359   002166  0E06               	movlw	6
  1360   002168  6E03               	movwf	getKeypad@buttonNumber^0,c
  1361   00216A                     l132:
  1362   00216A  BACA               	btfsc	202,5,c	;volatile
  1363   00216C  EFBA  F010         	goto	u971
  1364   002170  EFBC  F010         	goto	u970
  1365   002174                     u971:
  1366   002174  EFB5  F010         	goto	l132
  1367   002178                     u970:
  1368   002178                     l131:
  1369                           
  1370                           ;./calcFunctions.h: 165:     if(PORTBbits.RB0 == 1){
  1371   002178  A0CB               	btfss	203,0,c	;volatile
  1372   00217A  EFC1  F010         	goto	u981
  1373   00217E  EFC3  F010         	goto	u980
  1374   002182                     u981:
  1375   002182  EFCE  F010         	goto	l135
  1376   002186                     u980:
  1377   002186                     
  1378                           ;./calcFunctions.h: 167:         buttonNumber = 9;
  1379   002186  0E00               	movlw	0
  1380   002188  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1381   00218A  0E09               	movlw	9
  1382   00218C  6E03               	movwf	getKeypad@buttonNumber^0,c
  1383   00218E                     l136:
  1384   00218E  B0CB               	btfsc	203,0,c	;volatile
  1385   002190  EFCC  F010         	goto	u991
  1386   002194  EFCE  F010         	goto	u990
  1387   002198                     u991:
  1388   002198  EFC7  F010         	goto	l136
  1389   00219C                     u990:
  1390   00219C                     l135:
  1391                           
  1392                           ;./calcFunctions.h: 170:     if(PORTBbits.RB1 == 1){
  1393   00219C  A2CB               	btfss	203,1,c	;volatile
  1394   00219E  EFD3  F010         	goto	u1001
  1395   0021A2  EFD5  F010         	goto	u1000
  1396   0021A6                     u1001:
  1397   0021A6  EFE0  F010         	goto	l139
  1398   0021AA                     u1000:
  1399   0021AA                     
  1400                           ;./calcFunctions.h: 172:         buttonNumber = 10;
  1401   0021AA  0E00               	movlw	0
  1402   0021AC  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1403   0021AE  0E0A               	movlw	10
  1404   0021B0  6E03               	movwf	getKeypad@buttonNumber^0,c
  1405   0021B2                     l140:
  1406   0021B2  B2CB               	btfsc	203,1,c	;volatile
  1407   0021B4  EFDE  F010         	goto	u1011
  1408   0021B8  EFE0  F010         	goto	u1010
  1409   0021BC                     u1011:
  1410   0021BC  EFD9  F010         	goto	l140
  1411   0021C0                     u1010:
  1412   0021C0                     l139:
  1413                           
  1414                           ;./calcFunctions.h: 175:     PORTAbits.RA2 = 0;
  1415   0021C0  94CA               	bcf	202,2,c	;volatile
  1416                           
  1417                           ;./calcFunctions.h: 178:     PORTAbits.RA3 = 1;
  1418   0021C2  86CA               	bsf	202,3,c	;volatile
  1419                           
  1420                           ;./calcFunctions.h: 179:     if(PORTAbits.RA4 == 1){
  1421   0021C4  A8CA               	btfss	202,4,c	;volatile
  1422   0021C6  EFE7  F010         	goto	u1021
  1423   0021CA  EFE9  F010         	goto	u1020
  1424   0021CE                     u1021:
  1425   0021CE  EFF4  F010         	goto	l143
  1426   0021D2                     u1020:
  1427   0021D2                     
  1428                           ;./calcFunctions.h: 181:         buttonNumber = 11;
  1429   0021D2  0E00               	movlw	0
  1430   0021D4  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1431   0021D6  0E0B               	movlw	11
  1432   0021D8  6E03               	movwf	getKeypad@buttonNumber^0,c
  1433   0021DA                     l144:
  1434   0021DA  B8CA               	btfsc	202,4,c	;volatile
  1435   0021DC  EFF2  F010         	goto	u1031
  1436   0021E0  EFF4  F010         	goto	u1030
  1437   0021E4                     u1031:
  1438   0021E4  EFED  F010         	goto	l144
  1439   0021E8                     u1030:
  1440   0021E8                     l143:
  1441                           
  1442                           ;./calcFunctions.h: 184:     if(PORTAbits.RA5 == 1){
  1443   0021E8  AACA               	btfss	202,5,c	;volatile
  1444   0021EA  EFF9  F010         	goto	u1041
  1445   0021EE  EFFB  F010         	goto	u1040
  1446   0021F2                     u1041:
  1447   0021F2  EF06  F011         	goto	l147
  1448   0021F6                     u1040:
  1449   0021F6                     
  1450                           ;./calcFunctions.h: 186:         buttonNumber = 12;
  1451   0021F6  0E00               	movlw	0
  1452   0021F8  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1453   0021FA  0E0C               	movlw	12
  1454   0021FC  6E03               	movwf	getKeypad@buttonNumber^0,c
  1455   0021FE                     l148:
  1456   0021FE  BACA               	btfsc	202,5,c	;volatile
  1457   002200  EF04  F011         	goto	u1051
  1458   002204  EF06  F011         	goto	u1050
  1459   002208                     u1051:
  1460   002208  EFFF  F010         	goto	l148
  1461   00220C                     u1050:
  1462   00220C                     l147:
  1463                           
  1464                           ;./calcFunctions.h: 189:     if(PORTBbits.RB0 == 1){
  1465   00220C  A0CB               	btfss	203,0,c	;volatile
  1466   00220E  EF0B  F011         	goto	u1061
  1467   002212  EF0D  F011         	goto	u1060
  1468   002216                     u1061:
  1469   002216  EF18  F011         	goto	l151
  1470   00221A                     u1060:
  1471   00221A                     
  1472                           ;./calcFunctions.h: 191:         buttonNumber = 13;
  1473   00221A  0E00               	movlw	0
  1474   00221C  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1475   00221E  0E0D               	movlw	13
  1476   002220  6E03               	movwf	getKeypad@buttonNumber^0,c
  1477   002222                     l152:
  1478   002222  B0CB               	btfsc	203,0,c	;volatile
  1479   002224  EF16  F011         	goto	u1071
  1480   002228  EF18  F011         	goto	u1070
  1481   00222C                     u1071:
  1482   00222C  EF11  F011         	goto	l152
  1483   002230                     u1070:
  1484   002230                     l151:
  1485                           
  1486                           ;./calcFunctions.h: 194:     if(PORTBbits.RB1 == 1){
  1487   002230  A2CB               	btfss	203,1,c	;volatile
  1488   002232  EF1D  F011         	goto	u1081
  1489   002236  EF1F  F011         	goto	u1080
  1490   00223A                     u1081:
  1491   00223A  EF2A  F011         	goto	l155
  1492   00223E                     u1080:
  1493   00223E                     
  1494                           ;./calcFunctions.h: 196:         buttonNumber = 14;
  1495   00223E  0E00               	movlw	0
  1496   002240  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1497   002242  0E0E               	movlw	14
  1498   002244  6E03               	movwf	getKeypad@buttonNumber^0,c
  1499   002246                     l156:
  1500   002246  B2CB               	btfsc	203,1,c	;volatile
  1501   002248  EF28  F011         	goto	u1091
  1502   00224C  EF2A  F011         	goto	u1090
  1503   002250                     u1091:
  1504   002250  EF23  F011         	goto	l156
  1505   002254                     u1090:
  1506   002254                     l155:
  1507                           
  1508                           ;./calcFunctions.h: 199:     PORTAbits.RA3 = 0;
  1509   002254  96CA               	bcf	202,3,c	;volatile
  1510                           
  1511                           ;./calcFunctions.h: 201:     return buttonNumber;
  1512   002256  C003  F001         	movff	getKeypad@buttonNumber,?_getKeypad
  1513   00225A  C004  F002         	movff	getKeypad@buttonNumber+1,?_getKeypad+1
  1514   00225E  0012               	return		;funcret
  1515   002260                     __end_of_getKeypad:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function _dispConvNumber *****************
  1519 ;; Defined at:
  1520 ;;		line 254 in file "./calcFunctions.h"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  decimalValue    2   13[COMRAM] int 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;		None
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1538 ;;Total ram usage:        2 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 2
  1541 ;; This function calls:
  1542 ;;		___awdiv
  1543 ;;		___awmod
  1544 ;;		___wmul
  1545 ;;		_negSevenSeg
  1546 ;;		_rhsSevenSeg
  1547 ;;		_updateSevenSeg
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text8
  1554   00246C                     __ptext8:
  1555                           	callstack 0
  1556   00246C                     _dispConvNumber:
  1557                           	callstack 28
  1558   00246C                     
  1559                           ;./calcFunctions.h: 255:     if(decimalValue >= 0 && decimalValue <= 99){
  1560   00246C  BE0F               	btfsc	(dispConvNumber@decimalValue+1)^0,7,c
  1561   00246E  EF3B  F012         	goto	u1261
  1562   002472  EF3D  F012         	goto	u1260
  1563   002476                     u1261:
  1564   002476  EF81  F012         	goto	l1480
  1565   00247A                     u1260:
  1566   00247A  BE0F               	btfsc	(dispConvNumber@decimalValue+1)^0,7,c
  1567   00247C  EF4B  F012         	goto	u1270
  1568   002480  500F               	movf	(dispConvNumber@decimalValue+1)^0,w,c
  1569   002482  E107               	bnz	u1271
  1570   002484  0E64               	movlw	100
  1571   002486  5C0E               	subwf	dispConvNumber@decimalValue^0,w,c
  1572   002488  B0D8               	btfsc	status,0,c
  1573   00248A  EF49  F012         	goto	u1271
  1574   00248E  EF4B  F012         	goto	u1270
  1575   002492                     u1271:
  1576   002492  EF81  F012         	goto	l1480
  1577   002496                     u1270:
  1578   002496                     
  1579                           ;./calcFunctions.h: 256:         if(decimalValue < 10){
  1580   002496  BE0F               	btfsc	(dispConvNumber@decimalValue+1)^0,7,c
  1581   002498  EF59  F012         	goto	u1280
  1582   00249C  500F               	movf	(dispConvNumber@decimalValue+1)^0,w,c
  1583   00249E  E107               	bnz	u1281
  1584   0024A0  0E0A               	movlw	10
  1585   0024A2  5C0E               	subwf	dispConvNumber@decimalValue^0,w,c
  1586   0024A4  B0D8               	btfsc	status,0,c
  1587   0024A6  EF57  F012         	goto	u1281
  1588   0024AA  EF59  F012         	goto	u1280
  1589   0024AE                     u1281:
  1590   0024AE  EF61  F012         	goto	l1478
  1591   0024B2                     u1280:
  1592   0024B2                     
  1593                           ;./calcFunctions.h: 257:             rhsSevenSeg(decimalValue);
  1594   0024B2  C00E  F001         	movff	dispConvNumber@decimalValue,rhsSevenSeg@index
  1595   0024B6  C00F  F002         	movff	dispConvNumber@decimalValue+1,rhsSevenSeg@index+1
  1596   0024BA  ECB5  F014         	call	_rhsSevenSeg	;wreg free
  1597                           
  1598                           ;./calcFunctions.h: 258:         }else{
  1599   0024BE  EFD4  F012         	goto	l188
  1600   0024C2                     l1478:
  1601                           
  1602                           ;./calcFunctions.h: 259:             updateSevenSeg(decimalValue/10,decimalValue%10);
  1603   0024C2  C00E  F001         	movff	dispConvNumber@decimalValue,___awdiv@dividend
  1604   0024C6  C00F  F002         	movff	dispConvNumber@decimalValue+1,___awdiv@dividend+1
  1605   0024CA  0E00               	movlw	0
  1606   0024CC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1607   0024CE  0E0A               	movlw	10
  1608   0024D0  6E03               	movwf	___awdiv@divisor^0,c
  1609   0024D2  ECCC  F013         	call	___awdiv	;wreg free
  1610   0024D6  C001  F009         	movff	?___awdiv,updateSevenSeg@lhsIndex
  1611   0024DA  C002  F00A         	movff	?___awdiv+1,updateSevenSeg@lhsIndex+1
  1612   0024DE  C00E  F001         	movff	dispConvNumber@decimalValue,___awmod@dividend
  1613   0024E2  C00F  F002         	movff	dispConvNumber@decimalValue+1,___awmod@dividend+1
  1614   0024E6  0E00               	movlw	0
  1615   0024E8  6E04               	movwf	(___awmod@divisor+1)^0,c
  1616   0024EA  0E0A               	movlw	10
  1617   0024EC  6E03               	movwf	___awmod@divisor^0,c
  1618   0024EE  EC2E  F014         	call	___awmod	;wreg free
  1619   0024F2  C001  F00B         	movff	?___awmod,updateSevenSeg@rhsIndex
  1620   0024F6  C002  F00C         	movff	?___awmod+1,updateSevenSeg@rhsIndex+1
  1621   0024FA  ECFB  F014         	call	_updateSevenSeg	;wreg free
  1622   0024FE  EFD4  F012         	goto	l188
  1623   002502                     l1480:
  1624   002502  AE0F               	btfss	(dispConvNumber@decimalValue+1)^0,7,c
  1625   002504  EF8F  F012         	goto	u1290
  1626   002508  0E9D               	movlw	157
  1627   00250A  5C0E               	subwf	dispConvNumber@decimalValue^0,w,c
  1628   00250C  0EFF               	movlw	255
  1629   00250E  580F               	subwfb	(dispConvNumber@decimalValue+1)^0,w,c
  1630   002510  A0D8               	btfss	status,0,c
  1631   002512  EF8D  F012         	goto	u1291
  1632   002516  EF8F  F012         	goto	u1290
  1633   00251A                     u1291:
  1634   00251A  EF9D  F012         	goto	l1484
  1635   00251E                     u1290:
  1636   00251E  BE0F               	btfsc	(dispConvNumber@decimalValue+1)^0,7,c
  1637   002520  EF9B  F012         	goto	u1301
  1638   002524  500F               	movf	(dispConvNumber@decimalValue+1)^0,w,c
  1639   002526  E109               	bnz	u1300
  1640   002528  0E64               	movlw	100
  1641   00252A  5C0E               	subwf	dispConvNumber@decimalValue^0,w,c
  1642   00252C  A0D8               	btfss	status,0,c
  1643   00252E  EF9B  F012         	goto	u1301
  1644   002532  EF9D  F012         	goto	u1300
  1645   002536                     u1301:
  1646   002536  EFA9  F012         	goto	l1486
  1647   00253A                     u1300:
  1648   00253A                     l1484:
  1649                           
  1650                           ;./calcFunctions.h: 263:         updateSevenSeg(11,11);
  1651   00253A  0E00               	movlw	0
  1652   00253C  6E0A               	movwf	(updateSevenSeg@lhsIndex+1)^0,c
  1653   00253E  0E0B               	movlw	11
  1654   002540  6E09               	movwf	updateSevenSeg@lhsIndex^0,c
  1655   002542  0E00               	movlw	0
  1656   002544  6E0C               	movwf	(updateSevenSeg@rhsIndex+1)^0,c
  1657   002546  0E0B               	movlw	11
  1658   002548  6E0B               	movwf	updateSevenSeg@rhsIndex^0,c
  1659   00254A  ECFB  F014         	call	_updateSevenSeg	;wreg free
  1660                           
  1661                           ;./calcFunctions.h: 264:     }else{
  1662   00254E  EFD4  F012         	goto	l188
  1663   002552                     l1486:
  1664                           
  1665                           ;./calcFunctions.h: 266:         decimalValue *= -1;
  1666   002552  C00E  F001         	movff	dispConvNumber@decimalValue,___wmul@multiplier
  1667   002556  C00F  F002         	movff	dispConvNumber@decimalValue+1,___wmul@multiplier+1
  1668   00255A  0EFF               	movlw	255
  1669   00255C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1670   00255E  6803               	setf	___wmul@multiplicand^0,c
  1671   002560  EC10  F015         	call	___wmul	;wreg free
  1672   002564  C001  F00E         	movff	?___wmul,dispConvNumber@decimalValue
  1673   002568  C002  F00F         	movff	?___wmul+1,dispConvNumber@decimalValue+1
  1674   00256C                     
  1675                           ;./calcFunctions.h: 267:         negSevenSeg(decimalValue/10,decimalValue%10);
  1676   00256C  C00E  F001         	movff	dispConvNumber@decimalValue,___awdiv@dividend
  1677   002570  C00F  F002         	movff	dispConvNumber@decimalValue+1,___awdiv@dividend+1
  1678   002574  0E00               	movlw	0
  1679   002576  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1680   002578  0E0A               	movlw	10
  1681   00257A  6E03               	movwf	___awdiv@divisor^0,c
  1682   00257C  ECCC  F013         	call	___awdiv	;wreg free
  1683   002580  C001  F009         	movff	?___awdiv,negSevenSeg@lhs
  1684   002584  C002  F00A         	movff	?___awdiv+1,negSevenSeg@lhs+1
  1685   002588  C00E  F001         	movff	dispConvNumber@decimalValue,___awmod@dividend
  1686   00258C  C00F  F002         	movff	dispConvNumber@decimalValue+1,___awmod@dividend+1
  1687   002590  0E00               	movlw	0
  1688   002592  6E04               	movwf	(___awmod@divisor+1)^0,c
  1689   002594  0E0A               	movlw	10
  1690   002596  6E03               	movwf	___awmod@divisor^0,c
  1691   002598  EC2E  F014         	call	___awmod	;wreg free
  1692   00259C  C001  F00B         	movff	?___awmod,negSevenSeg@rhs
  1693   0025A0  C002  F00C         	movff	?___awmod+1,negSevenSeg@rhs+1
  1694   0025A4  EC86  F014         	call	_negSevenSeg	;wreg free
  1695   0025A8                     l188:
  1696   0025A8  0012               	return		;funcret
  1697   0025AA                     __end_of_dispConvNumber:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _updateSevenSeg *****************
  1701 ;; Defined at:
  1702 ;;		line 61 in file "./calcFunctions.h"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  lhsIndex        2    8[COMRAM] int 
  1705 ;;  rhsIndex        2   10[COMRAM] int 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1720 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1721 ;;Total ram usage:        4 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 1
  1724 ;; This function calls:
  1725 ;;		_lhsSevenSeg
  1726 ;;		_rhsSevenSeg
  1727 ;; This function is called by:
  1728 ;;		_getValue
  1729 ;;		_dispConvNumber
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           	psect	text9
  1734   0029F6                     __ptext9:
  1735                           	callstack 0
  1736   0029F6                     _updateSevenSeg:
  1737                           	callstack 28
  1738   0029F6                     
  1739                           ;./calcFunctions.h: 62:     rhsSevenSeg(rhsIndex);
  1740   0029F6  C00B  F001         	movff	updateSevenSeg@rhsIndex,rhsSevenSeg@index
  1741   0029FA  C00C  F002         	movff	updateSevenSeg@rhsIndex+1,rhsSevenSeg@index+1
  1742   0029FE  ECB5  F014         	call	_rhsSevenSeg	;wreg free
  1743   002A02                     
  1744                           ;./calcFunctions.h: 63:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1745   002A02  0EC8               	movlw	200
  1746   002A04                     u1357:
  1747   002A04  D000               	nop2	
  1748   002A06  2EE8               	decfsz	wreg,f,c
  1749   002A08  D7FD               	bra	u1357
  1750   002A0A                     
  1751                           ;./calcFunctions.h: 64:     lhsSevenSeg(lhsIndex);
  1752   002A0A  C009  F001         	movff	updateSevenSeg@lhsIndex,lhsSevenSeg@index
  1753   002A0E  C00A  F002         	movff	updateSevenSeg@lhsIndex+1,lhsSevenSeg@index+1
  1754   002A12  ECDF  F014         	call	_lhsSevenSeg	;wreg free
  1755                           
  1756                           ;./calcFunctions.h: 65:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1757   002A16  0EC8               	movlw	200
  1758   002A18                     u1367:
  1759   002A18  D000               	nop2	
  1760   002A1A  2EE8               	decfsz	wreg,f,c
  1761   002A1C  D7FD               	bra	u1367
  1762   002A1E  0012               	return		;funcret
  1763   002A20                     __end_of_updateSevenSeg:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _rhsSevenSeg *****************
  1767 ;; Defined at:
  1768 ;;		line 68 in file "./calcFunctions.h"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  index           2    0[COMRAM] int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1785 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1786 ;;Total ram usage:        3 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_updateSevenSeg
  1792 ;;		_getValue
  1793 ;;		_dispConvNumber
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text10
  1798   00296A                     __ptext10:
  1799                           	callstack 0
  1800   00296A                     _rhsSevenSeg:
  1801                           	callstack 28
  1802   00296A                     
  1803                           ;./calcFunctions.h: 69:     if(index < 0 || index > 9){
  1804   00296A  BE02               	btfsc	(rhsSevenSeg@index+1)^0,7,c
  1805   00296C  EFBA  F014         	goto	u681
  1806   002970  EFBC  F014         	goto	u680
  1807   002974                     u681:
  1808   002974  EFCA  F014         	goto	l1248
  1809   002978                     u680:
  1810   002978  BE02               	btfsc	(rhsSevenSeg@index+1)^0,7,c
  1811   00297A  EFC8  F014         	goto	u691
  1812   00297E  5002               	movf	(rhsSevenSeg@index+1)^0,w,c
  1813   002980  E109               	bnz	u690
  1814   002982  0E0A               	movlw	10
  1815   002984  5C01               	subwf	rhsSevenSeg@index^0,w,c
  1816   002986  A0D8               	btfss	status,0,c
  1817   002988  EFC8  F014         	goto	u691
  1818   00298C  EFCA  F014         	goto	u690
  1819   002990                     u691:
  1820   002990  EFCE  F014         	goto	l81
  1821   002994                     u690:
  1822   002994                     l1248:
  1823                           
  1824                           ;./calcFunctions.h: 70:         index = 10;
  1825   002994  0E00               	movlw	0
  1826   002996  6E02               	movwf	(rhsSevenSeg@index+1)^0,c
  1827   002998  0E0A               	movlw	10
  1828   00299A  6E01               	movwf	rhsSevenSeg@index^0,c
  1829   00299C                     l81:
  1830                           
  1831                           ;./calcFunctions.h: 72:     PORTC = 0b00000100;
  1832   00299C  0E04               	movlw	4
  1833   00299E  6ECC               	movwf	204,c	;volatile
  1834   0029A0                     
  1835                           ;./calcFunctions.h: 73:     PORTD = sevenSegValues[index];
  1836   0029A0  5001               	movf	rhsSevenSeg@index^0,w,c
  1837   0029A2  0F21               	addlw	low _sevenSegValues
  1838   0029A4  6ED9               	movwf	fsr2l,c
  1839   0029A6  6ADA               	clrf	fsr2h,c
  1840   0029A8  50DF               	movf	indf2,w,c
  1841   0029AA  6ECD               	movwf	205,c	;volatile
  1842   0029AC                     
  1843                           ;./calcFunctions.h: 74:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1844   0029AC  0E07               	movlw	7
  1845   0029AE  6E03               	movwf	??_rhsSevenSeg^0,c
  1846   0029B0  0E7D               	movlw	125
  1847   0029B2                     u1377:
  1848   0029B2  2EE8               	decfsz	wreg,f,c
  1849   0029B4  D7FE               	bra	u1377
  1850   0029B6  2E03               	decfsz	??_rhsSevenSeg^0,f,c
  1851   0029B8  D7FC               	bra	u1377
  1852   0029BA  0000               	nop	
  1853   0029BC  0012               	return		;funcret
  1854   0029BE                     __end_of_rhsSevenSeg:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _lhsSevenSeg *****************
  1858 ;; Defined at:
  1859 ;;		line 77 in file "./calcFunctions.h"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  index           2    0[COMRAM] int 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1875 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1876 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1877 ;;Total ram usage:        3 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_updateSevenSeg
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text11
  1887   0029BE                     __ptext11:
  1888                           	callstack 0
  1889   0029BE                     _lhsSevenSeg:
  1890                           	callstack 28
  1891   0029BE                     
  1892                           ;./calcFunctions.h: 78:     if(index < 0){
  1893   0029BE  BE02               	btfsc	(lhsSevenSeg@index+1)^0,7,c
  1894   0029C0  EFE6  F014         	goto	u700
  1895   0029C4  EFE4  F014         	goto	u701
  1896   0029C8                     u701:
  1897   0029C8  EFEA  F014         	goto	l87
  1898   0029CC                     u700:
  1899   0029CC                     
  1900                           ;./calcFunctions.h: 79:         index = 10;
  1901   0029CC  0E00               	movlw	0
  1902   0029CE  6E02               	movwf	(lhsSevenSeg@index+1)^0,c
  1903   0029D0  0E0A               	movlw	10
  1904   0029D2  6E01               	movwf	lhsSevenSeg@index^0,c
  1905   0029D4                     l87:
  1906                           
  1907                           ;./calcFunctions.h: 81:     PORTC = 0b00001000;
  1908   0029D4  0E08               	movlw	8
  1909   0029D6  6ECC               	movwf	204,c	;volatile
  1910   0029D8                     
  1911                           ;./calcFunctions.h: 82:     PORTD = sevenSegValues[index];
  1912   0029D8  5001               	movf	lhsSevenSeg@index^0,w,c
  1913   0029DA  0F21               	addlw	low _sevenSegValues
  1914   0029DC  6ED9               	movwf	fsr2l,c
  1915   0029DE  6ADA               	clrf	fsr2h,c
  1916   0029E0  50DF               	movf	indf2,w,c
  1917   0029E2  6ECD               	movwf	205,c	;volatile
  1918   0029E4                     
  1919                           ;./calcFunctions.h: 83:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1920   0029E4  0E07               	movlw	7
  1921   0029E6  6E03               	movwf	??_lhsSevenSeg^0,c
  1922   0029E8  0E7D               	movlw	125
  1923   0029EA                     u1387:
  1924   0029EA  2EE8               	decfsz	wreg,f,c
  1925   0029EC  D7FE               	bra	u1387
  1926   0029EE  2E03               	decfsz	??_lhsSevenSeg^0,f,c
  1927   0029F0  D7FC               	bra	u1387
  1928   0029F2  0000               	nop	
  1929   0029F4  0012               	return		;funcret
  1930   0029F6                     __end_of_lhsSevenSeg:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _negSevenSeg *****************
  1934 ;; Defined at:
  1935 ;;		line 87 in file "./calcFunctions.h"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  lhs             2    8[COMRAM] int 
  1938 ;;  rhs             2   10[COMRAM] int 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1952 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1953 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1954 ;;Total ram usage:        5 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_dispConvNumber
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text12
  1964   00290C                     __ptext12:
  1965                           	callstack 0
  1966   00290C                     _negSevenSeg:
  1967                           	callstack 29
  1968   00290C                     
  1969                           ;./calcFunctions.h: 88:     if(lhs == 0){
  1970   00290C  5009               	movf	negSevenSeg@lhs^0,w,c
  1971   00290E  100A               	iorwf	(negSevenSeg@lhs+1)^0,w,c
  1972   002910  A4D8               	btfss	status,2,c
  1973   002912  EF8D  F014         	goto	u771
  1974   002916  EF8F  F014         	goto	u770
  1975   00291A                     u771:
  1976   00291A  EF93  F014         	goto	l91
  1977   00291E                     u770:
  1978   00291E                     
  1979                           ;./calcFunctions.h: 89:         lhs = 10;
  1980   00291E  0E00               	movlw	0
  1981   002920  6E0A               	movwf	(negSevenSeg@lhs+1)^0,c
  1982   002922  0E0A               	movlw	10
  1983   002924  6E09               	movwf	negSevenSeg@lhs^0,c
  1984   002926                     l91:
  1985                           
  1986                           ;./calcFunctions.h: 92:     PORTC = 0b00001000;
  1987   002926  0E08               	movlw	8
  1988   002928  6ECC               	movwf	204,c	;volatile
  1989   00292A                     
  1990                           ;./calcFunctions.h: 93:     PORTD = sevenSegValues[lhs];
  1991   00292A  5009               	movf	negSevenSeg@lhs^0,w,c
  1992   00292C  0F21               	addlw	low _sevenSegValues
  1993   00292E  6ED9               	movwf	fsr2l,c
  1994   002930  6ADA               	clrf	fsr2h,c
  1995   002932  50DF               	movf	indf2,w,c
  1996   002934  6ECD               	movwf	205,c	;volatile
  1997   002936                     
  1998                           ;./calcFunctions.h: 94:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1999   002936  0E07               	movlw	7
  2000   002938  6E0D               	movwf	??_negSevenSeg^0,c
  2001   00293A  0E7D               	movlw	125
  2002   00293C                     u1397:
  2003   00293C  2EE8               	decfsz	wreg,f,c
  2004   00293E  D7FE               	bra	u1397
  2005   002940  2E0D               	decfsz	??_negSevenSeg^0,f,c
  2006   002942  D7FC               	bra	u1397
  2007   002944  0000               	nop	
  2008   002946                     
  2009                           ;./calcFunctions.h: 96:     PORTC = 0b00000100;
  2010   002946  0E04               	movlw	4
  2011   002948  6ECC               	movwf	204,c	;volatile
  2012   00294A                     
  2013                           ;./calcFunctions.h: 97:     PORTD = sevenSegValues[rhs] + 0x80;
  2014   00294A  500B               	movf	negSevenSeg@rhs^0,w,c
  2015   00294C  0F21               	addlw	low _sevenSegValues
  2016   00294E  6ED9               	movwf	fsr2l,c
  2017   002950  6ADA               	clrf	fsr2h,c
  2018   002952  50DF               	movf	indf2,w,c
  2019   002954  0F80               	addlw	128
  2020   002956  6ECD               	movwf	205,c	;volatile
  2021                           
  2022                           ;./calcFunctions.h: 98:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2023   002958  0E07               	movlw	7
  2024   00295A  6E0D               	movwf	??_negSevenSeg^0,c
  2025   00295C  0E7D               	movlw	125
  2026   00295E                     u1407:
  2027   00295E  2EE8               	decfsz	wreg,f,c
  2028   002960  D7FE               	bra	u1407
  2029   002962  2E0D               	decfsz	??_negSevenSeg^0,f,c
  2030   002964  D7FC               	bra	u1407
  2031   002966  0000               	nop	
  2032   002968  0012               	return		;funcret
  2033   00296A                     __end_of_negSevenSeg:
  2034                           	callstack 0
  2035                           
  2036 ;; *************** function ___awmod *****************
  2037 ;; Defined at:
  2038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  dividend        2    0[COMRAM] int 
  2041 ;;  divisor         2    2[COMRAM] int 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  sign            1    5[COMRAM] unsigned char 
  2044 ;;  counter         1    4[COMRAM] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2    0[COMRAM] int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2058 ;;Total ram usage:        6 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_dispConvNumber
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text13
  2068   00285C                     __ptext13:
  2069                           	callstack 0
  2070   00285C                     ___awmod:
  2071                           	callstack 29
  2072   00285C  0E00               	movlw	0
  2073   00285E  6E06               	movwf	___awmod@sign^0,c
  2074   002860  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2075   002862  EF37  F014         	goto	u1100
  2076   002866  EF35  F014         	goto	u1101
  2077   00286A                     u1101:
  2078   00286A  EF3D  F014         	goto	l1388
  2079   00286E                     u1100:
  2080   00286E  6C01               	negf	___awmod@dividend^0,c
  2081   002870  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2082   002872  B0D8               	btfsc	status,0,c
  2083   002874  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2084   002876  0E01               	movlw	1
  2085   002878  6E06               	movwf	___awmod@sign^0,c
  2086   00287A                     l1388:
  2087   00287A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2088   00287C  EF44  F014         	goto	u1110
  2089   002880  EF42  F014         	goto	u1111
  2090   002884                     u1111:
  2091   002884  EF48  F014         	goto	l1392
  2092   002888                     u1110:
  2093   002888  6C03               	negf	___awmod@divisor^0,c
  2094   00288A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2095   00288C  B0D8               	btfsc	status,0,c
  2096   00288E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2097   002890                     l1392:
  2098   002890  5003               	movf	___awmod@divisor^0,w,c
  2099   002892  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2100   002894  B4D8               	btfsc	status,2,c
  2101   002896  EF4F  F014         	goto	u1121
  2102   00289A  EF51  F014         	goto	u1120
  2103   00289E                     u1121:
  2104   00289E  EF75  F014         	goto	l1408
  2105   0028A2                     u1120:
  2106   0028A2  0E01               	movlw	1
  2107   0028A4  6E05               	movwf	___awmod@counter^0,c
  2108   0028A6  EF59  F014         	goto	l1398
  2109   0028AA                     l1396:
  2110   0028AA  90D8               	bcf	status,0,c
  2111   0028AC  3603               	rlcf	___awmod@divisor^0,f,c
  2112   0028AE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2113   0028B0  2A05               	incf	___awmod@counter^0,f,c
  2114   0028B2                     l1398:
  2115   0028B2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2116   0028B4  EF5E  F014         	goto	u1131
  2117   0028B8  EF60  F014         	goto	u1130
  2118   0028BC                     u1131:
  2119   0028BC  EF55  F014         	goto	l1396
  2120   0028C0                     u1130:
  2121   0028C0                     l1400:
  2122   0028C0  5003               	movf	___awmod@divisor^0,w,c
  2123   0028C2  5C01               	subwf	___awmod@dividend^0,w,c
  2124   0028C4  5004               	movf	(___awmod@divisor+1)^0,w,c
  2125   0028C6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2126   0028C8  A0D8               	btfss	status,0,c
  2127   0028CA  EF69  F014         	goto	u1141
  2128   0028CE  EF6B  F014         	goto	u1140
  2129   0028D2                     u1141:
  2130   0028D2  EF6F  F014         	goto	l1404
  2131   0028D6                     u1140:
  2132   0028D6  5003               	movf	___awmod@divisor^0,w,c
  2133   0028D8  5E01               	subwf	___awmod@dividend^0,f,c
  2134   0028DA  5004               	movf	(___awmod@divisor+1)^0,w,c
  2135   0028DC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2136   0028DE                     l1404:
  2137   0028DE  90D8               	bcf	status,0,c
  2138   0028E0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2139   0028E2  3203               	rrcf	___awmod@divisor^0,f,c
  2140   0028E4  2E05               	decfsz	___awmod@counter^0,f,c
  2141   0028E6  EF60  F014         	goto	l1400
  2142   0028EA                     l1408:
  2143   0028EA  5006               	movf	___awmod@sign^0,w,c
  2144   0028EC  B4D8               	btfsc	status,2,c
  2145   0028EE  EF7B  F014         	goto	u1151
  2146   0028F2  EF7D  F014         	goto	u1150
  2147   0028F6                     u1151:
  2148   0028F6  EF81  F014         	goto	l1412
  2149   0028FA                     u1150:
  2150   0028FA  6C01               	negf	___awmod@dividend^0,c
  2151   0028FC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2152   0028FE  B0D8               	btfsc	status,0,c
  2153   002900  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2154   002902                     l1412:
  2155   002902  C001  F001         	movff	___awmod@dividend,?___awmod
  2156   002906  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2157   00290A  0012               	return		;funcret
  2158   00290C                     __end_of___awmod:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _calculateFinalValue *****************
  2162 ;; Defined at:
  2163 ;;		line 272 in file "./calcFunctions.h"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  operation       2   12[COMRAM] int 
  2166 ;;  valueX          2   14[COMRAM] int 
  2167 ;;  valueY          2   16[COMRAM] int 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  finalValue      2   20[COMRAM] int 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  2   12[COMRAM] int 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2179 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2182 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2183 ;;Total ram usage:       10 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 2
  2186 ;; This function calls:
  2187 ;;		_Addition_Op
  2188 ;;		_Division_Op
  2189 ;;		_Multiplication_Op
  2190 ;;		_Subtraction_Op
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text14
  2197   0026C6                     __ptext14:
  2198                           	callstack 0
  2199   0026C6                     _calculateFinalValue:
  2200                           	callstack 28
  2201   0026C6                     
  2202                           ;./calcFunctions.h: 273:     int finalValue = 0;
  2203   0026C6  0E00               	movlw	0
  2204   0026C8  6E16               	movwf	(calculateFinalValue@finalValue+1)^0,c
  2205   0026CA  0E00               	movlw	0
  2206   0026CC  6E15               	movwf	calculateFinalValue@finalValue^0,c
  2207                           
  2208                           ;./calcFunctions.h: 274:     switch (operation)
  2209   0026CE  EFA9  F013         	goto	l1502
  2210   0026D2                     l1492:
  2211                           
  2212                           ;./calcFunctions.h: 277:             finalValue = Addition_Op(valueX,valueY);
  2213   0026D2  C00F  F001         	movff	calculateFinalValue@valueX,Addition_Op@valueX
  2214   0026D6  C010  F002         	movff	calculateFinalValue@valueX+1,Addition_Op@valueX+1
  2215   0026DA  C011  F003         	movff	calculateFinalValue@valueY,Addition_Op@valueY
  2216   0026DE  C012  F004         	movff	calculateFinalValue@valueY+1,Addition_Op@valueY+1
  2217   0026E2  EC8F  F015         	call	_Addition_Op	;wreg free
  2218   0026E6  C001  F015         	movff	?_Addition_Op,calculateFinalValue@finalValue
  2219   0026EA  C002  F016         	movff	?_Addition_Op+1,calculateFinalValue@finalValue+1
  2220                           
  2221                           ;./calcFunctions.h: 278:             break;
  2222   0026EE  EFC7  F013         	goto	l193
  2223   0026F2                     l1494:
  2224                           
  2225                           ;./calcFunctions.h: 280:             finalValue = Subtraction_Op(valueX,valueY);
  2226   0026F2  C00F  F001         	movff	calculateFinalValue@valueX,Subtraction_Op@valueX
  2227   0026F6  C010  F002         	movff	calculateFinalValue@valueX+1,Subtraction_Op@valueX+1
  2228   0026FA  C011  F003         	movff	calculateFinalValue@valueY,Subtraction_Op@valueY
  2229   0026FE  C012  F004         	movff	calculateFinalValue@valueY+1,Subtraction_Op@valueY+1
  2230   002702  EC88  F015         	call	_Subtraction_Op	;wreg free
  2231   002706  C001  F015         	movff	?_Subtraction_Op,calculateFinalValue@finalValue
  2232   00270A  C002  F016         	movff	?_Subtraction_Op+1,calculateFinalValue@finalValue+1
  2233                           
  2234                           ;./calcFunctions.h: 281:             break;
  2235   00270E  EFC7  F013         	goto	l193
  2236   002712                     l1496:
  2237                           
  2238                           ;./calcFunctions.h: 283:             finalValue = Multiplication_Op(valueX,valueY);
  2239   002712  C00F  F007         	movff	calculateFinalValue@valueX,Multiplication_Op@valueX
  2240   002716  C010  F008         	movff	calculateFinalValue@valueX+1,Multiplication_Op@valueX+1
  2241   00271A  C011  F009         	movff	calculateFinalValue@valueY,Multiplication_Op@valueY
  2242   00271E  C012  F00A         	movff	calculateFinalValue@valueY+1,Multiplication_Op@valueY+1
  2243   002722  EC39  F015         	call	_Multiplication_Op	;wreg free
  2244   002726  C007  F015         	movff	?_Multiplication_Op,calculateFinalValue@finalValue
  2245   00272A  C008  F016         	movff	?_Multiplication_Op+1,calculateFinalValue@finalValue+1
  2246                           
  2247                           ;./calcFunctions.h: 284:             break;
  2248   00272E  EFC7  F013         	goto	l193
  2249   002732                     l1498:
  2250                           
  2251                           ;./calcFunctions.h: 286:             finalValue = Division_Op(valueX,valueY);
  2252   002732  C00F  F009         	movff	calculateFinalValue@valueX,Division_Op@valueX
  2253   002736  C010  F00A         	movff	calculateFinalValue@valueX+1,Division_Op@valueX+1
  2254   00273A  C011  F00B         	movff	calculateFinalValue@valueY,Division_Op@valueY
  2255   00273E  C012  F00C         	movff	calculateFinalValue@valueY+1,Division_Op@valueY+1
  2256   002742  EC48  F015         	call	_Division_Op	;wreg free
  2257   002746  C009  F015         	movff	?_Division_Op,calculateFinalValue@finalValue
  2258   00274A  C00A  F016         	movff	?_Division_Op+1,calculateFinalValue@finalValue+1
  2259                           
  2260                           ;./calcFunctions.h: 287:             break;
  2261   00274E  EFC7  F013         	goto	l193
  2262   002752                     l1502:
  2263   002752  C00D  F013         	movff	calculateFinalValue@operation,??_calculateFinalValue
  2264   002756  C00E  F014         	movff	calculateFinalValue@operation+1,??_calculateFinalValue+1
  2265                           
  2266                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2267                           ; Switch size 1, requested type "simple"
  2268                           ; Number of cases is 1, Range of values is 0 to 0
  2269                           ; switch strategies available:
  2270                           ; Name         Instructions Cycles
  2271                           ; simple_byte            4     3 (average)
  2272                           ;	Chosen strategy is simple_byte
  2273   00275A  5014               	movf	(??_calculateFinalValue+1)^0,w,c
  2274   00275C  0A00               	xorlw	0	; case 0
  2275   00275E  B4D8               	btfsc	status,2,c
  2276   002760  EFB4  F013         	goto	l1576
  2277   002764  EFC7  F013         	goto	l193
  2278   002768                     l1576:
  2279                           
  2280                           ; Switch size 1, requested type "simple"
  2281                           ; Number of cases is 4, Range of values is 11 to 14
  2282                           ; switch strategies available:
  2283                           ; Name         Instructions Cycles
  2284                           ; simple_byte           13     7 (average)
  2285                           ;	Chosen strategy is simple_byte
  2286   002768  5013               	movf	??_calculateFinalValue^0,w,c
  2287   00276A  0A0B               	xorlw	11	; case 11
  2288   00276C  B4D8               	btfsc	status,2,c
  2289   00276E  EF69  F013         	goto	l1492
  2290   002772  0A07               	xorlw	7	; case 12
  2291   002774  B4D8               	btfsc	status,2,c
  2292   002776  EF79  F013         	goto	l1494
  2293   00277A  0A01               	xorlw	1	; case 13
  2294   00277C  B4D8               	btfsc	status,2,c
  2295   00277E  EF89  F013         	goto	l1496
  2296   002782  0A03               	xorlw	3	; case 14
  2297   002784  B4D8               	btfsc	status,2,c
  2298   002786  EF99  F013         	goto	l1498
  2299   00278A  EFC7  F013         	goto	l193
  2300   00278E                     l193:
  2301                           
  2302                           ;./calcFunctions.h: 290:     return finalValue;
  2303   00278E  C015  F00D         	movff	calculateFinalValue@finalValue,?_calculateFinalValue
  2304   002792  C016  F00E         	movff	calculateFinalValue@finalValue+1,?_calculateFinalValue+1
  2305   002796  0012               	return		;funcret
  2306   002798                     __end_of_calculateFinalValue:
  2307                           	callstack 0
  2308                           
  2309 ;; *************** function _Subtraction_Op *****************
  2310 ;; Defined at:
  2311 ;;		line 297 in file "./calcFunctions.h"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  valueX          2    0[COMRAM] int 
  2314 ;;  valueY          2    2[COMRAM] int 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  2    0[COMRAM] int 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2329 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2330 ;;Total ram usage:        4 bytes
  2331 ;; Hardware stack levels used: 1
  2332 ;; This function calls:
  2333 ;;		Nothing
  2334 ;; This function is called by:
  2335 ;;		_calculateFinalValue
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text15
  2340   002B10                     __ptext15:
  2341                           	callstack 0
  2342   002B10                     _Subtraction_Op:
  2343                           	callstack 29
  2344   002B10                     
  2345                           ;./calcFunctions.h: 298:     return valueX - valueY;
  2346   002B10  5003               	movf	Subtraction_Op@valueY^0,w,c
  2347   002B12  5C01               	subwf	Subtraction_Op@valueX^0,w,c
  2348   002B14  6E01               	movwf	?_Subtraction_Op^0,c
  2349   002B16  5004               	movf	(Subtraction_Op@valueY+1)^0,w,c
  2350   002B18  5802               	subwfb	(Subtraction_Op@valueX+1)^0,w,c
  2351   002B1A  6E02               	movwf	(?_Subtraction_Op+1)^0,c
  2352   002B1C  0012               	return		;funcret
  2353   002B1E                     __end_of_Subtraction_Op:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _Multiplication_Op *****************
  2357 ;; Defined at:
  2358 ;;		line 301 in file "./calcFunctions.h"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  valueX          2    6[COMRAM] int 
  2361 ;;  valueY          2    8[COMRAM] int 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  2    6[COMRAM] int 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2376 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2377 ;;Total ram usage:        4 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; Hardware stack levels required when called: 1
  2380 ;; This function calls:
  2381 ;;		___wmul
  2382 ;; This function is called by:
  2383 ;;		_calculateFinalValue
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text16
  2388   002A72                     __ptext16:
  2389                           	callstack 0
  2390   002A72                     _Multiplication_Op:
  2391                           	callstack 28
  2392   002A72                     
  2393                           ;./calcFunctions.h: 302:     return valueX * valueY;
  2394   002A72  C007  F001         	movff	Multiplication_Op@valueX,___wmul@multiplier
  2395   002A76  C008  F002         	movff	Multiplication_Op@valueX+1,___wmul@multiplier+1
  2396   002A7A  C009  F003         	movff	Multiplication_Op@valueY,___wmul@multiplicand
  2397   002A7E  C00A  F004         	movff	Multiplication_Op@valueY+1,___wmul@multiplicand+1
  2398   002A82  EC10  F015         	call	___wmul	;wreg free
  2399   002A86  C001  F007         	movff	?___wmul,?_Multiplication_Op
  2400   002A8A  C002  F008         	movff	?___wmul+1,?_Multiplication_Op+1
  2401   002A8E  0012               	return		;funcret
  2402   002A90                     __end_of_Multiplication_Op:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function ___wmul *****************
  2406 ;; Defined at:
  2407 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  multiplier      2    0[COMRAM] unsigned int 
  2410 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  product         2    4[COMRAM] unsigned int 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2    0[COMRAM] unsigned int 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, prodl, prodh
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2423 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2425 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2426 ;;Total ram usage:        6 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_getValue
  2432 ;;		_dispConvNumber
  2433 ;;		_Multiplication_Op
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text17
  2438   002A20                     __ptext17:
  2439                           	callstack 0
  2440   002A20                     ___wmul:
  2441                           	callstack 29
  2442   002A20  5001               	movf	___wmul@multiplier^0,w,c
  2443   002A22  0203               	mulwf	___wmul@multiplicand^0,c
  2444   002A24  006F FFCC  F005    	movff	prodl,___wmul@product
  2445   002A2A  006F FFD0  F006    	movff	prodh,___wmul@product+1
  2446   002A30  5001               	movf	___wmul@multiplier^0,w,c
  2447   002A32  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2448   002A34  50F3               	movf	243,w,c
  2449   002A36  2606               	addwf	(___wmul@product+1)^0,f,c
  2450   002A38  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2451   002A3A  0203               	mulwf	___wmul@multiplicand^0,c
  2452   002A3C  50F3               	movf	243,w,c
  2453   002A3E  2606               	addwf	(___wmul@product+1)^0,f,c
  2454   002A40  C005  F001         	movff	___wmul@product,?___wmul
  2455   002A44  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2456   002A48  0012               	return		;funcret
  2457   002A4A                     __end_of___wmul:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _Division_Op *****************
  2461 ;; Defined at:
  2462 ;;		line 305 in file "./calcFunctions.h"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  valueX          2    8[COMRAM] int 
  2465 ;;  valueY          2   10[COMRAM] int 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2    8[COMRAM] int 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2480 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2481 ;;Total ram usage:        4 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 1
  2484 ;; This function calls:
  2485 ;;		___awdiv
  2486 ;; This function is called by:
  2487 ;;		_calculateFinalValue
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text18
  2492   002A90                     __ptext18:
  2493                           	callstack 0
  2494   002A90                     _Division_Op:
  2495                           	callstack 28
  2496   002A90                     
  2497                           ;./calcFunctions.h: 306:     return valueX / valueY;
  2498   002A90  C009  F001         	movff	Division_Op@valueX,___awdiv@dividend
  2499   002A94  C00A  F002         	movff	Division_Op@valueX+1,___awdiv@dividend+1
  2500   002A98  C00B  F003         	movff	Division_Op@valueY,___awdiv@divisor
  2501   002A9C  C00C  F004         	movff	Division_Op@valueY+1,___awdiv@divisor+1
  2502   002AA0  ECCC  F013         	call	___awdiv	;wreg free
  2503   002AA4  C001  F009         	movff	?___awdiv,?_Division_Op
  2504   002AA8  C002  F00A         	movff	?___awdiv+1,?_Division_Op+1
  2505   002AAC  0012               	return		;funcret
  2506   002AAE                     __end_of_Division_Op:
  2507                           	callstack 0
  2508                           
  2509 ;; *************** function ___awdiv *****************
  2510 ;; Defined at:
  2511 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  dividend        2    0[COMRAM] int 
  2514 ;;  divisor         2    2[COMRAM] int 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  quotient        2    6[COMRAM] int 
  2517 ;;  sign            1    5[COMRAM] unsigned char 
  2518 ;;  counter         1    4[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2    0[COMRAM] int 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2529 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2531 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2532 ;;Total ram usage:        8 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_dispConvNumber
  2538 ;;		_Division_Op
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text19
  2543   002798                     __ptext19:
  2544                           	callstack 0
  2545   002798                     ___awdiv:
  2546                           	callstack 29
  2547   002798  0E00               	movlw	0
  2548   00279A  6E06               	movwf	___awdiv@sign^0,c
  2549   00279C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2550   00279E  EFD5  F013         	goto	u710
  2551   0027A2  EFD3  F013         	goto	u711
  2552   0027A6                     u711:
  2553   0027A6  EFDB  F013         	goto	l1276
  2554   0027AA                     u710:
  2555   0027AA  6C03               	negf	___awdiv@divisor^0,c
  2556   0027AC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2557   0027AE  B0D8               	btfsc	status,0,c
  2558   0027B0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2559   0027B2  0E01               	movlw	1
  2560   0027B4  6E06               	movwf	___awdiv@sign^0,c
  2561   0027B6                     l1276:
  2562   0027B6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2563   0027B8  EFE2  F013         	goto	u720
  2564   0027BC  EFE0  F013         	goto	u721
  2565   0027C0                     u721:
  2566   0027C0  EFE8  F013         	goto	l1282
  2567   0027C4                     u720:
  2568   0027C4  6C01               	negf	___awdiv@dividend^0,c
  2569   0027C6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2570   0027C8  B0D8               	btfsc	status,0,c
  2571   0027CA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2572   0027CC  0E01               	movlw	1
  2573   0027CE  1A06               	xorwf	___awdiv@sign^0,f,c
  2574   0027D0                     l1282:
  2575   0027D0  0E00               	movlw	0
  2576   0027D2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2577   0027D4  0E00               	movlw	0
  2578   0027D6  6E07               	movwf	___awdiv@quotient^0,c
  2579   0027D8  5003               	movf	___awdiv@divisor^0,w,c
  2580   0027DA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2581   0027DC  B4D8               	btfsc	status,2,c
  2582   0027DE  EFF3  F013         	goto	u731
  2583   0027E2  EFF5  F013         	goto	u730
  2584   0027E6                     u731:
  2585   0027E6  EF1D  F014         	goto	l1304
  2586   0027EA                     u730:
  2587   0027EA  0E01               	movlw	1
  2588   0027EC  6E05               	movwf	___awdiv@counter^0,c
  2589   0027EE  EFFD  F013         	goto	l1290
  2590   0027F2                     l1288:
  2591   0027F2  90D8               	bcf	status,0,c
  2592   0027F4  3603               	rlcf	___awdiv@divisor^0,f,c
  2593   0027F6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2594   0027F8  2A05               	incf	___awdiv@counter^0,f,c
  2595   0027FA                     l1290:
  2596   0027FA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2597   0027FC  EF02  F014         	goto	u741
  2598   002800  EF04  F014         	goto	u740
  2599   002804                     u741:
  2600   002804  EFF9  F013         	goto	l1288
  2601   002808                     u740:
  2602   002808                     l1292:
  2603   002808  90D8               	bcf	status,0,c
  2604   00280A  3607               	rlcf	___awdiv@quotient^0,f,c
  2605   00280C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2606   00280E  5003               	movf	___awdiv@divisor^0,w,c
  2607   002810  5C01               	subwf	___awdiv@dividend^0,w,c
  2608   002812  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2609   002814  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2610   002816  A0D8               	btfss	status,0,c
  2611   002818  EF10  F014         	goto	u751
  2612   00281C  EF12  F014         	goto	u750
  2613   002820                     u751:
  2614   002820  EF17  F014         	goto	l1300
  2615   002824                     u750:
  2616   002824  5003               	movf	___awdiv@divisor^0,w,c
  2617   002826  5E01               	subwf	___awdiv@dividend^0,f,c
  2618   002828  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2619   00282A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2620   00282C  8007               	bsf	___awdiv@quotient^0,0,c
  2621   00282E                     l1300:
  2622   00282E  90D8               	bcf	status,0,c
  2623   002830  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2624   002832  3203               	rrcf	___awdiv@divisor^0,f,c
  2625   002834  2E05               	decfsz	___awdiv@counter^0,f,c
  2626   002836  EF04  F014         	goto	l1292
  2627   00283A                     l1304:
  2628   00283A  5006               	movf	___awdiv@sign^0,w,c
  2629   00283C  B4D8               	btfsc	status,2,c
  2630   00283E  EF23  F014         	goto	u761
  2631   002842  EF25  F014         	goto	u760
  2632   002846                     u761:
  2633   002846  EF29  F014         	goto	l1308
  2634   00284A                     u760:
  2635   00284A  6C07               	negf	___awdiv@quotient^0,c
  2636   00284C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2637   00284E  B0D8               	btfsc	status,0,c
  2638   002850  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2639   002852                     l1308:
  2640   002852  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2641   002856  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2642   00285A  0012               	return		;funcret
  2643   00285C                     __end_of___awdiv:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _Addition_Op *****************
  2647 ;; Defined at:
  2648 ;;		line 293 in file "./calcFunctions.h"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  valueX          2    0[COMRAM] int 
  2651 ;;  valueY          2    2[COMRAM] int 
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  2    0[COMRAM] int 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2663 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2667 ;;Total ram usage:        4 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_calculateFinalValue
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text20
  2677   002B1E                     __ptext20:
  2678                           	callstack 0
  2679   002B1E                     _Addition_Op:
  2680                           	callstack 29
  2681   002B1E                     
  2682                           ;./calcFunctions.h: 294:     return valueX + valueY;
  2683   002B1E  5003               	movf	Addition_Op@valueY^0,w,c
  2684   002B20  2401               	addwf	Addition_Op@valueX^0,w,c
  2685   002B22  6E01               	movwf	?_Addition_Op^0,c
  2686   002B24  5004               	movf	(Addition_Op@valueY+1)^0,w,c
  2687   002B26  2002               	addwfc	(Addition_Op@valueX+1)^0,w,c
  2688   002B28  6E02               	movwf	(?_Addition_Op+1)^0,c
  2689   002B2A  0012               	return		;funcret
  2690   002B2C                     __end_of_Addition_Op:
  2691                           	callstack 0
  2692                           
  2693                           	psect	smallconst
  2694   002000                     __psmallconst:
  2695                           	callstack 0
  2696   002000  00                 	db	0
  2697   002001  00                 	db	0	; dummy byte at the end
  2698   000000                     
  2699                           	psect	rparam
  2700   000000                     
  2701                           	psect	config
  2702                           
  2703                           ;Config register CONFIG1L @ 0x300000
  2704                           ;	External Oscillator Selection
  2705                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2706                           ;	Reset Oscillator Selection
  2707                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2708   300000                     	org	3145728
  2709   300000  F8                 	db	248
  2710                           
  2711                           ;Config register CONFIG1H @ 0x300001
  2712                           ;	Clock out Enable bit
  2713                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2714                           ;	PRLOCKED One-Way Set Enable bit
  2715                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2716                           ;	Clock Switch Enable bit
  2717                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2718                           ;	Fail-Safe Clock Monitor Enable bit
  2719                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2720   300001                     	org	3145729
  2721   300001  FF                 	db	255
  2722                           
  2723                           ;Config register CONFIG2L @ 0x300002
  2724                           ;	MCLR Enable bit
  2725                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2726                           ;	Power-up timer selection bits
  2727                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2728                           ;	Multi-vector enable bit
  2729                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2730                           ;	IVTLOCK bit One-way set enable bit
  2731                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2732                           ;	Low Power BOR Enable bit
  2733                           ;	LPBOREN = OFF, ULPBOR disabled
  2734                           ;	Brown-out Reset Enable bits
  2735                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2736   300002                     	org	3145730
  2737   300002  FF                 	db	255
  2738                           
  2739                           ;Config register CONFIG2H @ 0x300003
  2740                           ;	Brown-out Reset Voltage Selection bits
  2741                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2742                           ;	ZCD Disable bit
  2743                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2744                           ;	PPSLOCK bit One-Way Set Enable bit
  2745                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2746                           ;	Stack Full/Underflow Reset Enable bit
  2747                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2748                           ;	Debugger Enable bit
  2749                           ;	DEBUG = OFF, Background debugger disabled
  2750                           ;	Extended Instruction Set Enable bit
  2751                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2752   300003                     	org	3145731
  2753   300003  FF                 	db	255
  2754                           
  2755                           ;Config register CONFIG3L @ 0x300004
  2756                           ;	WDT Period selection bits
  2757                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2758                           ;	WDT operating mode
  2759                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2760   300004                     	org	3145732
  2761   300004  9F                 	db	159
  2762                           
  2763                           ;Config register CONFIG3H @ 0x300005
  2764                           ;	WDT Window Select bits
  2765                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2766                           ;	WDT input clock selector
  2767                           ;	WDTCCS = SC, Software Control
  2768   300005                     	org	3145733
  2769   300005  FF                 	db	255
  2770                           
  2771                           ;Config register CONFIG4L @ 0x300006
  2772                           ;	Boot Block Size selection bits
  2773                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2774                           ;	Boot Block enable bit
  2775                           ;	BBEN = OFF, Boot block disabled
  2776                           ;	Storage Area Flash enable bit
  2777                           ;	SAFEN = OFF, SAF disabled
  2778                           ;	Application Block write protection bit
  2779                           ;	WRTAPP = OFF, Application Block not write protected
  2780   300006                     	org	3145734
  2781   300006  FF                 	db	255
  2782                           
  2783                           ;Config register CONFIG4H @ 0x300007
  2784                           ;	Boot Block Write Protection bit
  2785                           ;	WRTB = OFF, Boot Block not write-protected
  2786                           ;	Configuration Register Write Protection bit
  2787                           ;	WRTC = OFF, Configuration registers not write-protected
  2788                           ;	Data EEPROM Write Protection bit
  2789                           ;	WRTD = OFF, Data EEPROM not write-protected
  2790                           ;	SAF Write protection bit
  2791                           ;	WRTSAF = OFF, SAF not Write Protected
  2792                           ;	Low Voltage Programming Enable bit
  2793                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2794   300007                     	org	3145735
  2795   300007  FF                 	db	255
  2796                           
  2797                           ;Config register CONFIG5L @ 0x300008
  2798                           ;	PFM and Data EEPROM Code Protection bit
  2799                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2800   300008                     	org	3145736
  2801   300008  FF                 	db	255
  2802                           
  2803                           ;Config register CONFIG5H @ 0x300009
  2804                           ;	unspecified, using default values
  2805   300009                     	org	3145737
  2806   300009  FF                 	db	255
  2807                           tosu	equ	0x3FFF
  2808                           tosh	equ	0x3FFE
  2809                           tosl	equ	0x3FFD
  2810                           stkptr	equ	0x3FFC
  2811                           pclatu	equ	0x3FFB
  2812                           pclath	equ	0x3FFA
  2813                           pcl	equ	0x3FF9
  2814                           tblptru	equ	0x3FF8
  2815                           tblptrh	equ	0x3FF7
  2816                           tblptrl	equ	0x3FF6
  2817                           tablat	equ	0x3FF5
  2818                           prodh	equ	0x3FF4
  2819                           prodl	equ	0x3FF3
  2820                           indf0	equ	0x3FEF
  2821                           postinc0	equ	0x3FEE
  2822                           postdec0	equ	0x3FED
  2823                           preinc0	equ	0x3FEC
  2824                           plusw0	equ	0x3FEB
  2825                           fsr0h	equ	0x3FEA
  2826                           fsr0l	equ	0x3FE9
  2827                           wreg	equ	0x3FE8
  2828                           indf1	equ	0x3FE7
  2829                           postinc1	equ	0x3FE6
  2830                           postdec1	equ	0x3FE5
  2831                           preinc1	equ	0x3FE4
  2832                           plusw1	equ	0x3FE3
  2833                           fsr1h	equ	0x3FE2
  2834                           fsr1l	equ	0x3FE1
  2835                           bsr	equ	0x3FE0
  2836                           indf2	equ	0x3FDF
  2837                           postinc2	equ	0x3FDE
  2838                           postdec2	equ	0x3FDD
  2839                           preinc2	equ	0x3FDC
  2840                           plusw2	equ	0x3FDB
  2841                           fsr2h	equ	0x3FDA
  2842                           fsr2l	equ	0x3FD9
  2843                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    getValue@isEqualSign	PTR int  size(1) Largest target is 2
		 -> main@isEqualSign(COMRAM[2]), 

    getValue@operation	PTR int  size(1) Largest target is 2
		 -> main@Operation_REG(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_calculateFinalValue
    _main->_getValue
    _getValue->_updateSevenSeg
    _dispConvNumber->_negSevenSeg
    _updateSevenSeg->___awdiv
    _negSevenSeg->___awdiv
    _calculateFinalValue->_Division_Op
    _Multiplication_Op->___wmul
    _Division_Op->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   11339
                                             22 COMRAM    10    10      0
                _calculateFinalValue
                     _dispConvNumber
                          _getKeypad
                           _getValue
                 _initializeAllPorts
 ---------------------------------------------------------------------------------
 (1) _initializeAllPorts                                   0     0      0       0
                    _initializePORTA
                    _initializePORTB
                    _initializePORTC
                    _initializePORTD
 ---------------------------------------------------------------------------------
 (2) _initializePORTD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializePORTC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializePORTB                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializePORTA                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getValue                                            10     8      2    3576
                                             12 COMRAM    10     8      2
                             ___wmul
                          _getKeypad
                        _rhsSevenSeg
                     _updateSevenSeg
 ---------------------------------------------------------------------------------
 (2) _getKeypad                                            4     2      2      39
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _dispConvNumber                                       2     0      2    4632
                                             13 COMRAM     2     0      2
                            ___awdiv
                            ___awmod
                             ___wmul
                        _negSevenSeg
                        _rhsSevenSeg
                     _updateSevenSeg
 ---------------------------------------------------------------------------------
 (2) _updateSevenSeg                                       4     0      4    1372
                                              8 COMRAM     4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                        _lhsSevenSeg
                        _rhsSevenSeg
 ---------------------------------------------------------------------------------
 (3) _rhsSevenSeg                                          3     1      2     447
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _lhsSevenSeg                                          3     1      2     121
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _negSevenSeg                                          5     1      4     219
                                              8 COMRAM     5     1      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _calculateFinalValue                                 10     4      6    2760
                                             12 COMRAM    10     4      6
                        _Addition_Op
                        _Division_Op
                  _Multiplication_Op
                     _Subtraction_Op
 ---------------------------------------------------------------------------------
 (2) _Subtraction_Op                                       4     0      4     196
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _Multiplication_Op                                    4     0      4     963
                                              6 COMRAM     4     0      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     767
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Division_Op                                          4     0      4     952
                                              8 COMRAM     4     0      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Addition_Op                                          4     0      4     196
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _calculateFinalValue
     _Addition_Op
     _Division_Op
       ___awdiv
     _Multiplication_Op
       ___wmul
     _Subtraction_Op
   _dispConvNumber
     ___awdiv
     ___awmod
     ___wmul
     _negSevenSeg
       ___awdiv (ARG)
       ___awmod (ARG)
     _rhsSevenSeg
     _updateSevenSeg
       ___awdiv (ARG)
       ___awmod (ARG)
       _lhsSevenSeg (ARG)
       _rhsSevenSeg (ARG)
   _getKeypad
   _getValue
     ___wmul
     _getKeypad
     _rhsSevenSeg
     _updateSevenSeg
   _initializeAllPorts
     _initializePORTA
     _initializePORTB
     _initializePORTC
     _initializePORTD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      77        0.0%
BITBIGSFRllhhhh    549      0       0      71        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlll       240      0       0      75        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      2C       1       46.3%
BITBIGSFRh          32      0       0      68        0.0%
BITBIGSFRllhhhl      F      0       0      72        0.0%
BITBIGSFRllhhl       F      0       0      73        0.0%
BITBIGSFRllhl        F      0       0      74        0.0%
BITBIGSFRlhh         4      0       0      69        0.0%
BITBIGSFRlhl         4      0       0      70        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      76        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Apr 08 19:23:58 2024

                ??_Division_Op 000D                             l63 2B0E                             l72 2AD4  
                           l81 299C                             l66 2AFC                             l91 2926  
                           l75 2AC0                             l92 2968                             l84 29BC  
                           l69 2AE8                             l78 2A1E                             l87 29D4  
                           l95 202C                             l88 29F4                             l96 201E  
                           l99 2050                   ___awdiv@sign 0006            ___wmul@multiplicand 0003  
                          l100 2042                            l111 20C0                            l103 2074  
                          l200 2B2A                            l120 20FA                            l112 20B2  
                          l104 2066                            l203 2B1C                            l131 2178  
                          l123 212C                            l115 20E4                            l107 2098  
                          l140 21B2                            l132 216A                            l124 211E  
                          l116 20D6                            l108 208A                            l206 2A8E  
                          l151 2230                            l143 21E8                            l135 219C  
                          l127 2154                            l119 2108                            l152 2222  
                          l144 21DA                            l136 218E                            l128 2146  
                          l209 2AAC                            l155 2254                            l147 220C  
                          l139 21C0                            l171 2462                            l156 2246  
                          l148 21FE                            l229 2A48                            l159 225E  
                          l193 278E                            l177 246A                            l460 285A  
                          l188 25A8                            l197 2796                            l473 290A  
                          l970 2AEA                            l972 2AD6                            l974 2AC2  
                          l976 2AAE                            u700 29CC                            u701 29C8  
                          u710 27AA                            u711 27A6                            u720 27C4  
                          u800 203A                            u721 27C0                            u801 2036  
                          u730 27EA                            u810 2050                            u731 27E6  
                          u811 204C                            u740 2808                            u900 20F2  
                          u820 205E                            u741 2804                            u901 20EE  
                          u821 205A                            u750 2824                            u910 2108  
                          u830 2074                            u751 2820                            u911 2104  
                          u831 2070                            u760 284A                            u680 2978  
                          u920 2116                            u840 2082                            u761 2846  
                          u681 2974                            u921 2112                            u841 207E  
                          u770 291E                            u690 2994                            u930 212C  
                          u850 2098                            u771 291A                            u691 2990  
                          u931 2128                            u851 2094                            u940 213E  
                          u860 20AA                            u780 2016                            u941 213A  
                          u861 20A6                            u781 2012                            u950 2154  
                          u870 20C0                            u790 202C                            u951 2150  
                          u871 20BC                            u791 2028                            u960 2162  
                          u880 20CE                            u961 215E                            u881 20CA  
                          u970 2178                            u890 20E4                            u971 2174  
                          u891 20E0                            u980 2186                            u981 2182  
                          u990 219C                            u991 2198                   ___awmod@sign 0006  
                          wreg 3FE8                   ?_negSevenSeg 0009            getValue@isEqualSign 000E  
                         l1300 282E                           l1302 2834                           l1304 283A  
                         l1400 28C0                           l1320 291E                           l1312 29F6  
                         l1306 284A                           l1410 28FA                           l1402 28D6  
                         l1322 292A                           l1250 29A0                           l1314 2A02  
                         l1330 2002                           l1082 2AFE                           l1308 2852  
                         l1412 2902                           l1404 28DE                           l1324 2936  
                         l1260 29E4                           l1252 29AC                           l1244 296A  
                         l1316 2A0A                           l1340 20AA                           l1332 2016  
                         l1420 2270                           l1270 279C                           l1262 2A20  
                         l1502 2752                           l1406 28E4                           l1326 2946  
                         l1318 290C                           l1254 29BE                           l1246 2978  
                         l1350 2162                           l1342 20CE                           l1334 203A  
                         l1430 22CA                           l1422 2284                           l1510 25AE  
                         l1280 27CC                           l1272 27AA                           l1264 2A40  
                         l1408 28EA                           l1328 294A                           l1256 29CC  
                         l1248 2994                           l1360 221A                           l1352 2186  
                         l1344 20F2                           l1336 205E                           l1440 2334  
                         l1432 22D6                           l1424 2290                           l1416 2260  
                         l1520 25AE                           l1512 25AE                           l1290 27FA  
                         l1282 27D0                           l1274 27B2                           l1258 29D8  
                         l1362 223E                           l1354 21AA                           l1346 2116  
                         l1338 2082                           l1442 2348                           l1450 2396  
                         l1434 22E4                           l1426 229E                           l1418 2268  
                         l1530 25BE                           l1522 25B6                           l1514 25AE  
                         l1364 2B1E                           l1292 2808                           l1284 27D8  
                         l1276 27B6                           l1268 2798                           l1372 2A72  
                         l1380 285C                           l1356 21D2                           l1348 213E  
                         l1460 23E2                           l1452 23AA                           l1444 236C  
                         l1436 230A                           l1428 22BA                           l1540 2626  
                         l1532 25D6                           l1524 25BE                           l1516 25AE  
                         l1508 25AA                           l1294 280E                           l1286 27EA  
                         l1278 27C4                           l1390 2888                           l1382 2860  
                         l1470 246C                           l1358 21F6                           l1462 23FE  
                         l1454 23BC                           l1446 237E                           l1438 2318  
                         l1550 2692                           l1542 263E                           l1534 25E2  
                         l1526 25BE                           l1518 25AE                           l1296 2824  
                         l1288 27F2                           l1376 2A90                           l1368 2B10  
                         l1392 2890                           l1384 286E                           l1472 247A  
                         l1480 2502                           l1464 2412                           l1456 23C4  
                         l1448 2386                           l1552 269E                           l1544 264A  
                         l1536 25EE                           l1528 25BE                           l1298 282C  
                         l1490 26C6                           l1394 28A2                           l1386 2876  
                         l1482 251E                           l1474 2496                           l1466 2432  
                         l1458 23D4                           l1554 26AA                           l1546 2656  
                         l1538 260A                           l1492 26D2                           l1396 28AA  
                         l1388 287A                           l1484 253A                           l1476 24B2  
                         l1468 2448                           l1548 266A                    _Addition_Op 2B1E  
                         l1494 26F2                           l1398 28B2                           l1486 2552  
                         l1478 24C2                           l1576 2768                           l1496 2712  
                         l1488 256C                           l1498 2732               ??_dispConvNumber 0010  
                         u1000 21AA                           u1001 21A6                           u1010 21C0  
                         u1011 21BC                           u1100 286E                           u1020 21D2  
                         u1101 286A                           u1021 21CE                           u1110 2888  
                         u1030 21E8                           u1111 2884                           u1031 21E4  
                         u1120 28A2                           u1040 21F6                           u1200 2318  
                         u1121 289E                           u1041 21F2                           u1201 2314  
                         u1130 28C0                           u1050 220C                           u1210 2334  
                         u1131 28BC                           u1051 2208                           u1211 2330  
                         u1140 28D6                           u1300 253A                           u1060 221A  
                         u1220 23AA                           u1141 28D2                           u1301 2536  
                         u1061 2216                           u1221 23A6                           u1150 28FA  
                         u1070 2230                           u1230 23E2                           u1310 260A  
                         u1151 28F6                           u1071 222C                           u1231 23DE  
                         u1311 2606                           u1080 223E                           u1240 23FE  
                         u1160 229E                           u1320 2626                           u1081 223A  
                         u1241 23FA                           u1161 229A                           u1321 2622  
                         u1090 2254                           u1250 2462                           u1170 22BA  
                         u1330 266A                           u1091 2250                           u1251 245E  
                         u1171 22B6                           u1331 2666                           u1260 247A  
                         u1180 22E4                           u1340 26BE                           u1261 2476  
                         u1181 22E0                           u1341 26BA                           _LATA 3FBA  
                         u1270 2496                           u1190 230A                           _LATB 3FBB  
                         u1407 295E                           u1271 2492                           u1191 2306  
                         _LATC 3FBC                           u1280 24B2                           _LATD 3FBD  
                         u1281 24AE                           u1290 251E                           u1291 251A  
                         u1357 2A04                           u1367 2A18                           u1377 29B2  
                         u1387 29EA                           u1397 293C         __end_of_updateSevenSeg 2A20  
       __end_of_Subtraction_Op 2B1E                           _main 25AA                           fsr2h 3FDA  
                         indf2 3FDF                           fsr1l 3FE1                           fsr2l 3FD9  
                         prodh 3FF4                           prodl 3FF3                           start FFFC  
                 ___param_bank 0000              _Multiplication_Op 2A72     dispConvNumber@decimalValue 000E  
                 ?_lhsSevenSeg 0001             ?_Multiplication_Op 0007                          ?_main 0001  
              __end_of___awdiv 285C                __end_of___awmod 290C                ___awdiv@divisor 0003  
            ??_initializePORTA 0001              ??_initializePORTB 0001              ??_initializePORTC 0001  
            ??_initializePORTD 0001                ___awdiv@counter 0005                          _PORTA 3FCA  
                        _PORTB 3FCB                          _PORTC 3FCC                          _PORTD 3FCD  
          __end_of_Division_Op 2AAE                          _TRISA 3FC2                          _TRISB 3FC3  
                        _TRISC 3FC4                          _TRISD 3FC5            ??_Multiplication_Op 000B  
                        tablat 3FF5                          plusw2 3FDB                ?_updateSevenSeg 0009  
              ?_Subtraction_Op 0001                          status 3FD8      __end_of_Multiplication_Op 2A90  
              __initialization 2A4A                   __end_of_main 26C6                         ??_main 0017  
                __activetblptr 0003            _calculateFinalValue 26C6               ___awdiv@dividend 0001  
                       _ANSELA 3A40                         _ANSELB 3A50                         _ANSELC 3A60  
                       _ANSELD 3A70                   ?_rhsSevenSeg 0001               __end_of_getValue 246C  
         ?_calculateFinalValue 000D                         ___wmul 2A20                      ??___awdiv 0005  
                    ??___awmod 0005                    _Division_Op 2A90               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
              main@X_Input_REG 0019                   __pdataCOMRAM 0021                   __mediumconst 0000  
                       tblptrh 3FF7                         tblptrl 3FF6                         tblptru 3FF8  
              main@Y_Input_REG 001B                     __accesstop 0060        __end_of__initialization 2A6C  
                ___rparam_used 0001          ??_calculateFinalValue 0013                 __pcstackCOMRAM 0001  
            main@Operation_REG 001F         main@Display_Result_REG 0017                   ?_Addition_Op 0001  
            Division_Op@valueX 0009              Division_Op@valueY 000B              getValue@operation 000D  
              _initializePORTA 2AEA                _initializePORTB 2AD6                _initializePORTC 2AC2  
              _initializePORTD 2AAE                        ?___wmul 0001               ??_updateSevenSeg 000D  
             ??_Subtraction_Op 0005                      ?_getValue 000D              __end_of_getKeypad 2260  
                      __Hparam 0000     __end_of_initializeAllPorts 2B10                        __Lparam 0000  
                      ___awdiv 2798                        ___awmod 285C                   __psmallconst 2000  
                      __pcinit 2A4A                        __ramtop 2000                        __ptext0 25AA  
                      __ptext1 2AFE                        __ptext2 2AAE                        __ptext3 2AC2  
                      __ptext4 2AD6                        __ptext5 2AEA                        __ptext6 2260  
                      __ptext7 2002                        __ptext8 246C                        __ptext9 29F6  
             ___awmod@dividend 0001         updateSevenSeg@lhsIndex 0009                     ??_getValue 000F  
         end_of_initialization 2A6C         updateSevenSeg@rhsIndex 000B        __end_of_initializePORTA 2AFE  
      __end_of_initializePORTB 2AEA        __end_of_initializePORTC 2AD6        __end_of_initializePORTD 2AC2  
             rhsSevenSeg@index 0001                        postdec1 3FE5                        postdec2 3FDD  
                      postinc0 3FEE                        postinc2 3FDE                   ?_Division_Op 0009  
                    _PORTAbits 3FCA                      _PORTBbits 3FCB                 __end_of___wmul 2A4A  
                __pidataCOMRAM 2B2C                 _sevenSegValues 0021            start_initialization 2A4A  
                ??_negSevenSeg 000D    __end_of_calculateFinalValue 2798               ?_initializePORTA 0001  
             ?_initializePORTB 0001               ?_initializePORTC 0001               ?_initializePORTD 0001  
 calculateFinalValue@operation 000D                       ??___wmul 0005                  ??_lhsSevenSeg 0003  
         Subtraction_Op@valueX 0001           Subtraction_Op@valueY 0003            __end_of_negSevenSeg 296A  
    calculateFinalValue@valueX 000F      calculateFinalValue@valueY 0011                main@isEqualSign 001D  
               _dispConvNumber 246C                      _getKeypad 2002                       ?___awdiv 0001  
calculateFinalValue@finalValue 0015                       ?___awmod 0001             _initializeAllPorts 2AFE  
                  __smallconst 2000            __end_of_lhsSevenSeg 29F6            ?_initializeAllPorts 0001  
                ??_rhsSevenSeg 0003                 ___wmul@product 0005         __end_of_dispConvNumber 25AA  
         ??_initializeAllPorts 0001                     ?_getKeypad 0001        Multiplication_Op@valueX 0007  
      Multiplication_Op@valueY 0009              ___wmul@multiplier 0001                    _negSevenSeg 290C  
                    copy_data0 2A5E              Addition_Op@valueX 0001              Addition_Op@valueY 0003  
               getValue@value1 0013                 getValue@value2 0015                ?_dispConvNumber 000E  
          __end_of_rhsSevenSeg 29BE                       __Hrparam 0000                       __Lrparam 0000  
                  _lhsSevenSeg 29BE                 negSevenSeg@lhs 0009                 negSevenSeg@rhs 000B  
        getKeypad@buttonNumber 0003                       __ptext10 296A                       __ptext11 29BE  
                     __ptext20 2B1E                       __ptext12 290C                       __ptext13 285C  
                     __ptext14 26C6                       __ptext15 2B10                       __ptext16 2A72  
                     __ptext17 2A20                       __ptext18 2A90                       __ptext19 2798  
                     _getValue 2260                  ??_Addition_Op 0005                       isa$xinst 0000  
         getValue@decimalValue 0011                    ??_getKeypad 0003                    _rhsSevenSeg 296A  
          __end_of_Addition_Op 2B2C               lhsSevenSeg@index 0001                 _updateSevenSeg 29F6  
               _Subtraction_Op 2B10  
