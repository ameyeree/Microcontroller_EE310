

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 21 21:12:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=4,class=CODE,delta=1
    23                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    24                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F47K42 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   0045CE                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _sevenSegValues
    69   0045CE  3F                 	db	63
    70   0045CF  06                 	db	6
    71   0045D0  5B                 	db	91
    72   0045D1  4F                 	db	79
    73   0045D2  66                 	db	102
    74   0045D3  6D                 	db	109
    75   0045D4  7D                 	db	125
    76   0045D5  07                 	db	7
    77   0045D6  7F                 	db	127
    78   0045D7  67                 	db	103
    79   0045D8  00                 	db	0
    80   0045D9  79                 	db	121
    81   000000                     _TRISC	set	16324
    82   000000                     _LATC	set	16316
    83   000000                     _PORTC	set	16332
    84   000000                     _LATD	set	16317
    85   000000                     _TRISD	set	16325
    86   000000                     _PORTD	set	16333
    87   000000                     _LATB	set	16315
    88   000000                     _TRISB	set	16323
    89   000000                     _PORTB	set	16331
    90   000000                     _INTCON0bits	set	16338
    91   000000                     _PORTBbits	set	16331
    92   000000                     _PORTA	set	16330
    93   000000                     _IPR7bits	set	14727
    94   000000                     _PIR7bits	set	14759
    95   000000                     _PORTAbits	set	16330
    96   000000                     _ANSELA	set	14912
    97   000000                     _LATA	set	16314
    98   000000                     _TRISA	set	16322
    99   000000                     _IVTBASEL	set	16341
   100   000000                     _IVTBASEH	set	16342
   101   000000                     _IVTBASEU	set	16343
   102   000000                     _PIE7bits	set	14743
   103   000000                     _ANSELB	set	14928
   104   000000                     _ANSELC	set	14944
   105   000000                     _ANSELD	set	14960
   106   000000                     _WPUB	set	14929
   107                           
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111   0044F2                     __pcinit:
   112                           	callstack 0
   113   0044F2                     start_initialization:
   114                           	callstack 0
   115   0044F2                     __initialization:
   116                           	callstack 0
   117                           
   118                           ; Initialize objects allocated to COMRAM (12 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120   0044F2  0ECE               	movlw	low __pidataCOMRAM
   121   0044F4  6EF6               	movwf	tblptrl,c
   122   0044F6  0E45               	movlw	high __pidataCOMRAM
   123   0044F8  6EF7               	movwf	tblptrh,c
   124   0044FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125   0044FC  6EF8               	movwf	tblptru,c
   126   0044FE  EE00  F001         	lfsr	0,__pdataCOMRAM
   127   004502  EE10 F00C          	lfsr	1,12
   128   004506                     copy_data0:
   129   004506  0009               	tblrd		*+
   130   004508  006F FFD7 FFEE     	movff	tablat,postinc0
   131   00450E  50E5               	movf	postdec1,w,c
   132   004510  50E1               	movf	fsr1l,w,c
   133   004512  E1F9               	bnz	copy_data0
   134                           
   135                           ; Clear objects allocated to COMRAM (11 bytes)
   136   004514  EE00  F00D         	lfsr	0,__pbssCOMRAM
   137   004518  0E0B               	movlw	11
   138   00451A                     clear_0:
   139   00451A  6AEE               	clrf	postinc0,c
   140   00451C  06E8               	decf	wreg,f,c
   141   00451E  E1FD               	bnz	clear_0
   142                           
   143                           ;
   144                           ; Setup IVTBASE
   145                           ;
   146   004520  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   147   004522  6ED5               	movwf	213,c
   148   004524  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   149   004526  6ED6               	movwf	214,c
   150   004528  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   151   00452A  6ED7               	movwf	215,c
   152   00452C                     end_of_initialization:
   153                           	callstack 0
   154   00452C                     __end_of__initialization:
   155                           	callstack 0
   156   00452C  0100               	movlb	0
   157   00452E  EFA8  F022         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160   00000D                     __pbssCOMRAM:
   161                           	callstack 0
   162   00000D                     _USER_GUESS:
   163                           	callstack 0
   164   00000D                     	ds	2
   165   00000F                     _SECRET_CODE:
   166                           	callstack 0
   167   00000F                     	ds	2
   168   000011                     _pr2Count:
   169                           	callstack 0
   170   000011                     	ds	2
   171   000013                     _pr1Count:
   172                           	callstack 0
   173   000013                     	ds	2
   174   000015                     _count:
   175                           	callstack 0
   176   000015                     	ds	2
   177   000017                     _done:
   178                           	callstack 0
   179   000017                     	ds	1
   180                           
   181                           	psect	dataCOMRAM
   182   000001                     __pdataCOMRAM:
   183                           	callstack 0
   184   000001                     _sevenSegValues:
   185                           	callstack 0
   186   000001                     	ds	12
   187                           
   188                           	psect	cstackCOMRAM
   189   000018                     __pcstackCOMRAM:
   190                           	callstack 0
   191   000018                     ??_INT2_ISR:
   192   000018                     
   193                           ; 1 bytes @ 0x0
   194   000018                     	ds	2
   195   00001A                     ??_handleGuess:
   196   00001A                     sevenSeg@index:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x2
   200   00001A                     	ds	2
   201   00001C                     sevenSeg@isSecond:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x4
   205   00001C                     	ds	1
   206   00001D                     ??_setSecretCode:
   207   00001D                     ??_getUserGuess:
   208                           
   209                           ; 1 bytes @ 0x5
   210   00001D                     	ds	2
   211   00001F                     
   212                           ; 1 bytes @ 0x7
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 18 in file "interrupts.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels required when called: 4
   238 ;; This function calls:
   239 ;;		_getUserGuess
   240 ;;		_handleGuess
   241 ;;		_initializeALL
   242 ;;		_setSecretCode
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           
   248                           	psect	text0
   249   004550                     __ptext0:
   250                           	callstack 0
   251   004550                     _main:
   252                           	callstack 27
   253   004550                     
   254                           ;interrupts.c: 22:     initializeALL();
   255   004550  ECED  F022         	call	_initializeALL	;wreg free
   256   004554                     
   257                           ;interrupts.c: 23:     setSecretCode();
   258   004554  EC1C  F021         	call	_setSecretCode	;wreg free
   259   004558                     l1120:
   260                           
   261                           ;interrupts.c: 26:         getUserGuess();
   262   004558  EC59  F020         	call	_getUserGuess	;wreg free
   263   00455C                     
   264                           ;interrupts.c: 27:         handleGuess();
   265   00455C  EC20  F022         	call	_handleGuess	;wreg free
   266   004560  EFAC  F022         	goto	l1120
   267   004564  EF57  F020         	goto	start
   268   004568                     __end_of_main:
   269                           	callstack 0
   270                           
   271 ;; *************** function _setSecretCode *****************
   272 ;; Defined at:
   273 ;;		line 21 in file "./functions.h"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels used: 1
   293 ;; Hardware stack levels required when called: 2
   294 ;; This function calls:
   295 ;;		_sevenSeg
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           	psect	text1
   302   004238                     __ptext1:
   303                           	callstack 0
   304   004238                     _setSecretCode:
   305                           	callstack 28
   306   004238                     
   307                           ;./functions.h: 22:     pr1Count = 0;
   308   004238  0E00               	movlw	0
   309   00423A  6E14               	movwf	(_pr1Count+1)^0,c
   310   00423C  0E00               	movlw	0
   311   00423E  6E13               	movwf	_pr1Count^0,c
   312                           
   313                           ;./functions.h: 23:     pr2Count = 0;
   314   004240  0E00               	movlw	0
   315   004242  6E12               	movwf	(_pr2Count+1)^0,c
   316   004244  0E00               	movlw	0
   317   004246  6E11               	movwf	_pr2Count^0,c
   318                           
   319                           ;./functions.h: 24:     done = 0;
   320   004248  0E00               	movlw	0
   321   00424A  6E17               	movwf	_done^0,c
   322   00424C                     l1024:
   323                           
   324                           ;./functions.h: 25:     sevenSeg(pr1Count,0);
   325   00424C  C013  F01A         	movff	_pr1Count,sevenSeg@index
   326   004250  C014  F01B         	movff	_pr1Count+1,sevenSeg@index+1
   327   004254  0E00               	movlw	0
   328   004256  6E1C               	movwf	sevenSeg@isSecond^0,c
   329   004258  EC4F  F022         	call	_sevenSeg	;wreg free
   330                           
   331                           ;./functions.h: 26:     while(done != 1){
   332   00425C  EF62  F021         	goto	l1040
   333   004260                     l117:
   334                           
   335                           ;./functions.h: 27:         if(PORTBbits.RB0 == 1){
   336   004260  A0CB               	btfss	203,0,c	;volatile
   337   004262  EF35  F021         	goto	u281
   338   004266  EF37  F021         	goto	u280
   339   00426A                     u281:
   340   00426A  EF62  F021         	goto	l1040
   341   00426E                     u280:
   342   00426E                     l1026:
   343                           
   344                           ;./functions.h: 28:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   345   00426E  0E06               	movlw	6
   346   004270  6E1E               	movwf	(??_setSecretCode+1)^0,c
   347   004272  0E13               	movlw	19
   348   004274  6E1D               	movwf	??_setSecretCode^0,c
   349   004276  0EAE               	movlw	174
   350   004278                     u487:
   351   004278  2EE8               	decfsz	wreg,f,c
   352   00427A  D7FE               	bra	u487
   353   00427C  2E1D               	decfsz	??_setSecretCode^0,f,c
   354   00427E  D7FC               	bra	u487
   355   004280  2E1E               	decfsz	(??_setSecretCode+1)^0,f,c
   356   004282  D7FA               	bra	u487
   357                           
   358                           ;./functions.h: 29:             while(PORTBbits.RB0 == 1){
   359   004284  EF4F  F021         	goto	l1032
   360   004288                     l120:
   361                           
   362                           ;./functions.h: 30:                 if(PORTBbits.RB1 == 1){
   363   004288  A2CB               	btfss	203,1,c	;volatile
   364   00428A  EF49  F021         	goto	u291
   365   00428E  EF4B  F021         	goto	u290
   366   004292                     u291:
   367   004292  EF4F  F021         	goto	l1032
   368   004296                     u290:
   369   004296                     
   370                           ;./functions.h: 32:                     done = 1;
   371   004296  0E01               	movlw	1
   372   004298  6E17               	movwf	_done^0,c
   373   00429A  EF37  F021         	goto	l1026
   374   00429E                     l1032:
   375                           
   376                           ;./functions.h: 29:             while(PORTBbits.RB0 == 1){
   377   00429E  B0CB               	btfsc	203,0,c	;volatile
   378   0042A0  EF54  F021         	goto	u301
   379   0042A4  EF56  F021         	goto	u300
   380   0042A8                     u301:
   381   0042A8  EF44  F021         	goto	l120
   382   0042AC                     u300:
   383   0042AC                     
   384                           ;./functions.h: 36:             if(done == 0){
   385   0042AC  5017               	movf	_done^0,w,c
   386   0042AE  A4D8               	btfss	status,2,c
   387   0042B0  EF5C  F021         	goto	u311
   388   0042B4  EF5E  F021         	goto	u310
   389   0042B8                     u311:
   390   0042B8  EF62  F021         	goto	l1040
   391   0042BC                     u310:
   392   0042BC                     
   393                           ;./functions.h: 37:                 pr1Count++;
   394   0042BC  4A13               	infsnz	_pr1Count^0,f,c
   395   0042BE  2A14               	incf	(_pr1Count+1)^0,f,c
   396   0042C0  EF26  F021         	goto	l1024
   397   0042C4                     l1040:
   398                           
   399                           ;./functions.h: 26:     while(done != 1){
   400   0042C4  0417               	decf	_done^0,w,c
   401   0042C6  A4D8               	btfss	status,2,c
   402   0042C8  EF68  F021         	goto	u321
   403   0042CC  EF6A  F021         	goto	u320
   404   0042D0                     u321:
   405   0042D0  EF30  F021         	goto	l117
   406   0042D4                     u320:
   407   0042D4                     
   408                           ;./functions.h: 42:     done = 0;
   409   0042D4  0E00               	movlw	0
   410   0042D6  6E17               	movwf	_done^0,c
   411   0042D8                     l1044:
   412                           
   413                           ;./functions.h: 43:     sevenSeg(pr2Count,1);
   414   0042D8  C011  F01A         	movff	_pr2Count,sevenSeg@index
   415   0042DC  C012  F01B         	movff	_pr2Count+1,sevenSeg@index+1
   416   0042E0  0E01               	movlw	1
   417   0042E2  6E1C               	movwf	sevenSeg@isSecond^0,c
   418   0042E4  EC4F  F022         	call	_sevenSeg	;wreg free
   419                           
   420                           ;./functions.h: 44:     while(done != 1){
   421   0042E8  EFA8  F021         	goto	l1060
   422   0042EC                     l126:
   423                           
   424                           ;./functions.h: 45:         if(PORTBbits.RB1 == 1){
   425   0042EC  A2CB               	btfss	203,1,c	;volatile
   426   0042EE  EF7B  F021         	goto	u331
   427   0042F2  EF7D  F021         	goto	u330
   428   0042F6                     u331:
   429   0042F6  EFA8  F021         	goto	l1060
   430   0042FA                     u330:
   431   0042FA                     l1046:
   432                           
   433                           ;./functions.h: 46:             _delay((unsigned long)((1000)*(4000000/4000.0)));
   434   0042FA  0E06               	movlw	6
   435   0042FC  6E1E               	movwf	(??_setSecretCode+1)^0,c
   436   0042FE  0E13               	movlw	19
   437   004300  6E1D               	movwf	??_setSecretCode^0,c
   438   004302  0EAE               	movlw	174
   439   004304                     u497:
   440   004304  2EE8               	decfsz	wreg,f,c
   441   004306  D7FE               	bra	u497
   442   004308  2E1D               	decfsz	??_setSecretCode^0,f,c
   443   00430A  D7FC               	bra	u497
   444   00430C  2E1E               	decfsz	(??_setSecretCode+1)^0,f,c
   445   00430E  D7FA               	bra	u497
   446                           
   447                           ;./functions.h: 47:             while(PORTBbits.RB1 == 1){
   448   004310  EF95  F021         	goto	l1052
   449   004314                     l129:
   450                           
   451                           ;./functions.h: 48:                 if(PORTBbits.RB0 == 1){
   452   004314  A0CB               	btfss	203,0,c	;volatile
   453   004316  EF8F  F021         	goto	u341
   454   00431A  EF91  F021         	goto	u340
   455   00431E                     u341:
   456   00431E  EF95  F021         	goto	l1052
   457   004322                     u340:
   458   004322                     
   459                           ;./functions.h: 50:                     done = 1;
   460   004322  0E01               	movlw	1
   461   004324  6E17               	movwf	_done^0,c
   462   004326  EF7D  F021         	goto	l1046
   463   00432A                     l1052:
   464                           
   465                           ;./functions.h: 47:             while(PORTBbits.RB1 == 1){
   466   00432A  B2CB               	btfsc	203,1,c	;volatile
   467   00432C  EF9A  F021         	goto	u351
   468   004330  EF9C  F021         	goto	u350
   469   004334                     u351:
   470   004334  EF8A  F021         	goto	l129
   471   004338                     u350:
   472   004338                     
   473                           ;./functions.h: 54:             if(done == 0){
   474   004338  5017               	movf	_done^0,w,c
   475   00433A  A4D8               	btfss	status,2,c
   476   00433C  EFA2  F021         	goto	u361
   477   004340  EFA4  F021         	goto	u360
   478   004344                     u361:
   479   004344  EFA8  F021         	goto	l1060
   480   004348                     u360:
   481   004348                     
   482                           ;./functions.h: 55:                 pr2Count++;
   483   004348  4A11               	infsnz	_pr2Count^0,f,c
   484   00434A  2A12               	incf	(_pr2Count+1)^0,f,c
   485   00434C  EF6C  F021         	goto	l1044
   486   004350                     l1060:
   487                           
   488                           ;./functions.h: 44:     while(done != 1){
   489   004350  0417               	decf	_done^0,w,c
   490   004352  A4D8               	btfss	status,2,c
   491   004354  EFAE  F021         	goto	u371
   492   004358  EFB0  F021         	goto	u370
   493   00435C                     u371:
   494   00435C  EF76  F021         	goto	l126
   495   004360                     u370:
   496   004360                     
   497                           ;./functions.h: 60:     PORTAbits.RA2 = 1;
   498   004360  84CA               	bsf	202,2,c	;volatile
   499   004362                     
   500                           ;./functions.h: 61:     PORTD = 0;
   501   004362  0E00               	movlw	0
   502   004364  6ECD               	movwf	205,c	;volatile
   503   004366                     
   504                           ;./functions.h: 62:     SECRET_CODE = (pr2Count * 16) | (pr1Count);
   505   004366  C011  F01D         	movff	_pr2Count,??_setSecretCode
   506   00436A  C012  F01E         	movff	_pr2Count+1,??_setSecretCode+1
   507   00436E  3A1D               	swapf	??_setSecretCode^0,f,c
   508   004370  3A1E               	swapf	(??_setSecretCode+1)^0,f,c
   509   004372  0EF0               	movlw	240
   510   004374  161E               	andwf	(??_setSecretCode+1)^0,f,c
   511   004376  501D               	movf	??_setSecretCode^0,w,c
   512   004378  0B0F               	andlw	15
   513   00437A  121E               	iorwf	(??_setSecretCode+1)^0,f,c
   514   00437C  0EF0               	movlw	240
   515   00437E  161D               	andwf	??_setSecretCode^0,f,c
   516   004380  5013               	movf	_pr1Count^0,w,c
   517   004382  101D               	iorwf	??_setSecretCode^0,w,c
   518   004384  6E0F               	movwf	_SECRET_CODE^0,c
   519   004386  5014               	movf	(_pr1Count+1)^0,w,c
   520   004388  101E               	iorwf	(??_setSecretCode+1)^0,w,c
   521   00438A  6E10               	movwf	(_SECRET_CODE+1)^0,c
   522   00438C  0012               	return		;funcret
   523   00438E                     __end_of_setSecretCode:
   524                           	callstack 0
   525                           
   526 ;; *************** function _initializeALL *****************
   527 ;; Defined at:
   528 ;;		line 20 in file "./initialization.h"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 3
   549 ;; This function calls:
   550 ;;		_INTERRUPT_Initialize
   551 ;;		_intializePorts
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text2
   558   0045DA                     __ptext2:
   559                           	callstack 0
   560   0045DA                     _initializeALL:
   561                           	callstack 27
   562   0045DA                     
   563                           ;./initialization.h: 21:     intializePorts();
   564   0045DA  ECDE  F022         	call	_intializePorts	;wreg free
   565                           
   566                           ;./initialization.h: 22:     INTERRUPT_Initialize();
   567   0045DE  EC99  F022         	call	_INTERRUPT_Initialize	;wreg free
   568   0045E2                     
   569                           ;./initialization.h: 23:     PORTAbits.RA1 = 1;
   570   0045E2  82CA               	bsf	202,1,c	;volatile
   571   0045E4  0012               	return		;funcret
   572   0045E6                     __end_of_initializeALL:
   573                           	callstack 0
   574                           
   575 ;; *************** function _intializePorts *****************
   576 ;; Defined at:
   577 ;;		line 72 in file "./initialization.h"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; Hardware stack levels required when called: 2
   598 ;; This function calls:
   599 ;;		_initializePORTA
   600 ;;		_initializePORTB
   601 ;;		_initializePORTC
   602 ;;		_initializePORTD
   603 ;; This function is called by:
   604 ;;		_initializeALL
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text3
   609   0045BC                     __ptext3:
   610                           	callstack 0
   611   0045BC                     _intializePorts:
   612                           	callstack 27
   613   0045BC                     
   614                           ;./initialization.h: 73:     initializePORTA();
   615   0045BC  ECD4  F022         	call	_initializePORTA	;wreg free
   616                           
   617                           ;./initialization.h: 74:     initializePORTB();
   618   0045C0  ECB4  F022         	call	_initializePORTB	;wreg free
   619                           
   620                           ;./initialization.h: 75:     initializePORTD();
   621   0045C4  ECC0  F022         	call	_initializePORTD	;wreg free
   622                           
   623                           ;./initialization.h: 76:     initializePORTC();
   624   0045C8  ECCA  F022         	call	_initializePORTC	;wreg free
   625   0045CC  0012               	return		;funcret
   626   0045CE                     __end_of_intializePorts:
   627                           	callstack 0
   628                           
   629 ;; *************** function _initializePORTD *****************
   630 ;; Defined at:
   631 ;;		line 91 in file "./initialization.h"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 1
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_intializePorts
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text4
   660   004580                     __ptext4:
   661                           	callstack 0
   662   004580                     _initializePORTD:
   663                           	callstack 27
   664   004580                     
   665                           ;./initialization.h: 92:     PORTD = 0;
   666   004580  0E00               	movlw	0
   667   004582  6ECD               	movwf	205,c	;volatile
   668                           
   669                           ;./initialization.h: 93:     TRISD = 0;
   670   004584  0E00               	movlw	0
   671   004586  6EC5               	movwf	197,c	;volatile
   672                           
   673                           ;./initialization.h: 94:     LATD = 0;
   674   004588  0E00               	movlw	0
   675   00458A  6EBD               	movwf	189,c	;volatile
   676                           
   677                           ;./initialization.h: 95:     ANSELD = 0;
   678   00458C  0E00               	movlw	0
   679   00458E  013A               	movlb	58	; () banked
   680   004590  6F70               	movwf	112,b	;volatile
   681   004592                     
   682                           ; BSR set to: 58
   683   004592  0012               	return		;funcret
   684   004594                     __end_of_initializePORTD:
   685                           	callstack 0
   686                           
   687 ;; *************** function _initializePORTC *****************
   688 ;; Defined at:
   689 ;;		line 97 in file "./initialization.h"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   707 ;;Total ram usage:        0 bytes
   708 ;; Hardware stack levels used: 1
   709 ;; Hardware stack levels required when called: 1
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_intializePorts
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text5
   718   004594                     __ptext5:
   719                           	callstack 0
   720   004594                     _initializePORTC:
   721                           	callstack 27
   722   004594                     
   723                           ;./initialization.h: 98:     PORTC = 0;
   724   004594  0E00               	movlw	0
   725   004596  6ECC               	movwf	204,c	;volatile
   726                           
   727                           ;./initialization.h: 99:     LATC = 0;
   728   004598  0E00               	movlw	0
   729   00459A  6EBC               	movwf	188,c	;volatile
   730                           
   731                           ;./initialization.h: 100:     ANSELC = 0;
   732   00459C  0E00               	movlw	0
   733   00459E  013A               	movlb	58	; () banked
   734   0045A0  6F60               	movwf	96,b	;volatile
   735                           
   736                           ;./initialization.h: 101:     TRISC = 0b00000100;
   737   0045A2  0E04               	movlw	4
   738   0045A4  6EC4               	movwf	196,c	;volatile
   739   0045A6                     
   740                           ; BSR set to: 58
   741   0045A6  0012               	return		;funcret
   742   0045A8                     __end_of_initializePORTC:
   743                           	callstack 0
   744                           
   745 ;; *************** function _initializePORTB *****************
   746 ;; Defined at:
   747 ;;		line 84 in file "./initialization.h"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, status,2
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   765 ;;Total ram usage:        0 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; Hardware stack levels required when called: 1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_intializePorts
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text6
   776   004568                     __ptext6:
   777                           	callstack 0
   778   004568                     _initializePORTB:
   779                           	callstack 27
   780   004568                     
   781                           ;./initialization.h: 85:     PORTB = 0;
   782   004568  0E00               	movlw	0
   783   00456A  6ECB               	movwf	203,c	;volatile
   784                           
   785                           ;./initialization.h: 86:     TRISB = 0b00000111;
   786   00456C  0E07               	movlw	7
   787   00456E  6EC3               	movwf	195,c	;volatile
   788                           
   789                           ;./initialization.h: 87:     LATB = 0;
   790   004570  0E00               	movlw	0
   791   004572  6EBB               	movwf	187,c	;volatile
   792                           
   793                           ;./initialization.h: 88:     ANSELB = 0;
   794   004574  0E00               	movlw	0
   795   004576  013A               	movlb	58	; () banked
   796   004578  6F50               	movwf	80,b	;volatile
   797                           
   798                           ;./initialization.h: 89:     WPUB = 0b00000100;
   799   00457A  0E04               	movlw	4
   800   00457C  6F51               	movwf	81,b	;volatile
   801   00457E                     
   802                           ; BSR set to: 58
   803   00457E  0012               	return		;funcret
   804   004580                     __end_of_initializePORTB:
   805                           	callstack 0
   806                           
   807 ;; *************** function _initializePORTA *****************
   808 ;; Defined at:
   809 ;;		line 78 in file "./initialization.h"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_intializePorts
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text7
   838   0045A8                     __ptext7:
   839                           	callstack 0
   840   0045A8                     _initializePORTA:
   841                           	callstack 27
   842   0045A8                     
   843                           ;./initialization.h: 79:     PORTA = 0;
   844   0045A8  0E00               	movlw	0
   845   0045AA  6ECA               	movwf	202,c	;volatile
   846                           
   847                           ;./initialization.h: 80:     TRISA = 0;
   848   0045AC  0E00               	movlw	0
   849   0045AE  6EC2               	movwf	194,c	;volatile
   850                           
   851                           ;./initialization.h: 81:     LATA = 0;
   852   0045B0  0E00               	movlw	0
   853   0045B2  6EBA               	movwf	186,c	;volatile
   854                           
   855                           ;./initialization.h: 82:     ANSELA = 0;
   856   0045B4  0E00               	movlw	0
   857   0045B6  013A               	movlb	58	; () banked
   858   0045B8  6F40               	movwf	64,b	;volatile
   859   0045BA                     
   860                           ; BSR set to: 58
   861   0045BA  0012               	return		;funcret
   862   0045BC                     __end_of_initializePORTA:
   863                           	callstack 0
   864                           
   865 ;; *************** function _INTERRUPT_Initialize *****************
   866 ;; Defined at:
   867 ;;		line 46 in file "./initialization.h"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_initializeALL
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text8
   896   004532                     __ptext8:
   897                           	callstack 0
   898   004532                     _INTERRUPT_Initialize:
   899                           	callstack 28
   900   004532                     
   901                           ;./initialization.h: 49:     INTCON0bits.IPEN = 1;
   902   004532  8AD2               	bsf	210,5,c	;volatile
   903                           
   904                           ;./initialization.h: 51:     INTCON0bits.GIEH = 1;
   905   004534  8ED2               	bsf	210,7,c	;volatile
   906                           
   907                           ;./initialization.h: 53:     INTCON0bits.GIEL = 1;
   908   004536  8CD2               	bsf	210,6,c	;volatile
   909                           
   910                           ;./initialization.h: 55:     INTCON0bits.INT2EDG = 1;
   911   004538  84D2               	bsf	210,2,c	;volatile
   912                           
   913                           ;./initialization.h: 57:     IPR7bits.INT2IP = 1;
   914   00453A  0139               	movlb	57	; () banked
   915   00453C  8B87               	bsf	135,5,b	;volatile
   916                           
   917                           ;./initialization.h: 59:     PIE7bits.INT2IE = 1;
   918   00453E  8B97               	bsf	151,5,b	;volatile
   919                           
   920                           ;./initialization.h: 61:     PIR7bits.INT2IF = 0;
   921   004540  9BA7               	bcf	167,5,b	;volatile
   922   004542                     
   923                           ; BSR set to: 57
   924                           ;./initialization.h: 65:     IVTBASEU = 0x00;
   925   004542  0E00               	movlw	0
   926   004544  6ED7               	movwf	215,c	;volatile
   927                           
   928                           ;./initialization.h: 67:     IVTBASEH = 0x40;
   929   004546  0E40               	movlw	64
   930   004548  6ED6               	movwf	214,c	;volatile
   931                           
   932                           ;./initialization.h: 69:     IVTBASEL = 0x08;
   933   00454A  0E08               	movlw	8
   934   00454C  6ED5               	movwf	213,c	;volatile
   935   00454E                     
   936                           ; BSR set to: 57
   937   00454E  0012               	return		;funcret
   938   004550                     __end_of_INTERRUPT_Initialize:
   939                           	callstack 0
   940                           
   941 ;; *************** function _handleGuess *****************
   942 ;; Defined at:
   943 ;;		line 110 in file "./functions.h"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   961 ;;Total ram usage:        2 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_main
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text9
   972   004440                     __ptext9:
   973                           	callstack 0
   974   004440                     _handleGuess:
   975                           	callstack 29
   976   004440                     
   977                           ;./functions.h: 111:     if(SECRET_CODE != USER_GUESS){
   978   004440  500D               	movf	_USER_GUESS^0,w,c
   979   004442  180F               	xorwf	_SECRET_CODE^0,w,c
   980   004444  E109               	bnz	u240
   981   004446  500E               	movf	(_USER_GUESS+1)^0,w,c
   982   004448  1810               	xorwf	(_SECRET_CODE+1)^0,w,c
   983   00444A  B4D8               	btfsc	status,2,c
   984   00444C  EF2A  F022         	goto	u241
   985   004450  EF2C  F022         	goto	u240
   986   004454                     u241:
   987   004454  EF3C  F022         	goto	l158
   988   004458                     u240:
   989   004458                     
   990                           ;./functions.h: 112:         PORTAbits.RA0 = 1;
   991   004458  80CA               	bsf	202,0,c	;volatile
   992   00445A                     
   993                           ;./functions.h: 113:         _delay((unsigned long)((5000)*(4000000/4000.0)));
   994   00445A  0E1A               	movlw	26
   995   00445C  6E1B               	movwf	(??_handleGuess+1)^0,c
   996   00445E  0E5E               	movlw	94
   997   004460  6E1A               	movwf	??_handleGuess^0,c
   998   004462  0E6E               	movlw	110
   999   004464                     u507:
  1000   004464  2EE8               	decfsz	wreg,f,c
  1001   004466  D7FE               	bra	u507
  1002   004468  2E1A               	decfsz	??_handleGuess^0,f,c
  1003   00446A  D7FC               	bra	u507
  1004   00446C  2E1B               	decfsz	(??_handleGuess+1)^0,f,c
  1005   00446E  D7FA               	bra	u507
  1006   004470  D000               	nop2	
  1007   004472                     
  1008                           ;./functions.h: 114:         PORTAbits.RA0 = 0;
  1009   004472  90CA               	bcf	202,0,c	;volatile
  1010                           
  1011                           ;./functions.h: 115:     }else{
  1012   004474  EF4A  F022         	goto	l980
  1013   004478                     l158:
  1014                           
  1015                           ;./functions.h: 116:         PORTAbits.RA3 = 1;
  1016   004478  86CA               	bsf	202,3,c	;volatile
  1017   00447A                     
  1018                           ;./functions.h: 117:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  1019   00447A  0E1A               	movlw	26
  1020   00447C  6E1B               	movwf	(??_handleGuess+1)^0,c
  1021   00447E  0E5E               	movlw	94
  1022   004480  6E1A               	movwf	??_handleGuess^0,c
  1023   004482  0E6E               	movlw	110
  1024   004484                     u517:
  1025   004484  2EE8               	decfsz	wreg,f,c
  1026   004486  D7FE               	bra	u517
  1027   004488  2E1A               	decfsz	??_handleGuess^0,f,c
  1028   00448A  D7FC               	bra	u517
  1029   00448C  2E1B               	decfsz	(??_handleGuess+1)^0,f,c
  1030   00448E  D7FA               	bra	u517
  1031   004490  D000               	nop2	
  1032   004492                     
  1033                           ;./functions.h: 118:         PORTAbits.RA3 = 0;
  1034   004492  96CA               	bcf	202,3,c	;volatile
  1035   004494                     l980:
  1036                           
  1037                           ;./functions.h: 120:     USER_GUESS = 0;
  1038   004494  0E00               	movlw	0
  1039   004496  6E0E               	movwf	(_USER_GUESS+1)^0,c
  1040   004498  0E00               	movlw	0
  1041   00449A  6E0D               	movwf	_USER_GUESS^0,c
  1042   00449C  0012               	return		;funcret
  1043   00449E                     __end_of_handleGuess:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _getUserGuess *****************
  1047 ;; Defined at:
  1048 ;;		line 64 in file "./functions.h"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 2
  1069 ;; This function calls:
  1070 ;;		_sevenSeg
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text10
  1077   0040B2                     __ptext10:
  1078                           	callstack 0
  1079   0040B2                     _getUserGuess:
  1080                           	callstack 28
  1081   0040B2                     
  1082                           ;./functions.h: 65:     pr1Count = 0;
  1083   0040B2  0E00               	movlw	0
  1084   0040B4  6E14               	movwf	(_pr1Count+1)^0,c
  1085   0040B6  0E00               	movlw	0
  1086   0040B8  6E13               	movwf	_pr1Count^0,c
  1087                           
  1088                           ;./functions.h: 66:     pr2Count = 0;
  1089   0040BA  0E00               	movlw	0
  1090   0040BC  6E12               	movwf	(_pr2Count+1)^0,c
  1091   0040BE  0E00               	movlw	0
  1092   0040C0  6E11               	movwf	_pr2Count^0,c
  1093                           
  1094                           ;./functions.h: 67:     done = 0;
  1095   0040C2  0E00               	movlw	0
  1096   0040C4  6E17               	movwf	_done^0,c
  1097   0040C6                     l1068:
  1098                           
  1099                           ;./functions.h: 68:     sevenSeg(pr1Count,0);
  1100   0040C6  C013  F01A         	movff	_pr1Count,sevenSeg@index
  1101   0040CA  C014  F01B         	movff	_pr1Count+1,sevenSeg@index+1
  1102   0040CE  0E00               	movlw	0
  1103   0040D0  6E1C               	movwf	sevenSeg@isSecond^0,c
  1104   0040D2  EC4F  F022         	call	_sevenSeg	;wreg free
  1105                           
  1106                           ;./functions.h: 69:     while(done != 1){
  1107   0040D6  EF9F  F020         	goto	l1084
  1108   0040DA                     l138:
  1109                           
  1110                           ;./functions.h: 70:         if(PORTBbits.RB0 == 1){
  1111   0040DA  A0CB               	btfss	203,0,c	;volatile
  1112   0040DC  EF72  F020         	goto	u381
  1113   0040E0  EF74  F020         	goto	u380
  1114   0040E4                     u381:
  1115   0040E4  EF9F  F020         	goto	l1084
  1116   0040E8                     u380:
  1117   0040E8                     l1070:
  1118                           
  1119                           ;./functions.h: 71:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  1120   0040E8  0E06               	movlw	6
  1121   0040EA  6E1E               	movwf	(??_getUserGuess+1)^0,c
  1122   0040EC  0E13               	movlw	19
  1123   0040EE  6E1D               	movwf	??_getUserGuess^0,c
  1124   0040F0  0EAE               	movlw	174
  1125   0040F2                     u527:
  1126   0040F2  2EE8               	decfsz	wreg,f,c
  1127   0040F4  D7FE               	bra	u527
  1128   0040F6  2E1D               	decfsz	??_getUserGuess^0,f,c
  1129   0040F8  D7FC               	bra	u527
  1130   0040FA  2E1E               	decfsz	(??_getUserGuess+1)^0,f,c
  1131   0040FC  D7FA               	bra	u527
  1132                           
  1133                           ;./functions.h: 72:             while(PORTBbits.RB0 == 1){
  1134   0040FE  EF8C  F020         	goto	l1076
  1135   004102                     l141:
  1136                           
  1137                           ;./functions.h: 73:                 if(PORTBbits.RB1 == 1){
  1138   004102  A2CB               	btfss	203,1,c	;volatile
  1139   004104  EF86  F020         	goto	u391
  1140   004108  EF88  F020         	goto	u390
  1141   00410C                     u391:
  1142   00410C  EF8C  F020         	goto	l1076
  1143   004110                     u390:
  1144   004110                     
  1145                           ;./functions.h: 75:                     done = 1;
  1146   004110  0E01               	movlw	1
  1147   004112  6E17               	movwf	_done^0,c
  1148   004114  EF74  F020         	goto	l1070
  1149   004118                     l1076:
  1150                           
  1151                           ;./functions.h: 72:             while(PORTBbits.RB0 == 1){
  1152   004118  B0CB               	btfsc	203,0,c	;volatile
  1153   00411A  EF91  F020         	goto	u401
  1154   00411E  EF93  F020         	goto	u400
  1155   004122                     u401:
  1156   004122  EF81  F020         	goto	l141
  1157   004126                     u400:
  1158   004126                     
  1159                           ;./functions.h: 79:             if(done == 0){
  1160   004126  5017               	movf	_done^0,w,c
  1161   004128  A4D8               	btfss	status,2,c
  1162   00412A  EF99  F020         	goto	u411
  1163   00412E  EF9B  F020         	goto	u410
  1164   004132                     u411:
  1165   004132  EF9F  F020         	goto	l1084
  1166   004136                     u410:
  1167   004136                     
  1168                           ;./functions.h: 80:                 pr1Count++;
  1169   004136  4A13               	infsnz	_pr1Count^0,f,c
  1170   004138  2A14               	incf	(_pr1Count+1)^0,f,c
  1171   00413A  EF63  F020         	goto	l1068
  1172   00413E                     l1084:
  1173                           
  1174                           ;./functions.h: 69:     while(done != 1){
  1175   00413E  0417               	decf	_done^0,w,c
  1176   004140  A4D8               	btfss	status,2,c
  1177   004142  EFA5  F020         	goto	u421
  1178   004146  EFA7  F020         	goto	u420
  1179   00414A                     u421:
  1180   00414A  EF6D  F020         	goto	l138
  1181   00414E                     u420:
  1182   00414E                     
  1183                           ;./functions.h: 85:     done = 0;
  1184   00414E  0E00               	movlw	0
  1185   004150  6E17               	movwf	_done^0,c
  1186   004152                     l1088:
  1187                           
  1188                           ;./functions.h: 86:     sevenSeg(pr2Count,1);
  1189   004152  C011  F01A         	movff	_pr2Count,sevenSeg@index
  1190   004156  C012  F01B         	movff	_pr2Count+1,sevenSeg@index+1
  1191   00415A  0E01               	movlw	1
  1192   00415C  6E1C               	movwf	sevenSeg@isSecond^0,c
  1193   00415E  EC4F  F022         	call	_sevenSeg	;wreg free
  1194                           
  1195                           ;./functions.h: 87:     while(done != 1){
  1196   004162  EFE5  F020         	goto	l1104
  1197   004166                     l147:
  1198                           
  1199                           ;./functions.h: 88:         if(PORTBbits.RB1 == 1){
  1200   004166  A2CB               	btfss	203,1,c	;volatile
  1201   004168  EFB8  F020         	goto	u431
  1202   00416C  EFBA  F020         	goto	u430
  1203   004170                     u431:
  1204   004170  EFE5  F020         	goto	l1104
  1205   004174                     u430:
  1206   004174                     l1090:
  1207                           
  1208                           ;./functions.h: 89:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  1209   004174  0E06               	movlw	6
  1210   004176  6E1E               	movwf	(??_getUserGuess+1)^0,c
  1211   004178  0E13               	movlw	19
  1212   00417A  6E1D               	movwf	??_getUserGuess^0,c
  1213   00417C  0EAE               	movlw	174
  1214   00417E                     u537:
  1215   00417E  2EE8               	decfsz	wreg,f,c
  1216   004180  D7FE               	bra	u537
  1217   004182  2E1D               	decfsz	??_getUserGuess^0,f,c
  1218   004184  D7FC               	bra	u537
  1219   004186  2E1E               	decfsz	(??_getUserGuess+1)^0,f,c
  1220   004188  D7FA               	bra	u537
  1221                           
  1222                           ;./functions.h: 90:             while(PORTBbits.RB1 == 1){
  1223   00418A  EFD2  F020         	goto	l1096
  1224   00418E                     l150:
  1225                           
  1226                           ;./functions.h: 91:                 if(PORTBbits.RB0 == 1){
  1227   00418E  A0CB               	btfss	203,0,c	;volatile
  1228   004190  EFCC  F020         	goto	u441
  1229   004194  EFCE  F020         	goto	u440
  1230   004198                     u441:
  1231   004198  EFD2  F020         	goto	l1096
  1232   00419C                     u440:
  1233   00419C                     
  1234                           ;./functions.h: 93:                     done = 1;
  1235   00419C  0E01               	movlw	1
  1236   00419E  6E17               	movwf	_done^0,c
  1237   0041A0  EFBA  F020         	goto	l1090
  1238   0041A4                     l1096:
  1239                           
  1240                           ;./functions.h: 90:             while(PORTBbits.RB1 == 1){
  1241   0041A4  B2CB               	btfsc	203,1,c	;volatile
  1242   0041A6  EFD7  F020         	goto	u451
  1243   0041AA  EFD9  F020         	goto	u450
  1244   0041AE                     u451:
  1245   0041AE  EFC7  F020         	goto	l150
  1246   0041B2                     u450:
  1247   0041B2                     
  1248                           ;./functions.h: 97:             if(done == 0){
  1249   0041B2  5017               	movf	_done^0,w,c
  1250   0041B4  A4D8               	btfss	status,2,c
  1251   0041B6  EFDF  F020         	goto	u461
  1252   0041BA  EFE1  F020         	goto	u460
  1253   0041BE                     u461:
  1254   0041BE  EFE5  F020         	goto	l1104
  1255   0041C2                     u460:
  1256   0041C2                     
  1257                           ;./functions.h: 98:                 pr2Count++;
  1258   0041C2  4A11               	infsnz	_pr2Count^0,f,c
  1259   0041C4  2A12               	incf	(_pr2Count+1)^0,f,c
  1260   0041C6  EFA9  F020         	goto	l1088
  1261   0041CA                     l1104:
  1262                           
  1263                           ;./functions.h: 87:     while(done != 1){
  1264   0041CA  0417               	decf	_done^0,w,c
  1265   0041CC  A4D8               	btfss	status,2,c
  1266   0041CE  EFEB  F020         	goto	u471
  1267   0041D2  EFED  F020         	goto	u470
  1268   0041D6                     u471:
  1269   0041D6  EFB3  F020         	goto	l147
  1270   0041DA                     u470:
  1271   0041DA                     
  1272                           ;./functions.h: 103:     PORTD = 0;
  1273   0041DA  0E00               	movlw	0
  1274   0041DC  6ECD               	movwf	205,c	;volatile
  1275   0041DE                     
  1276                           ;./functions.h: 104:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1277   0041DE  0E03               	movlw	3
  1278   0041E0  6E1E               	movwf	(??_getUserGuess+1)^0,c
  1279   0041E2  0E8A               	movlw	138
  1280   0041E4  6E1D               	movwf	??_getUserGuess^0,c
  1281   0041E6  0E56               	movlw	86
  1282   0041E8                     u547:
  1283   0041E8  2EE8               	decfsz	wreg,f,c
  1284   0041EA  D7FE               	bra	u547
  1285   0041EC  2E1D               	decfsz	??_getUserGuess^0,f,c
  1286   0041EE  D7FC               	bra	u547
  1287   0041F0  2E1E               	decfsz	(??_getUserGuess+1)^0,f,c
  1288   0041F2  D7FA               	bra	u547
  1289   0041F4                     
  1290                           ;./functions.h: 105:     PORTD = 0xFF;
  1291   0041F4  68CD               	setf	205,c	;volatile
  1292   0041F6                     
  1293                           ;./functions.h: 106:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1294   0041F6  0E03               	movlw	3
  1295   0041F8  6E1E               	movwf	(??_getUserGuess+1)^0,c
  1296   0041FA  0E8A               	movlw	138
  1297   0041FC  6E1D               	movwf	??_getUserGuess^0,c
  1298   0041FE  0E56               	movlw	86
  1299   004200                     u557:
  1300   004200  2EE8               	decfsz	wreg,f,c
  1301   004202  D7FE               	bra	u557
  1302   004204  2E1D               	decfsz	??_getUserGuess^0,f,c
  1303   004206  D7FC               	bra	u557
  1304   004208  2E1E               	decfsz	(??_getUserGuess+1)^0,f,c
  1305   00420A  D7FA               	bra	u557
  1306                           
  1307                           ;./functions.h: 107:     PORTD = 0;
  1308   00420C  0E00               	movlw	0
  1309   00420E  6ECD               	movwf	205,c	;volatile
  1310   004210                     
  1311                           ;./functions.h: 108:     USER_GUESS = (pr2Count * 16) | (pr1Count);
  1312   004210  C011  F01D         	movff	_pr2Count,??_getUserGuess
  1313   004214  C012  F01E         	movff	_pr2Count+1,??_getUserGuess+1
  1314   004218  3A1D               	swapf	??_getUserGuess^0,f,c
  1315   00421A  3A1E               	swapf	(??_getUserGuess+1)^0,f,c
  1316   00421C  0EF0               	movlw	240
  1317   00421E  161E               	andwf	(??_getUserGuess+1)^0,f,c
  1318   004220  501D               	movf	??_getUserGuess^0,w,c
  1319   004222  0B0F               	andlw	15
  1320   004224  121E               	iorwf	(??_getUserGuess+1)^0,f,c
  1321   004226  0EF0               	movlw	240
  1322   004228  161D               	andwf	??_getUserGuess^0,f,c
  1323   00422A  5013               	movf	_pr1Count^0,w,c
  1324   00422C  101D               	iorwf	??_getUserGuess^0,w,c
  1325   00422E  6E0D               	movwf	_USER_GUESS^0,c
  1326   004230  5014               	movf	(_pr1Count+1)^0,w,c
  1327   004232  101E               	iorwf	(??_getUserGuess+1)^0,w,c
  1328   004234  6E0E               	movwf	(_USER_GUESS+1)^0,c
  1329   004236  0012               	return		;funcret
  1330   004238                     __end_of_getUserGuess:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function _sevenSeg *****************
  1334 ;; Defined at:
  1335 ;;		line 10 in file "./functions.h"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  index           2    2[COMRAM] int 
  1338 ;;  isSecond        1    4[COMRAM] unsigned char 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1350 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1354 ;;Total ram usage:        3 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; Hardware stack levels required when called: 1
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_setSecretCode
  1361 ;;		_getUserGuess
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text11
  1366   00449E                     __ptext11:
  1367                           	callstack 0
  1368   00449E                     _sevenSeg:
  1369                           	callstack 28
  1370   00449E                     
  1371                           ;./functions.h: 11:     if(index < 0 || index > 9){
  1372   00449E  BE1B               	btfsc	(sevenSeg@index+1)^0,7,c
  1373   0044A0  EF54  F022         	goto	u251
  1374   0044A4  EF56  F022         	goto	u250
  1375   0044A8                     u251:
  1376   0044A8  EF64  F022         	goto	l1014
  1377   0044AC                     u250:
  1378   0044AC  BE1B               	btfsc	(sevenSeg@index+1)^0,7,c
  1379   0044AE  EF62  F022         	goto	u261
  1380   0044B2  501B               	movf	(sevenSeg@index+1)^0,w,c
  1381   0044B4  E109               	bnz	u260
  1382   0044B6  0E0A               	movlw	10
  1383   0044B8  5C1A               	subwf	sevenSeg@index^0,w,c
  1384   0044BA  A0D8               	btfss	status,0,c
  1385   0044BC  EF62  F022         	goto	u261
  1386   0044C0  EF64  F022         	goto	u260
  1387   0044C4                     u261:
  1388   0044C4  EF68  F022         	goto	l1016
  1389   0044C8                     u260:
  1390   0044C8                     l1014:
  1391                           
  1392                           ;./functions.h: 12:         index = 10;
  1393   0044C8  0E00               	movlw	0
  1394   0044CA  6E1B               	movwf	(sevenSeg@index+1)^0,c
  1395   0044CC  0E0A               	movlw	10
  1396   0044CE  6E1A               	movwf	sevenSeg@index^0,c
  1397   0044D0                     l1016:
  1398                           
  1399                           ;./functions.h: 15:     PORTD = sevenSegValues[index];
  1400   0044D0  501A               	movf	sevenSeg@index^0,w,c
  1401   0044D2  0F01               	addlw	low _sevenSegValues
  1402   0044D4  6ED9               	movwf	fsr2l,c
  1403   0044D6  6ADA               	clrf	fsr2h,c
  1404   0044D8  50DF               	movf	indf2,w,c
  1405   0044DA  6ECD               	movwf	205,c	;volatile
  1406   0044DC                     
  1407                           ;./functions.h: 16:     if(isSecond == 1){
  1408   0044DC  041C               	decf	sevenSeg@isSecond^0,w,c
  1409   0044DE  A4D8               	btfss	status,2,c
  1410   0044E0  EF74  F022         	goto	u271
  1411   0044E4  EF76  F022         	goto	u270
  1412   0044E8                     u271:
  1413   0044E8  EF78  F022         	goto	l113
  1414   0044EC                     u270:
  1415   0044EC                     
  1416                           ;./functions.h: 17:         PORTD += 0b10000000;
  1417   0044EC  0E80               	movlw	128
  1418   0044EE  26CD               	addwf	205,f,c	;volatile
  1419   0044F0                     l113:
  1420   0044F0  0012               	return		;funcret
  1421   0044F2                     __end_of_sevenSeg:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _INT2_ISR *****************
  1425 ;; Defined at:
  1426 ;;		line 25 in file "./initialization.h"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1443 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1444 ;;Total ram usage:        2 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		Interrupt level 2
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text12
  1454   004390                     __ptext12:
  1455                           	callstack 0
  1456   004390                     _INT2_ISR:
  1457                           	callstack 27
  1458   004390                     
  1459                           ;./initialization.h: 27:     PORTAbits.RA0 = 1;
  1460   004390  80CA               	bsf	202,0,c	;volatile
  1461   004392                     
  1462                           ;./initialization.h: 28:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1463   004392  0E03               	movlw	3
  1464   004394  6E19               	movwf	(??_INT2_ISR+1)^0,c
  1465   004396  0E8A               	movlw	138
  1466   004398  6E18               	movwf	??_INT2_ISR^0,c
  1467   00439A  0E56               	movlw	86
  1468   00439C                     i2u56_47:
  1469   00439C  2EE8               	decfsz	wreg,f,c
  1470   00439E  D7FE               	bra	i2u56_47
  1471   0043A0  2E18               	decfsz	??_INT2_ISR^0,f,c
  1472   0043A2  D7FC               	bra	i2u56_47
  1473   0043A4  2E19               	decfsz	(??_INT2_ISR+1)^0,f,c
  1474   0043A6  D7FA               	bra	i2u56_47
  1475   0043A8                     
  1476                           ;./initialization.h: 29:     PORTAbits.RA0 = 0;
  1477   0043A8  90CA               	bcf	202,0,c	;volatile
  1478                           
  1479                           ;./initialization.h: 30:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1480   0043AA  0E03               	movlw	3
  1481   0043AC  6E19               	movwf	(??_INT2_ISR+1)^0,c
  1482   0043AE  0E8A               	movlw	138
  1483   0043B0  6E18               	movwf	??_INT2_ISR^0,c
  1484   0043B2  0E56               	movlw	86
  1485   0043B4                     i2u57_47:
  1486   0043B4  2EE8               	decfsz	wreg,f,c
  1487   0043B6  D7FE               	bra	i2u57_47
  1488   0043B8  2E18               	decfsz	??_INT2_ISR^0,f,c
  1489   0043BA  D7FC               	bra	i2u57_47
  1490   0043BC  2E19               	decfsz	(??_INT2_ISR+1)^0,f,c
  1491   0043BE  D7FA               	bra	i2u57_47
  1492   0043C0                     
  1493                           ;./initialization.h: 31:     PORTAbits.RA0 = 1;
  1494   0043C0  80CA               	bsf	202,0,c	;volatile
  1495                           
  1496                           ;./initialization.h: 32:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1497   0043C2  0E06               	movlw	6
  1498   0043C4  6E19               	movwf	(??_INT2_ISR+1)^0,c
  1499   0043C6  0E13               	movlw	19
  1500   0043C8  6E18               	movwf	??_INT2_ISR^0,c
  1501   0043CA  0EAE               	movlw	174
  1502   0043CC                     i2u58_47:
  1503   0043CC  2EE8               	decfsz	wreg,f,c
  1504   0043CE  D7FE               	bra	i2u58_47
  1505   0043D0  2E18               	decfsz	??_INT2_ISR^0,f,c
  1506   0043D2  D7FC               	bra	i2u58_47
  1507   0043D4  2E19               	decfsz	(??_INT2_ISR+1)^0,f,c
  1508   0043D6  D7FA               	bra	i2u58_47
  1509   0043D8                     
  1510                           ;./initialization.h: 33:     PORTAbits.RA0 = 0;
  1511   0043D8  90CA               	bcf	202,0,c	;volatile
  1512                           
  1513                           ;./initialization.h: 34:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1514   0043DA  0E06               	movlw	6
  1515   0043DC  6E19               	movwf	(??_INT2_ISR+1)^0,c
  1516   0043DE  0E13               	movlw	19
  1517   0043E0  6E18               	movwf	??_INT2_ISR^0,c
  1518   0043E2  0EAE               	movlw	174
  1519   0043E4                     i2u59_47:
  1520   0043E4  2EE8               	decfsz	wreg,f,c
  1521   0043E6  D7FE               	bra	i2u59_47
  1522   0043E8  2E18               	decfsz	??_INT2_ISR^0,f,c
  1523   0043EA  D7FC               	bra	i2u59_47
  1524   0043EC  2E19               	decfsz	(??_INT2_ISR+1)^0,f,c
  1525   0043EE  D7FA               	bra	i2u59_47
  1526   0043F0                     
  1527                           ;./initialization.h: 35:     PORTAbits.RA0 = 1;
  1528   0043F0  80CA               	bsf	202,0,c	;volatile
  1529                           
  1530                           ;./initialization.h: 36:     _delay((unsigned long)((1500)*(4000000/4000.0)));
  1531   0043F2  0E08               	movlw	8
  1532   0043F4  6E19               	movwf	(??_INT2_ISR+1)^0,c
  1533   0043F6  0E9D               	movlw	157
  1534   0043F8  6E18               	movwf	??_INT2_ISR^0,c
  1535   0043FA  0E06               	movlw	6
  1536   0043FC                     i2u60_47:
  1537   0043FC  2EE8               	decfsz	wreg,f,c
  1538   0043FE  D7FE               	bra	i2u60_47
  1539   004400  2E18               	decfsz	??_INT2_ISR^0,f,c
  1540   004402  D7FC               	bra	i2u60_47
  1541   004404  2E19               	decfsz	(??_INT2_ISR+1)^0,f,c
  1542   004406  D7FA               	bra	i2u60_47
  1543   004408                     
  1544                           ;./initialization.h: 37:     PORTAbits.RA0 = 0;
  1545   004408  90CA               	bcf	202,0,c	;volatile
  1546                           
  1547                           ;./initialization.h: 38:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1548   00440A  0E03               	movlw	3
  1549   00440C  6E19               	movwf	(??_INT2_ISR+1)^0,c
  1550   00440E  0E8A               	movlw	138
  1551   004410  6E18               	movwf	??_INT2_ISR^0,c
  1552   004412  0E56               	movlw	86
  1553   004414                     i2u61_47:
  1554   004414  2EE8               	decfsz	wreg,f,c
  1555   004416  D7FE               	bra	i2u61_47
  1556   004418  2E18               	decfsz	??_INT2_ISR^0,f,c
  1557   00441A  D7FC               	bra	i2u61_47
  1558   00441C  2E19               	decfsz	(??_INT2_ISR+1)^0,f,c
  1559   00441E  D7FA               	bra	i2u61_47
  1560   004420                     
  1561                           ;./initialization.h: 39:     PORTAbits.RA0 = 1;
  1562   004420  80CA               	bsf	202,0,c	;volatile
  1563                           
  1564                           ;./initialization.h: 40:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1565   004422  0E02               	movlw	2
  1566   004424  6E19               	movwf	(??_INT2_ISR+1)^0,c
  1567   004426  0E45               	movlw	69
  1568   004428  6E18               	movwf	??_INT2_ISR^0,c
  1569   00442A  0EAA               	movlw	170
  1570   00442C                     i2u62_47:
  1571   00442C  2EE8               	decfsz	wreg,f,c
  1572   00442E  D7FE               	bra	i2u62_47
  1573   004430  2E18               	decfsz	??_INT2_ISR^0,f,c
  1574   004432  D7FC               	bra	i2u62_47
  1575   004434  2E19               	decfsz	(??_INT2_ISR+1)^0,f,c
  1576   004436  D7FA               	bra	i2u62_47
  1577   004438                     
  1578                           ;./initialization.h: 41:     PORTAbits.RA0 = 0;
  1579   004438  90CA               	bcf	202,0,c	;volatile
  1580   00443A                     
  1581                           ;./initialization.h: 43:     PIR7bits.INT2IF = 0;
  1582   00443A  0139               	movlb	57	; () banked
  1583   00443C  9BA7               	bcf	167,5,b	;volatile
  1584   00443E                     
  1585                           ; BSR set to: 57
  1586   00443E  0011               	retfie		f
  1587   004440                     __end_of_INT2_ISR:
  1588                           	callstack 0
  1589                           
  1590                           ;
  1591                           ; H/W Interrupt Vector Table @ 0x4008
  1592                           ;
  1593                           
  1594                           	psect	ivt0x4008
  1595   004008                     __pivt0x4008:
  1596                           	callstack 0
  1597   004008                     ivt0x4008_base:
  1598                           	callstack 0
  1599                           
  1600                           ; Vector 0 : SWINT
  1601   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  1602                           
  1603                           ; Vector 1 : HLVD
  1604   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1605                           
  1606                           ; Vector 2 : OSF
  1607   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1608                           
  1609                           ; Vector 3 : CSW
  1610   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1611                           
  1612                           ; Vector 4 : NVM
  1613   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  1614                           
  1615                           ; Vector 5 : SCAN
  1616   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  1617                           
  1618                           ; Vector 6 : CRC
  1619   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  1620                           
  1621                           ; Vector 7 : IOC
  1622   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  1623                           
  1624                           ; Vector 8 : INT0
  1625   004018  102B               	dw	ivt0x4008_undefint shr (0+2)
  1626                           
  1627                           ; Vector 9 : ZCD
  1628   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1629                           
  1630                           ; Vector 10 : AD
  1631   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1632                           
  1633                           ; Vector 11 : ADT
  1634   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1635                           
  1636                           ; Vector 12 : CMP1
  1637   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  1638                           
  1639                           ; Vector 13 : SMT1
  1640   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  1641                           
  1642                           ; Vector 14 : SMT1PRA
  1643   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  1644                           
  1645                           ; Vector 15 : SMT1PRW
  1646   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  1647                           
  1648                           ; Vector 16 : DMA1SCNT
  1649   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  1650                           
  1651                           ; Vector 17 : DMA1DCNT
  1652   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1653                           
  1654                           ; Vector 18 : DMA1OR
  1655   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1656                           
  1657                           ; Vector 19 : DMA1A
  1658   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1659                           
  1660                           ; Vector 20 : SPI1RX
  1661   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  1662                           
  1663                           ; Vector 21 : SPI1TX
  1664   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  1665                           
  1666                           ; Vector 22 : SPI1
  1667   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  1668                           
  1669                           ; Vector 23 : I2C1RX
  1670   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  1671                           
  1672                           ; Vector 24 : I2C1TX
  1673   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  1674                           
  1675                           ; Vector 25 : I2C1
  1676   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1677                           
  1678                           ; Vector 26 : I2C1E
  1679   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1680                           
  1681                           ; Vector 27 : U1RX
  1682   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1683                           
  1684                           ; Vector 28 : U1TX
  1685   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  1686                           
  1687                           ; Vector 29 : U1E
  1688   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  1689                           
  1690                           ; Vector 30 : U1
  1691   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  1692                           
  1693                           ; Vector 31 : TMR0
  1694   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  1695                           
  1696                           ; Vector 32 : TMR1
  1697   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  1698                           
  1699                           ; Vector 33 : TMR1G
  1700   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1701                           
  1702                           ; Vector 34 : TMR2
  1703   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1704                           
  1705                           ; Vector 35 : CCP1
  1706   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1707                           
  1708                           ; Vector 36 : Undefined
  1709   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  1710                           
  1711                           ; Vector 37 : NCO1
  1712   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  1713                           
  1714                           ; Vector 38 : CWG1
  1715   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  1716                           
  1717                           ; Vector 39 : CLC1
  1718   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  1719                           
  1720                           ; Vector 40 : INT1
  1721   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  1722                           
  1723                           ; Vector 41 : CMP2
  1724   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1725                           
  1726                           ; Vector 42 : DMA2SCNT
  1727   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1728                           
  1729                           ; Vector 43 : DMA2DCNT
  1730   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1731                           
  1732                           ; Vector 44 : DMA2OR
  1733   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  1734                           
  1735                           ; Vector 45 : DMA2A
  1736   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  1737                           
  1738                           ; Vector 46 : I2C2RX
  1739   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  1740                           
  1741                           ; Vector 47 : I2C2TX
  1742   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  1743                           
  1744                           ; Vector 48 : I2C2
  1745   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  1746                           
  1747                           ; Vector 49 : I2C2E
  1748   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1749                           
  1750                           ; Vector 50 : U2RX
  1751   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1752                           
  1753                           ; Vector 51 : U2TX
  1754   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1755                           
  1756                           ; Vector 52 : U2E
  1757   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  1758                           
  1759                           ; Vector 53 : U2
  1760   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  1761                           
  1762                           ; Vector 54 : TMR3
  1763   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  1764                           
  1765                           ; Vector 55 : TMR3G
  1766   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  1767                           
  1768                           ; Vector 56 : TMR4
  1769   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  1770                           
  1771                           ; Vector 57 : CCP2
  1772   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1773                           
  1774                           ; Vector 58 : Undefined
  1775   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1776                           
  1777                           ; Vector 59 : CWG2
  1778   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1779                           
  1780                           ; Vector 60 : CLC2
  1781   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  1782                           
  1783                           ; Vector 61 : INT2
  1784   004082  10E4               	dw	_INT2_ISR shr (0+2)
  1785                           
  1786                           ; Vector 62 : Undefined
  1787   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  1788                           
  1789                           ; Vector 63 : Undefined
  1790   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  1791                           
  1792                           ; Vector 64 : Undefined
  1793   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  1794                           
  1795                           ; Vector 65 : Undefined
  1796   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1797                           
  1798                           ; Vector 66 : Undefined
  1799   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1800                           
  1801                           ; Vector 67 : Undefined
  1802   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1803                           
  1804                           ; Vector 68 : Undefined
  1805   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  1806                           
  1807                           ; Vector 69 : Undefined
  1808   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  1809                           
  1810                           ; Vector 70 : TMR5
  1811   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  1812                           
  1813                           ; Vector 71 : TMR5G
  1814   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  1815                           
  1816                           ; Vector 72 : TMR6
  1817   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  1818                           
  1819                           ; Vector 73 : CCP3
  1820   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  1821                           
  1822                           ; Vector 74 : CWG3
  1823   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  1824                           
  1825                           ; Vector 75 : CLC3
  1826   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  1827                           
  1828                           ; Vector 76 : Undefined
  1829   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  1830                           
  1831                           ; Vector 77 : Undefined
  1832   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  1833                           
  1834                           ; Vector 78 : Undefined
  1835   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  1836                           
  1837                           ; Vector 79 : Undefined
  1838   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  1839                           
  1840                           ; Vector 80 : CCP4
  1841   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  1842                           
  1843                           ; Vector 81 : CLC4
  1844   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  1845   0040AC                     ivt0x4008_undefint:
  1846                           	callstack 0
  1847   0040AC  00FF               	reset	
  1848                           
  1849                           	psect	smallconst
  1850   002000                     __psmallconst:
  1851                           	callstack 0
  1852   002000  00                 	db	0
  1853   002001  00                 	db	0	; dummy byte at the end
  1854   000000                     
  1855                           	psect	rparam
  1856   000000                     
  1857                           	psect	config
  1858                           
  1859                           ;Config register CONFIG1L @ 0x300000
  1860                           ;	External Oscillator Selection
  1861                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1862                           ;	Reset Oscillator Selection
  1863                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1864   300000                     	org	3145728
  1865   300000  F8                 	db	248
  1866                           
  1867                           ;Config register CONFIG1H @ 0x300001
  1868                           ;	Clock out Enable bit
  1869                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1870                           ;	PRLOCKED One-Way Set Enable bit
  1871                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1872                           ;	Clock Switch Enable bit
  1873                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1874                           ;	Fail-Safe Clock Monitor Enable bit
  1875                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1876   300001                     	org	3145729
  1877   300001  FF                 	db	255
  1878                           
  1879                           ;Config register CONFIG2L @ 0x300002
  1880                           ;	MCLR Enable bit
  1881                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1882                           ;	Power-up timer selection bits
  1883                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1884                           ;	Multi-vector enable bit
  1885                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1886                           ;	IVTLOCK bit One-way set enable bit
  1887                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1888                           ;	Low Power BOR Enable bit
  1889                           ;	LPBOREN = OFF, ULPBOR disabled
  1890                           ;	Brown-out Reset Enable bits
  1891                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1892   300002                     	org	3145730
  1893   300002  FF                 	db	255
  1894                           
  1895                           ;Config register CONFIG2H @ 0x300003
  1896                           ;	Brown-out Reset Voltage Selection bits
  1897                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1898                           ;	ZCD Disable bit
  1899                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1900                           ;	PPSLOCK bit One-Way Set Enable bit
  1901                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1902                           ;	Stack Full/Underflow Reset Enable bit
  1903                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1904                           ;	Debugger Enable bit
  1905                           ;	DEBUG = OFF, Background debugger disabled
  1906                           ;	Extended Instruction Set Enable bit
  1907                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1908   300003                     	org	3145731
  1909   300003  FF                 	db	255
  1910                           
  1911                           ;Config register CONFIG3L @ 0x300004
  1912                           ;	WDT Period selection bits
  1913                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1914                           ;	WDT operating mode
  1915                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1916   300004                     	org	3145732
  1917   300004  9F                 	db	159
  1918                           
  1919                           ;Config register CONFIG3H @ 0x300005
  1920                           ;	WDT Window Select bits
  1921                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1922                           ;	WDT input clock selector
  1923                           ;	WDTCCS = SC, Software Control
  1924   300005                     	org	3145733
  1925   300005  FF                 	db	255
  1926                           
  1927                           ;Config register CONFIG4L @ 0x300006
  1928                           ;	Boot Block Size selection bits
  1929                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1930                           ;	Boot Block enable bit
  1931                           ;	BBEN = OFF, Boot block disabled
  1932                           ;	Storage Area Flash enable bit
  1933                           ;	SAFEN = OFF, SAF disabled
  1934                           ;	Application Block write protection bit
  1935                           ;	WRTAPP = OFF, Application Block not write protected
  1936   300006                     	org	3145734
  1937   300006  FF                 	db	255
  1938                           
  1939                           ;Config register CONFIG4H @ 0x300007
  1940                           ;	Boot Block Write Protection bit
  1941                           ;	WRTB = OFF, Boot Block not write-protected
  1942                           ;	Configuration Register Write Protection bit
  1943                           ;	WRTC = OFF, Configuration registers not write-protected
  1944                           ;	Data EEPROM Write Protection bit
  1945                           ;	WRTD = OFF, Data EEPROM not write-protected
  1946                           ;	SAF Write protection bit
  1947                           ;	WRTSAF = OFF, SAF not Write Protected
  1948                           ;	Low Voltage Programming Enable bit
  1949                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1950   300007                     	org	3145735
  1951   300007  FF                 	db	255
  1952                           
  1953                           ;Config register CONFIG5L @ 0x300008
  1954                           ;	PFM and Data EEPROM Code Protection bit
  1955                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1956   300008                     	org	3145736
  1957   300008  FF                 	db	255
  1958                           
  1959                           ;Config register CONFIG5H @ 0x300009
  1960                           ;	unspecified, using default values
  1961   300009                     	org	3145737
  1962   300009  FF                 	db	255
  1963                           tosu	equ	0x3FFF
  1964                           tosh	equ	0x3FFE
  1965                           tosl	equ	0x3FFD
  1966                           stkptr	equ	0x3FFC
  1967                           pclatu	equ	0x3FFB
  1968                           pclath	equ	0x3FFA
  1969                           pcl	equ	0x3FF9
  1970                           tblptru	equ	0x3FF8
  1971                           tblptrh	equ	0x3FF7
  1972                           tblptrl	equ	0x3FF6
  1973                           tablat	equ	0x3FF5
  1974                           prodh	equ	0x3FF4
  1975                           prodl	equ	0x3FF3
  1976                           indf0	equ	0x3FEF
  1977                           postinc0	equ	0x3FEE
  1978                           postdec0	equ	0x3FED
  1979                           preinc0	equ	0x3FEC
  1980                           plusw0	equ	0x3FEB
  1981                           fsr0h	equ	0x3FEA
  1982                           fsr0l	equ	0x3FE9
  1983                           wreg	equ	0x3FE8
  1984                           indf1	equ	0x3FE7
  1985                           postinc1	equ	0x3FE6
  1986                           postdec1	equ	0x3FE5
  1987                           preinc1	equ	0x3FE4
  1988                           plusw1	equ	0x3FE3
  1989                           fsr1h	equ	0x3FE2
  1990                           fsr1l	equ	0x3FE1
  1991                           bsr	equ	0x3FE0
  1992                           indf2	equ	0x3FDF
  1993                           postinc2	equ	0x3FDE
  1994                           postdec2	equ	0x3FDD
  1995                           preinc2	equ	0x3FDC
  1996                           plusw2	equ	0x3FDB
  1997                           fsr2h	equ	0x3FDA
  1998                           fsr2l	equ	0x3FD9
  1999                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_getUserGuess
    _main->_setSecretCode
    _setSecretCode->_sevenSeg
    _getUserGuess->_sevenSeg

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2610
                       _getUserGuess
                        _handleGuess
                      _initializeALL
                      _setSecretCode
 ---------------------------------------------------------------------------------
 (1) _setSecretCode                                        2     2      0    1305
                                              5 COMRAM     2     2      0
                           _sevenSeg
 ---------------------------------------------------------------------------------
 (1) _initializeALL                                        0     0      0       0
               _INTERRUPT_Initialize
                     _intializePorts
 ---------------------------------------------------------------------------------
 (2) _intializePorts                                       0     0      0       0
                    _initializePORTA
                    _initializePORTB
                    _initializePORTC
                    _initializePORTD
 ---------------------------------------------------------------------------------
 (3) _initializePORTD                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _initializePORTC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _initializePORTB                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _initializePORTA                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handleGuess                                          2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _getUserGuess                                         2     2      0    1305
                                              5 COMRAM     2     2      0
                           _sevenSeg
 ---------------------------------------------------------------------------------
 (2) _sevenSeg                                             3     0      3    1305
                                              2 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT2_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getUserGuess
     _sevenSeg
   _handleGuess
   _initializeALL
     _INTERRUPT_Initialize
     _intializePorts
       _initializePORTA
       _initializePORTB
       _initializePORTC
       _initializePORTD
   _setSecretCode
     _sevenSeg

 _INT2_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      82        0.0%
BITBIGSFRlhllhh    549      0       0      74        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlll       187      0       0      81        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRlhlll      98      0       0      78        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7      1E       1       31.6%
BITBIGSFRhhh        28      0       0      69        0.0%
BITBIGSFRlhllhh      F      0       0      75        0.0%
BITBIGSFRlhllhl      F      0       0      77        0.0%
BITBIGSFRllhh        F      0       0      79        0.0%
BITBIGSFRllhl        F      0       0      80        0.0%
BITBIGSFRlhllhh      E      0       0      76        0.0%
BITBIGSFRlhlhh       4      0       0      73        0.0%
BITBIGSFRlhhh        4      0       0      72        0.0%
BITBIGSFRhlh         4      0       0      71        0.0%
BITBIGSFRhhl         2      0       0      70        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      14        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 21 21:12:49 2024

                  _USER_GUESS 000D                            l91 454E                            l83 45E4  
                          l94 45CC                            l97 45BA                           l100 457E  
                         l103 4592                           l120 4288                           l113 44F0  
                         l106 45A6                           l141 4102                           l133 4360  
                         l117 4260                           l150 418E                           l134 438C  
                         l126 42EC                           l160 449C                           l129 4314  
                         l138 40DA                           l155 4236                           l147 4166  
                         l158 4478                           l850 4594                           l844 45A8  
                         l852 45BC                           l854 4532                           l846 4568  
                         l870 45DA                           l856 4542                           l848 4580  
                         l872 45E2                           l970 4458                           l980 4494  
                         l972 445A                           l974 4472                           l976 447A  
                         l968 4440                           l978 4492                           u300 42AC  
                         u301 42A8                           u310 42BC                           u311 42B8  
                         u400 4126                           u240 4458                           u320 42D4  
                         u401 4122                           u241 4454                           u321 42D0  
                         u250 44AC                           u410 4136                           u330 42FA  
                         u251 44A8                           u411 4132                           u331 42F6  
                         u260 44C8                           u420 414E                           u340 4322  
                         u261 44C4                           u421 414A                           u341 431E  
                         u270 44EC                           u430 4174                           u350 4338  
                         u271 44E8                           u431 4170                           u351 4334  
                         u440 419C                           u360 4348                           u280 426E  
                         u441 4198                           u361 4344                           u281 426A  
                         u450 41B2                           u370 4360                           u290 4296  
                         u451 41AE                           u507 4464                           u371 435C  
                         u291 4292                           u460 41C2                           u380 40E8  
                         u461 41BE                           u381 40E4                           u517 4484  
                         u470 41DA                           u390 4110                           u471 41D6  
                         u391 410C                           u527 40F2                           u537 417E  
                         u547 41E8                           u557 4200                           u487 4278  
                         u497 4304                ??_getUserGuess 001D                           wreg 3FE8  
                        l1010 449E                          l1020 44EC                          l1012 44AC  
                        l1100 41C2                          l1014 44C8                          l1110 41F4  
                        l1022 4238                          l1016 44D0                          l1112 41F6  
                        l1104 41CA                          l1032 429E                          l1040 42C4  
                        l1024 424C                          l1120 4558                          l1018 44DC  
                        l1114 4210                          l1106 41DA                          l1042 42D4  
                        l1034 42AC                          l1026 426E                          l1122 455C  
                        l1108 41DE                          l1052 432A                          l1060 4350  
                        l1044 42D8                          l1036 42BC                          l1028 4296  
                        l1116 4550                          l1070 40E8                          l1062 4362  
                        l1054 4338                          l1046 42FA                          l1118 4554  
                        l1080 4136                          l1072 4110                          l1064 4366  
                        l1056 4348                          l1048 4322                          l1090 4174  
                        l1066 40B2                          l1092 419C                          l1076 4118  
                        l1084 413E                          l1068 40C6                          l1086 414E  
                        l1078 4126                          l1096 41A4                          l1088 4152  
                        l1098 41B2                          _LATA 3FBA                          _LATB 3FBB  
                        _LATC 3FBC                          _LATD 3FBD                          i2l88 443E  
                        _WPUB 3A51                          _done 0017                          _main 4550  
                        fsr2h 3FDA                          indf2 3FDF                          fsr1l 3FE1  
                        fsr2l 3FD9                          start 40AE                  ___param_bank 0000  
            __end_of_INT2_ISR 4440                         ?_main 0018             ??_initializePORTA 001A  
           ??_initializePORTB 001A             ??_initializePORTC 001A             ??_initializePORTD 001A  
                       i2l990 43D8                         i2l982 4390                         i2l992 43F0  
                       i2l984 4392                         i2l994 4408                         i2l986 43A8  
                       i2l996 4420                         i2l988 43C0                         i2l998 4438  
                       _PORTA 3FCA                         _PORTB 3FCB                         _PORTC 3FCC  
                       _PORTD 3FCD                         _TRISA 3FC2                         _TRISB 3FC3  
                       _TRISC 3FC4                         _TRISD 3FC5                         _count 0015  
                       tablat 3FF5                         status 3FD8         __end_of_setSecretCode 438E  
             __initialization 44F2                  __end_of_main 4568                        ??_main 001F  
               __activetblptr 0000                        _ANSELA 3A40                        _ANSELB 3A50  
                      _ANSELC 3A60                        _ANSELD 3A70                        i2l1000 443A  
        __end_of_getUserGuess 4238              ??_intializePorts 001A                        clear_0 451A  
                      isa$std 0001                  __pdataCOMRAM 0001              __end_of_sevenSeg 44F2  
                __mediumconst 0000                        tblptrh 3FF7                        tblptrl 3FF6  
                      tblptru 3FF8                    __accesstop 0060       __end_of__initialization 452C  
                   ?_INT2_ISR 0018                 ___rparam_used 0001                __pcstackCOMRAM 0018  
                  ??_INT2_ISR 0018                       IVTBASEH 3FD6                       IVTBASEL 3FD5  
                     IVTBASEU 3FD7                 _initializeALL 45DA               _initializePORTA 45A8  
             _initializePORTB 4568               _initializePORTC 4594               _initializePORTD 4580  
                     i2u60_47 43FC                       i2u61_47 4414                       i2u62_47 442C  
                     i2u56_47 439C                       i2u57_47 43B4                       i2u58_47 43CC  
                     i2u59_47 43E4                ?_initializeALL 0018                       __Hparam 0000  
                     __Lparam 0000                     ?_sevenSeg 001A                  __psmallconst 2000  
                     __pcinit 44F2                       __ramtop 2000                 ivt0x4008_base 4008  
                     __ptext0 4550                       __ptext1 4238                       __ptext2 45DA  
                     __ptext3 45BC                       __ptext4 4580                       __ptext5 4594  
                     __ptext6 4568                       __ptext7 45A8                       __ptext8 4532  
                     __ptext9 4440                  _getUserGuess 40B2          end_of_initialization 452C  
     __end_of_initializePORTA 45BC       __end_of_initializePORTB 4580       __end_of_initializePORTC 45A8  
     __end_of_initializePORTD 4594                    ??_sevenSeg 001D                       postdec1 3FE5  
                     postinc0 3FEE                     _PORTAbits 3FCA                     _PORTBbits 3FCB  
            sevenSeg@isSecond 001C                 ??_handleGuess 001A               ??_initializeALL 001A  
__end_of_INTERRUPT_Initialize 4550                 __pidataCOMRAM 45CE                _sevenSegValues 0001  
         start_initialization 44F2           __end_of_handleGuess 449E              ?_initializePORTA 0018  
            ?_initializePORTB 0018              ?_initializePORTC 0018              ?_initializePORTD 0018  
               _setSecretCode 4238                   __pbssCOMRAM 000D                   __pivt0x4008 4008  
              ?_setSecretCode 0018                   _handleGuess 4440                   __smallconst 2000  
        _INTERRUPT_Initialize 4532                      _INT2_ISR 4390                      _IPR7bits 3987  
                    _PIE7bits 3997                      _IVTBASEH 3FD6                      _IVTBASEL 3FD5  
                    _IVTBASEU 3FD7                      _PIR7bits 39A7             ivt0x4008_undefint 40AC  
                 _INTCON0bits 3FD2                     copy_data0 4506         ?_INTERRUPT_Initialize 0018  
             ??_setSecretCode 001D                      __Hrparam 0000                      __Lrparam 0000  
               sevenSeg@index 001A                   _SECRET_CODE 000F                      _pr1Count 0013  
                    _pr2Count 0011                _intializePorts 45BC                      __ptext10 40B2  
                    __ptext11 449E                      __ptext12 4390         __end_of_initializeALL 45E6  
                    _sevenSeg 449E                      isa$xinst 0000        __end_of_intializePorts 45CE  
      ??_INTERRUPT_Initialize 001A                      intlevel2 0000                  ?_handleGuess 0018  
               ?_getUserGuess 0018               ?_intializePorts 0018  
