

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun May 12 10:47:32 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=4,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Generated 12/10/2023 GMT
    71                           ; 
    72                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F47K42 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105                           	psect	idataBANK0
   106   005E9E                     __pidataBANK0:
   107                           	callstack 0
   108                           
   109                           ;initializer for _userGuess
   110   005E9E  FFFF               	dw	65535
   111   000000                     _T2CON	set	16300
   112   000000                     _LATB	set	16315
   113   000000                     _TRISB	set	16323
   114   000000                     _PORTBbits	set	16331
   115   000000                     _PORTCbits	set	16332
   116   000000                     _NVMCON1bits	set	14821
   117   000000                     _PPSLOCKbits	set	15039
   118   000000                     _CCP2CONbits	set	16250
   119   000000                     _TRISBbits	set	16323
   120   000000                     _PR2	set	16299
   121   000000                     _TMR2	set	16298
   122   000000                     _T2CONbits	set	16300
   123   000000                     _PORTB	set	16331
   124   000000                     _PORTAbits	set	16330
   125   000000                     _LATCbits	set	16316
   126   000000                     _LATC3	set	130531
   127   000000                     _IPR1bits	set	14721
   128   000000                     _PIR1bits	set	14753
   129   000000                     _ANSELA	set	14912
   130   000000                     _LATA	set	16314
   131   000000                     _LATD	set	16317
   132   000000                     _TRISCbits	set	16324
   133   000000                     _TRISD	set	16325
   134   000000                     _LATC2	set	130530
   135   000000                     _PORTA	set	16330
   136   000000                     _TRISA	set	16322
   137   000000                     _ANSELB	set	14928
   138   000000                     _ANSELCbits	set	14944
   139   000000                     _INTCON0bits	set	16338
   140   000000                     _PPSLOCK	set	15039
   141   000000                     _T2TMR	set	16298
   142   000000                     _T2PR	set	16299
   143   000000                     _T2HLT	set	16301
   144   000000                     _T2CLKCON	set	16302
   145   000000                     _PIR4bits	set	14756
   146   000000                     _NVMADRL	set	14816
   147   000000                     _NVMCON1	set	14821
   148   000000                     _IVTBASEL	set	16341
   149   000000                     _IVTBASEH	set	16342
   150   000000                     _IVTBASEU	set	16343
   151   000000                     _PIE1bits	set	14737
   152   000000                     _RB3PPS	set	14859
   153   000000                     _NVMCON2	set	14822
   154   000000                     _NVMDAT	set	14819
   155   000000                     _T2RST	set	16303
   156   000000                     _OSCSTATbits	set	14812
   157   000000                     _CCPTMRS0bits	set	16222
   158   000000                     _CCPR2L	set	16248
   159   000000                     _CCPR2H	set	16249
   160   000000                     _CCP2CON	set	16250
   161   000000                     _OSCFRQ	set	14815
   162                           
   163                           	psect	mediumconst
   164   0040B2                     __pmediumconst:
   165                           	callstack 0
   166   0040B2  00                 	db	0
   167   0040B3                     STR_14:
   168                           
   169                           ; BSR set to: 57
   170   0040B3  20                 	db	32
   171   0040B4  20                 	db	32
   172   0040B5  49                 	db	73	;'I'
   173   0040B6  6E                 	db	110	;'n'
   174   0040B7  69                 	db	105	;'i'
   175   0040B8  74                 	db	116	;'t'
   176   0040B9  69                 	db	105	;'i'
   177   0040BA  61                 	db	97	;'a'
   178   0040BB  6C                 	db	108	;'l'
   179   0040BC  69                 	db	105	;'i'
   180   0040BD  7A                 	db	122	;'z'
   181   0040BE  69                 	db	105	;'i'
   182   0040BF  6E                 	db	110	;'n'
   183   0040C0  67                 	db	103	;'g'
   184   0040C1  20                 	db	32
   185   0040C2  20                 	db	32
   186   0040C3  00                 	db	0
   187   0040C4                     STR_20:
   188                           
   189                           ; BSR set to: 57
   190   0040C4  45                 	db	69	;'E'
   191   0040C5  6E                 	db	110	;'n'
   192   0040C6  74                 	db	116	;'t'
   193   0040C7  65                 	db	101	;'e'
   194   0040C8  72                 	db	114	;'r'
   195   0040C9  20                 	db	32
   196   0040CA  50                 	db	80	;'P'
   197   0040CB  61                 	db	97	;'a'
   198   0040CC  73                 	db	115	;'s'
   199   0040CD  73                 	db	115	;'s'
   200   0040CE  77                 	db	119	;'w'
   201   0040CF  6F                 	db	111	;'o'
   202   0040D0  72                 	db	114	;'r'
   203   0040D1  64                 	db	100	;'d'
   204   0040D2  3A                 	db	58	;':'
   205   0040D3  20                 	db	32
   206   0040D4  00                 	db	0
   207   0040D5                     STR_8:
   208                           
   209                           ; BSR set to: 57
   210   0040D5  2A                 	db	42
   211   0040D6  2A                 	db	42
   212   0040D7  2A                 	db	42
   213   0040D8  2A                 	db	42
   214   0040D9  2A                 	db	42
   215   0040DA  2A                 	db	42
   216   0040DB  2A                 	db	42
   217   0040DC  2A                 	db	42
   218   0040DD  2A                 	db	42
   219   0040DE  2A                 	db	42
   220   0040DF  2A                 	db	42
   221   0040E0  2A                 	db	42
   222   0040E1  2A                 	db	42
   223   0040E2  2A                 	db	42
   224   0040E3  2A                 	db	42
   225   0040E4  2A                 	db	42
   226   0040E5  00                 	db	0
   227   0040E6                     STR_15:
   228                           
   229                           ; BSR set to: 57
   230   0040E6  43                 	db	67	;'C'
   231   0040E7  68                 	db	104	;'h'
   232   0040E8  65                 	db	101	;'e'
   233   0040E9  63                 	db	99	;'c'
   234   0040EA  6B                 	db	107	;'k'
   235   0040EB  69                 	db	105	;'i'
   236   0040EC  6E                 	db	110	;'n'
   237   0040ED  67                 	db	103	;'g'
   238   0040EE  20                 	db	32
   239   0040EF  50                 	db	80	;'P'
   240   0040F0  61                 	db	97	;'a'
   241   0040F1  73                 	db	115	;'s'
   242   0040F2  73                 	db	115	;'s'
   243   0040F3  77                 	db	119	;'w'
   244   0040F4  72                 	db	114	;'r'
   245   0040F5  64                 	db	100	;'d'
   246   0040F6  00                 	db	0
   247   0040F7                     STR_18:
   248                           
   249                           ; BSR set to: 57
   250   0040F7  73                 	db	115	;'s'
   251   0040F8  65                 	db	101	;'e'
   252   0040F9  74                 	db	116	;'t'
   253   0040FA  20                 	db	32
   254   0040FB  70                 	db	112	;'p'
   255   0040FC  6C                 	db	108	;'l'
   256   0040FD  65                 	db	101	;'e'
   257   0040FE  61                 	db	97	;'a'
   258   0040FF  73                 	db	115	;'s'
   259   004100  65                 	db	101	;'e'
   260   004101  20                 	db	32
   261   004102  72                 	db	114	;'r'
   262   004103  65                 	db	101	;'e'
   263   004104  73                 	db	115	;'s'
   264   004105  65                 	db	101	;'e'
   265   004106  74                 	db	116	;'t'
   266   004107  00                 	db	0
   267   004108                     STR_9:
   268                           
   269                           ; BSR set to: 57
   270   004108  4F                 	db	79	;'O'
   271   004109  70                 	db	112	;'p'
   272   00410A  65                 	db	101	;'e'
   273   00410B  6E                 	db	110	;'n'
   274   00410C  69                 	db	105	;'i'
   275   00410D  6E                 	db	110	;'n'
   276   00410E  67                 	db	103	;'g'
   277   00410F  20                 	db	32
   278   004110  42                 	db	66	;'B'
   279   004111  6F                 	db	111	;'o'
   280   004112  78                 	db	120	;'x'
   281   004113  20                 	db	32
   282   004114  69                 	db	105	;'i'
   283   004115  6E                 	db	110	;'n'
   284   004116  3A                 	db	58	;':'
   285   004117  00                 	db	0
   286   004118                     STR_11:
   287                           
   288                           ; BSR set to: 57
   289   004118  43                 	db	67	;'C'
   290   004119  6C                 	db	108	;'l'
   291   00411A  6F                 	db	111	;'o'
   292   00411B  73                 	db	115	;'s'
   293   00411C  69                 	db	105	;'i'
   294   00411D  6E                 	db	110	;'n'
   295   00411E  67                 	db	103	;'g'
   296   00411F  20                 	db	32
   297   004120  42                 	db	66	;'B'
   298   004121  6F                 	db	111	;'o'
   299   004122  78                 	db	120	;'x'
   300   004123  20                 	db	32
   301   004124  69                 	db	105	;'i'
   302   004125  6E                 	db	110	;'n'
   303   004126  3A                 	db	58	;':'
   304   004127  00                 	db	0
   305   004128                     STR_13:
   306                           
   307                           ; BSR set to: 57
   308   004128  45                 	db	69	;'E'
   309   004129  6C                 	db	108	;'l'
   310   00412A  65                 	db	101	;'e'
   311   00412B  63                 	db	99	;'c'
   312   00412C  74                 	db	116	;'t'
   313   00412D  72                 	db	114	;'r'
   314   00412E  6F                 	db	111	;'o'
   315   00412F  6E                 	db	110	;'n'
   316   004130  69                 	db	105	;'i'
   317   004131  63                 	db	99	;'c'
   318   004132  20                 	db	32
   319   004133  53                 	db	83	;'S'
   320   004134  61                 	db	97	;'a'
   321   004135  66                 	db	102	;'f'
   322   004136  65                 	db	101	;'e'
   323   004137  00                 	db	0
   324   004138                     STR_19:
   325                           
   326                           ; BSR set to: 57
   327   004138  50                 	db	80	;'P'
   328   004139  61                 	db	97	;'a'
   329   00413A  73                 	db	115	;'s'
   330   00413B  73                 	db	115	;'s'
   331   00413C  77                 	db	119	;'w'
   332   00413D  6F                 	db	111	;'o'
   333   00413E  72                 	db	114	;'r'
   334   00413F  64                 	db	100	;'d'
   335   004140  20                 	db	32
   336   004141  69                 	db	105	;'i'
   337   004142  73                 	db	115	;'s'
   338   004143  20                 	db	32
   339   004144  73                 	db	115	;'s'
   340   004145  65                 	db	101	;'e'
   341   004146  74                 	db	116	;'t'
   342   004147  00                 	db	0
   343   004148                     STR_17:
   344                           
   345                           ; BSR set to: 57
   346   004148  50                 	db	80	;'P'
   347   004149  61                 	db	97	;'a'
   348   00414A  73                 	db	115	;'s'
   349   00414B  73                 	db	115	;'s'
   350   00414C  77                 	db	119	;'w'
   351   00414D  6F                 	db	111	;'o'
   352   00414E  72                 	db	114	;'r'
   353   00414F  64                 	db	100	;'d'
   354   004150  20                 	db	32
   355   004151  69                 	db	105	;'i'
   356   004152  73                 	db	115	;'s'
   357   004153  20                 	db	32
   358   004154  6E                 	db	110	;'n'
   359   004155  6F                 	db	111	;'o'
   360   004156  74                 	db	116	;'t'
   361   004157  00                 	db	0
   362   004158                     STR_27:
   363                           
   364                           ; BSR set to: 57
   365   004158  52                 	db	82	;'R'
   366   004159  65                 	db	101	;'e'
   367   00415A  69                 	db	105	;'i'
   368   00415B  6E                 	db	110	;'n'
   369   00415C  69                 	db	105	;'i'
   370   00415D  74                 	db	116	;'t'
   371   00415E  69                 	db	105	;'i'
   372   00415F  61                 	db	97	;'a'
   373   004160  6C                 	db	108	;'l'
   374   004161  69                 	db	105	;'i'
   375   004162  7A                 	db	122	;'z'
   376   004163  69                 	db	105	;'i'
   377   004164  6E                 	db	110	;'n'
   378   004165  67                 	db	103	;'g'
   379   004166  00                 	db	0
   380   004167                     STR_7:
   381                           
   382                           ; BSR set to: 57
   383   004167  50                 	db	80	;'P'
   384   004168  61                 	db	97	;'a'
   385   004169  73                 	db	115	;'s'
   386   00416A  73                 	db	115	;'s'
   387   00416B  77                 	db	119	;'w'
   388   00416C  6F                 	db	111	;'o'
   389   00416D  72                 	db	114	;'r'
   390   00416E  64                 	db	100	;'d'
   391   00416F  20                 	db	32
   392   004170  52                 	db	82	;'R'
   393   004171  65                 	db	101	;'e'
   394   004172  73                 	db	115	;'s'
   395   004173  65                 	db	101	;'e'
   396   004174  74                 	db	116	;'t'
   397   004175  00                 	db	0
   398   004176                     STR_6:
   399                           
   400                           ; BSR set to: 57
   401   004176  4E                 	db	78	;'N'
   402   004177  65                 	db	101	;'e'
   403   004178  77                 	db	119	;'w'
   404   004179  20                 	db	32
   405   00417A  50                 	db	80	;'P'
   406   00417B  61                 	db	97	;'a'
   407   00417C  73                 	db	115	;'s'
   408   00417D  73                 	db	115	;'s'
   409   00417E  77                 	db	119	;'w'
   410   00417F  6F                 	db	111	;'o'
   411   004180  72                 	db	114	;'r'
   412   004181  64                 	db	100	;'d'
   413   004182  3A                 	db	58	;':'
   414   004183  00                 	db	0
   415   004184                     STR_26:
   416                           
   417                           ; BSR set to: 57
   418   004184  69                 	db	105	;'i'
   419   004185  6E                 	db	110	;'n'
   420   004186  63                 	db	99	;'c'
   421   004187  6F                 	db	111	;'o'
   422   004188  72                 	db	114	;'r'
   423   004189  72                 	db	114	;'r'
   424   00418A  65                 	db	101	;'e'
   425   00418B  63                 	db	99	;'c'
   426   00418C  74                 	db	116	;'t'
   427   00418D  2E                 	db	46
   428   00418E  2E                 	db	46
   429   00418F  2E                 	db	46
   430   004190  00                 	db	0
   431   004191                     STR_21:
   432                           
   433                           ; BSR set to: 57
   434   004191  50                 	db	80	;'P'
   435   004192  61                 	db	97	;'a'
   436   004193  73                 	db	115	;'s'
   437   004194  73                 	db	115	;'s'
   438   004195  77                 	db	119	;'w'
   439   004196  6F                 	db	111	;'o'
   440   004197  72                 	db	114	;'r'
   441   004198  64                 	db	100	;'d'
   442   004199  20                 	db	32
   443   00419A  69                 	db	105	;'i'
   444   00419B  73                 	db	115	;'s'
   445   00419C  00                 	db	0
   446   00419D                     STR_24:
   447                           
   448                           ; BSR set to: 57
   449   00419D  42                 	db	66	;'B'
   450   00419E  6F                 	db	111	;'o'
   451   00419F  78                 	db	120	;'x'
   452   0041A0  20                 	db	32
   453   0041A1  63                 	db	99	;'c'
   454   0041A2  6C                 	db	108	;'l'
   455   0041A3  6F                 	db	111	;'o'
   456   0041A4  73                 	db	115	;'s'
   457   0041A5  65                 	db	101	;'e'
   458   0041A6  64                 	db	100	;'d'
   459   0041A7  00                 	db	0
   460   0041A8                     STR_23:
   461                           
   462                           ; BSR set to: 57
   463   0041A8  42                 	db	66	;'B'
   464   0041A9  6F                 	db	111	;'o'
   465   0041AA  78                 	db	120	;'x'
   466   0041AB  20                 	db	32
   467   0041AC  6F                 	db	111	;'o'
   468   0041AD  70                 	db	112	;'p'
   469   0041AE  65                 	db	101	;'e'
   470   0041AF  6E                 	db	110	;'n'
   471   0041B0  00                 	db	0
   472   0041B1                     STR_22:
   473                           
   474                           ; BSR set to: 57
   475   0041B1  63                 	db	99	;'c'
   476   0041B2  6F                 	db	111	;'o'
   477   0041B3  72                 	db	114	;'r'
   478   0041B4  72                 	db	114	;'r'
   479   0041B5  65                 	db	101	;'e'
   480   0041B6  63                 	db	99	;'c'
   481   0041B7  74                 	db	116	;'t'
   482   0041B8  00                 	db	0
   483   0041B9                     STR_1:
   484                           
   485                           ; BSR set to: 57
   486   0041B9  5F                 	db	95	;'_'
   487   0041BA  5F                 	db	95	;'_'
   488   0041BB  5F                 	db	95	;'_'
   489   0041BC  5F                 	db	95	;'_'
   490   0041BD  00                 	db	0
   491   0041BE                     STR_2:
   492                           
   493                           ; BSR set to: 57
   494   0041BE  25                 	db	37
   495   0041BF  64                 	db	100	;'d'
   496   0041C0  00                 	db	0
   497   0041C1  00                 	db	0	; dummy byte at the end
   498   000000                     
   499                           ; #config settings
   500                           
   501                           	psect	cinit
   502   0059A4                     __pcinit:
   503                           	callstack 0
   504   0059A4                     start_initialization:
   505                           	callstack 0
   506   0059A4                     __initialization:
   507                           	callstack 0
   508                           
   509                           ; Initialize objects allocated to BANK0 (2 bytes)
   510                           ; load TBLPTR registers with __pidataBANK0
   511   0059A4  0E9E               	movlw	low __pidataBANK0
   512   0059A6  6EF6               	movwf	tblptrl,c
   513   0059A8  0E5E               	movlw	high __pidataBANK0
   514   0059AA  6EF7               	movwf	tblptrh,c
   515   0059AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   516   0059AE  6EF8               	movwf	tblptru,c
   517   0059B0  0009               	tblrd		*+	;fetch initializer
   518   0059B2  006F FFD4  F0DA    	movff	tablat,__pdataBANK0
   519   0059B8  0009               	tblrd		*+	;fetch initializer
   520   0059BA  006F FFD4  F0DB    	movff	tablat,__pdataBANK0+1
   521                           
   522                           ; Clear objects allocated to BANK0 (39 bytes)
   523   0059C0  EE00  F0B3         	lfsr	0,__pbssBANK0
   524   0059C4  0E27               	movlw	39
   525   0059C6                     clear_0:
   526   0059C6  6AEE               	clrf	postinc0,c
   527   0059C8  06E8               	decf	wreg,f,c
   528   0059CA  E1FD               	bnz	clear_0
   529                           
   530                           ; Clear objects allocated to COMRAM (12 bytes)
   531   0059CC  EE00  F052         	lfsr	0,__pbssCOMRAM
   532   0059D0  0E0C               	movlw	12
   533   0059D2                     clear_1:
   534   0059D2  6AEE               	clrf	postinc0,c
   535   0059D4  06E8               	decf	wreg,f,c
   536   0059D6  E1FD               	bnz	clear_1
   537                           
   538                           ;
   539                           ; Setup IVTBASE
   540                           ;
   541   0059D8  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   542   0059DA  6ED5               	movwf	213,c
   543   0059DC  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   544   0059DE  6ED6               	movwf	214,c
   545   0059E0  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   546   0059E2  6ED7               	movwf	215,c
   547   0059E4                     end_of_initialization:
   548                           	callstack 0
   549   0059E4                     __end_of__initialization:
   550                           	callstack 0
   551   0059E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   552   0059E6  6EF8               	movwf	tblptru,c
   553   0059E8  0100               	movlb	0
   554   0059EA  EFE1  F020         	goto	_main	;jump to C main() function
   555                           
   556                           	psect	bssCOMRAM
   557   000052                     __pbssCOMRAM:
   558                           	callstack 0
   559   000052                     _d:
   560                           	callstack 0
   561   000052                     	ds	10
   562   00005C                     _password:
   563                           	callstack 0
   564   00005C                     	ds	2
   565                           
   566                           	psect	bssBANK0
   567   0000B3                     __pbssBANK0:
   568                           	callstack 0
   569   0000B3                     _dbuf:
   570                           	callstack 0
   571   0000B3                     	ds	32
   572   0000D3                     _width:
   573                           	callstack 0
   574   0000D3                     	ds	2
   575   0000D5                     _prec:
   576                           	callstack 0
   577   0000D5                     	ds	2
   578   0000D7                     _pword:
   579                           	callstack 0
   580   0000D7                     	ds	2
   581   0000D9                     _flags:
   582                           	callstack 0
   583   0000D9                     	ds	1
   584                           
   585                           	psect	dataBANK0
   586   0000DA                     __pdataBANK0:
   587                           	callstack 0
   588   0000DA                     _userGuess:
   589                           	callstack 0
   590   0000DA                     	ds	2
   591                           
   592                           	psect	cstackBANK0
   593   000060                     __pcstackBANK0:
   594                           	callstack 0
   595   000060                     ?_getKeypad:
   596                           	callstack 0
   597   000060                     ?___wmul:
   598                           	callstack 0
   599   000060                     ?___awdiv:
   600                           	callstack 0
   601   000060                     ?___awmod:
   602                           	callstack 0
   603   000060                     eepromRead@address:
   604                           	callstack 0
   605   000060                     MSdelay@val:
   606                           	callstack 0
   607   000060                     PWM2_LoadDutyValue@dutyValue:
   608                           	callstack 0
   609   000060                     ___wmul@multiplier:
   610                           	callstack 0
   611   000060                     ___awdiv@dividend:
   612                           	callstack 0
   613   000060                     ___awmod@dividend:
   614                           	callstack 0
   615   000060                     fputc@c:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x0
   619   000060                     	ds	2
   620   000062                     fputc@fp:
   621                           	callstack 0
   622   000062                     MSdelay@i:
   623                           	callstack 0
   624   000062                     getKeypad@buttonNumber:
   625                           	callstack 0
   626   000062                     ___wmul@multiplicand:
   627                           	callstack 0
   628   000062                     ___awdiv@divisor:
   629                           	callstack 0
   630   000062                     ___awmod@divisor:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x2
   634   000062                     	ds	1
   635   000063                     ??_fputc:
   636                           
   637                           ; 1 bytes @ 0x3
   638   000063                     	ds	1
   639   000064                     ___awdiv@counter:
   640                           	callstack 0
   641   000064                     ___awmod@counter:
   642                           	callstack 0
   643   000064                     MSdelay@j:
   644                           	callstack 0
   645   000064                     ___wmul@product:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x4
   649   000064                     	ds	1
   650   000065                     ___awdiv@sign:
   651                           	callstack 0
   652   000065                     ___awmod@sign:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x5
   656   000065                     	ds	1
   657   000066                     ?_abs:
   658                           	callstack 0
   659   000066                     LCD_Command@cmd:
   660                           	callstack 0
   661   000066                     LCD_Char@dat:
   662                           	callstack 0
   663   000066                     ___awdiv@quotient:
   664                           	callstack 0
   665   000066                     abs@a:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x6
   669   000066                     	ds	1
   670   000067                     LCD_String@msg:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x7
   674   000067                     	ds	1
   675   000068                     ??_abs:
   676                           
   677                           ; 1 bytes @ 0x8
   678   000068                     	ds	1
   679   000069                     LCD_String_xy@pos:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x9
   683   000069                     	ds	1
   684   00006A                     vfpfcnvrt@fp:
   685                           	callstack 0
   686   00006A                     LCD_String_xy@msg:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xA
   690   00006A                     	ds	1
   691   00006B                     vfpfcnvrt@fmt:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0xB
   695   00006B                     	ds	1
   696   00006C                     LCD_String_xy@row:
   697                           	callstack 0
   698   00006C                     vfpfcnvrt@ap:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0xC
   702   00006C                     	ds	1
   703   00006D                     ??_vfpfcnvrt:
   704   00006D                     LCD_String_xy@location:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0xD
   708   00006D                     	ds	2
   709   00006F                     vfpfcnvrt@done:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0xF
   713   00006F                     	ds	1
   714   000070                     vfpfcnvrt@cp:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x10
   718   000070                     	ds	2
   719   000072                     vfpfcnvrt@convarg:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x12
   723   000072                     	ds	4
   724   000076                     vfpfcnvrt@c:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x16
   728   000076                     	ds	1
   729   000077                     ?_vfprintf:
   730                           	callstack 0
   731   000077                     vfprintf@fp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x17
   735   000077                     	ds	1
   736   000078                     vfprintf@fmt:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x18
   740   000078                     	ds	2
   741   00007A                     vfprintf@ap:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x1A
   745   00007A                     	ds	1
   746   00007B                     vfprintf@cfmt:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x1B
   750   00007B                     	ds	2
   751   00007D                     ?_sprintf:
   752                           	callstack 0
   753   00007D                     sprintf@s:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x1D
   757   00007D                     	ds	1
   758   00007E                     sprintf@fmt:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x1E
   762   00007E                     	ds	4
   763   000082                     sprintf@ap:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x22
   767   000082                     	ds	1
   768   000083                     sprintf@f:
   769                           	callstack 0
   770                           
   771                           ; 12 bytes @ 0x23
   772   000083                     	ds	12
   773   00008F                     ??_openBox:
   774   00008F                     ??_closeBox:
   775   00008F                     ?_getValue:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x2F
   779   00008F                     	ds	2
   780   000091                     ??_getValue:
   781   000091                     openBox@d:
   782                           	callstack 0
   783   000091                     closeBox@d:
   784                           	callstack 0
   785                           
   786                           ; 10 bytes @ 0x31
   787   000091                     	ds	6
   788   000097                     getValue@data:
   789                           	callstack 0
   790                           
   791                           ; 10 bytes @ 0x37
   792   000097                     	ds	4
   793   00009B                     openBox@pwmStatus:
   794                           	callstack 0
   795   00009B                     closeBox@pwmStatus:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x3B
   799   00009B                     	ds	1
   800   00009C                     openBox@i_741:
   801                           	callstack 0
   802   00009C                     closeBox@i_749:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x3C
   806   00009C                     	ds	2
   807   00009E                     openBox@j:
   808                           	callstack 0
   809   00009E                     closeBox@j:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x3E
   813   00009E                     	ds	2
   814   0000A0                     openBox@i:
   815                           	callstack 0
   816   0000A0                     closeBox@i:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x40
   820   0000A0                     	ds	1
   821   0000A1                     getValue@decimalValue:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x41
   825   0000A1                     	ds	2
   826   0000A3                     getValue@value1:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x43
   830   0000A3                     	ds	2
   831   0000A5                     getValue@value2:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x45
   835   0000A5                     	ds	2
   836   0000A7                     getValue@value3:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x47
   840   0000A7                     	ds	2
   841   0000A9                     getValue@value4:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x49
   845   0000A9                     	ds	2
   846   0000AB                     ??_main:
   847                           
   848                           ; 1 bytes @ 0x4B
   849   0000AB                     	ds	4
   850   0000AF                     main@i:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x4F
   854   0000AF                     	ds	2
   855   0000B1                     main@i_854:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x51
   859   0000B1                     	ds	2
   860                           
   861                           	psect	cstackCOMRAM
   862   000001                     __pcstackCOMRAM:
   863                           	callstack 0
   864   000001                     ?i2_getKeypad:
   865                           	callstack 0
   866   000001                     ?i2___wmul:
   867                           	callstack 0
   868   000001                     ?i2___awdiv:
   869                           	callstack 0
   870   000001                     ?i2___awmod:
   871                           	callstack 0
   872   000001                     i2MSdelay@val:
   873                           	callstack 0
   874   000001                     i2___wmul@multiplier:
   875                           	callstack 0
   876   000001                     i2___awdiv@dividend:
   877                           	callstack 0
   878   000001                     i2___awmod@dividend:
   879                           	callstack 0
   880   000001                     i2fputc@c:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x0
   884   000001                     	ds	2
   885   000003                     i2fputc@fp:
   886                           	callstack 0
   887   000003                     i2MSdelay@i:
   888                           	callstack 0
   889   000003                     i2getKeypad@buttonNumber:
   890                           	callstack 0
   891   000003                     i2___wmul@multiplicand:
   892                           	callstack 0
   893   000003                     i2___awdiv@divisor:
   894                           	callstack 0
   895   000003                     i2___awmod@divisor:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x2
   899   000003                     	ds	1
   900   000004                     ??i2_fputc:
   901                           
   902                           ; 1 bytes @ 0x3
   903   000004                     	ds	1
   904   000005                     i2___awdiv@counter:
   905                           	callstack 0
   906   000005                     i2___awmod@counter:
   907                           	callstack 0
   908   000005                     i2MSdelay@j:
   909                           	callstack 0
   910   000005                     i2___wmul@product:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x4
   914   000005                     	ds	1
   915   000006                     i2___awdiv@sign:
   916                           	callstack 0
   917   000006                     i2___awmod@sign:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x5
   921   000006                     	ds	1
   922   000007                     ?i2_abs:
   923                           	callstack 0
   924   000007                     i2LCD_Command@cmd:
   925                           	callstack 0
   926   000007                     i2LCD_Char@dat:
   927                           	callstack 0
   928   000007                     i2___awdiv@quotient:
   929                           	callstack 0
   930   000007                     i2abs@a:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x6
   934   000007                     	ds	1
   935   000008                     i2LCD_String@msg:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x7
   939   000008                     	ds	1
   940   000009                     ??i2_abs:
   941   000009                     eepromWrite@data:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x8
   945   000009                     	ds	1
   946   00000A                     eepromWrite@address:
   947                           	callstack 0
   948   00000A                     i2LCD_String_xy@pos:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x9
   952   00000A                     	ds	1
   953   00000B                     i2vfpfcnvrt@fp:
   954                           	callstack 0
   955   00000B                     i2LCD_String_xy@msg:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0xA
   959   00000B                     	ds	1
   960   00000C                     i2vfpfcnvrt@fmt:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0xB
   964   00000C                     	ds	1
   965   00000D                     i2LCD_String_xy@row:
   966                           	callstack 0
   967   00000D                     i2vfpfcnvrt@ap:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0xC
   971   00000D                     	ds	1
   972   00000E                     ??i2_vfpfcnvrt:
   973   00000E                     i2LCD_String_xy@location:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0xD
   977   00000E                     	ds	2
   978   000010                     i2vfpfcnvrt@done:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0xF
   982   000010                     	ds	1
   983   000011                     i2vfpfcnvrt@cp:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x10
   987   000011                     	ds	2
   988   000013                     i2vfpfcnvrt@convarg:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x12
   992   000013                     	ds	4
   993   000017                     i2vfpfcnvrt@c:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x16
   997   000017                     	ds	1
   998   000018                     ?i2_vfprintf:
   999                           	callstack 0
  1000   000018                     i2vfprintf@fp:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x17
  1004   000018                     	ds	1
  1005   000019                     i2vfprintf@fmt:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x18
  1009   000019                     	ds	2
  1010   00001B                     i2vfprintf@ap:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x1A
  1014   00001B                     	ds	1
  1015   00001C                     i2vfprintf@cfmt:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x1B
  1019   00001C                     	ds	2
  1020   00001E                     ?i2_sprintf:
  1021                           	callstack 0
  1022   00001E                     i2sprintf@s:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x1D
  1026   00001E                     	ds	1
  1027   00001F                     i2sprintf@fmt:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x1E
  1031   00001F                     	ds	4
  1032   000023                     i2sprintf@ap:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x22
  1036   000023                     	ds	1
  1037   000024                     i2sprintf@f:
  1038                           	callstack 0
  1039                           
  1040                           ; 12 bytes @ 0x23
  1041   000024                     	ds	12
  1042   000030                     ?i2_getValue:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x2F
  1046   000030                     	ds	2
  1047   000032                     ??i2_getValue:
  1048                           
  1049                           ; 1 bytes @ 0x31
  1050   000032                     	ds	6
  1051   000038                     i2getValue@data:
  1052                           	callstack 0
  1053                           
  1054                           ; 10 bytes @ 0x37
  1055   000038                     	ds	10
  1056   000042                     i2getValue@decimalValue:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x41
  1060   000042                     	ds	2
  1061   000044                     i2getValue@value1:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x43
  1065   000044                     	ds	2
  1066   000046                     i2getValue@value2:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x45
  1070   000046                     	ds	2
  1071   000048                     i2getValue@value3:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x47
  1075   000048                     	ds	2
  1076   00004A                     i2getValue@value4:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x49
  1080   00004A                     	ds	2
  1081   00004C                     ??_INT0_ISR:
  1082                           
  1083                           ; 1 bytes @ 0x4B
  1084   00004C                     	ds	6
  1085                           
  1086 ;;
  1087 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1088 ;;
  1089 ;; *************** function _main *****************
  1090 ;; Defined at:
  1091 ;;		line 17 in file "main.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  i               2   81[BANK0 ] int 
  1096 ;;  i               2   79[BANK0 ] int 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1107 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1108 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1109 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1110 ;;Total ram usage:        8 bytes
  1111 ;; Hardware stack levels required when called: 13
  1112 ;; This function calls:
  1113 ;;		_INTERRUPT_Initialize
  1114 ;;		_LCD_Clear
  1115 ;;		_LCD_Init
  1116 ;;		_LCD_String_xy
  1117 ;;		_PWM2_Initialize
  1118 ;;		_PWM_Output_D8_Enable
  1119 ;;		_TMR2_Initialize
  1120 ;;		_TMR2_StartTimer
  1121 ;;		_closeBox
  1122 ;;		_eepromRead
  1123 ;;		_getValue
  1124 ;;		_initializeKeypad
  1125 ;;		_openBox
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text0
  1132   0041C2                     __ptext0:
  1133                           	callstack 0
  1134   0041C2                     _main:
  1135                           	callstack 18
  1136   0041C2                     
  1137                           ;main.c: 19:     OSCSTATbits.HFOR =1;
  1138   0041C2  0139               	movlb	57	; () banked
  1139   0041C4  8DDC               	bsf	220,6,b	;volatile
  1140   0041C6                     
  1141                           ; BSR set to: 57
  1142                           ;main.c: 20:     OSCFRQ=0x02;
  1143   0041C6  0E02               	movlw	2
  1144   0041C8  6FDF               	movwf	223,b	;volatile
  1145   0041CA                     
  1146                           ; BSR set to: 57
  1147                           ;main.c: 23:     initializeKeypad();
  1148   0041CA  EC3D  F02F         	call	_initializeKeypad	;wreg free
  1149   0041CE                     
  1150                           ;main.c: 24:     LCD_Init();
  1151   0041CE  EC49  F02E         	call	_LCD_Init	;wreg free
  1152   0041D2                     
  1153                           ;main.c: 25:     INTERRUPT_Initialize();
  1154   0041D2  EC61  F02E         	call	_INTERRUPT_Initialize	;wreg free
  1155   0041D6                     
  1156                           ;main.c: 26:     TMR2_Initialize();
  1157   0041D6  ECE8  F02E         	call	_TMR2_Initialize	;wreg free
  1158   0041DA                     
  1159                           ;main.c: 27:     TMR2_StartTimer();
  1160   0041DA  EC4A  F02F         	call	_TMR2_StartTimer	;wreg free
  1161   0041DE                     
  1162                           ;main.c: 28:     PWM_Output_D8_Enable();
  1163   0041DE  EC15  F02F         	call	_PWM_Output_D8_Enable	;wreg free
  1164   0041E2                     
  1165                           ;main.c: 29:     PWM2_Initialize();
  1166   0041E2  ECC6  F02E         	call	_PWM2_Initialize	;wreg free
  1167   0041E6                     
  1168                           ;main.c: 32:     pword = (eepromRead(0) * 100) + eepromRead(2);
  1169   0041E6  0E02               	movlw	2
  1170   0041E8  ECA3  F02E         	call	_eepromRead
  1171   0041EC  0100               	movlb	0	; () banked
  1172   0041EE  6FAB               	movwf	??_main& (0+255),b
  1173   0041F0  0E00               	movlw	0
  1174   0041F2  ECA3  F02E         	call	_eepromRead
  1175   0041F6  0100               	movlb	0	; () banked
  1176   0041F8  6FAC               	movwf	(??_main+1)& (0+255),b
  1177   0041FA  51AC               	movf	(??_main+1)& (0+255),w,b
  1178   0041FC  0D64               	mullw	100
  1179   0041FE  006F FFCC  F0AD    	movff	prodl,??_main+2
  1180   004204  006F FFD0  F0AE    	movff	prodh,??_main+3
  1181   00420A  51AB               	movf	??_main& (0+255),w,b
  1182   00420C  25AD               	addwf	(??_main+2)& (0+255),w,b
  1183   00420E  6FD7               	movwf	_pword& (0+255),b
  1184   004210  0E00               	movlw	0
  1185   004212  21AE               	addwfc	(??_main+3)& (0+255),w,b
  1186   004214  6FD8               	movwf	(_pword+1)& (0+255),b
  1187   004216                     
  1188                           ; BSR set to: 0
  1189                           ;main.c: 35:     LCD_String_xy(1, 0, "Electronic Safe");
  1190   004216  0E00               	movlw	0
  1191   004218  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1192   00421A  0E28               	movlw	low STR_13
  1193   00421C  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1194   00421E  0E41               	movlw	high STR_13
  1195   004220  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1196   004222  0E01               	movlw	1
  1197   004224  EC64  F02D         	call	_LCD_String_xy
  1198   004228                     
  1199                           ;main.c: 36:     LCD_String_xy(2, 0, "  Initializing  ");
  1200   004228  0E00               	movlw	0
  1201   00422A  0100               	movlb	0	; () banked
  1202   00422C  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1203   00422E  0EB3               	movlw	low STR_14
  1204   004230  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1205   004232  0E40               	movlw	high STR_14
  1206   004234  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1207   004236  0E02               	movlw	2
  1208   004238  EC64  F02D         	call	_LCD_String_xy
  1209   00423C                     
  1210                           ;main.c: 37:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1211   00423C  0E06               	movlw	6
  1212   00423E  0100               	movlb	0	; () banked
  1213   004240  6FAC               	movwf	(??_main+1)& (0+255),b
  1214   004242  0E13               	movlw	19
  1215   004244  6FAB               	movwf	??_main& (0+255),b
  1216   004246  0EAD               	movlw	173
  1217   004248                     u3037:
  1218   004248  2EE8               	decfsz	wreg,f,c
  1219   00424A  D7FE               	bra	u3037
  1220   00424C  2FAB               	decfsz	??_main& (0+255),f,b
  1221   00424E  D7FC               	bra	u3037
  1222   004250  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1223   004252  D7FA               	bra	u3037
  1224   004254  D000               	nop2	
  1225   004256                     
  1226                           ;main.c: 38:     LCD_Clear();
  1227   004256  EC42  F02F         	call	_LCD_Clear	;wreg free
  1228   00425A                     
  1229                           ;main.c: 41:     LCD_String_xy(1, 0, "Checking Passwrd");
  1230   00425A  0E00               	movlw	0
  1231   00425C  0100               	movlb	0	; () banked
  1232   00425E  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1233   004260  0EE6               	movlw	low STR_15
  1234   004262  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1235   004264  0E40               	movlw	high STR_15
  1236   004266  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1237   004268  0E01               	movlw	1
  1238   00426A  EC64  F02D         	call	_LCD_String_xy
  1239   00426E                     
  1240                           ;main.c: 42:     for(int i = 0; i < 16; i++){
  1241   00426E  0E00               	movlw	0
  1242   004270  0100               	movlb	0	; () banked
  1243   004272  6FB0               	movwf	(main@i+1)& (0+255),b
  1244   004274  0E00               	movlw	0
  1245   004276  6FAF               	movwf	main@i& (0+255),b
  1246   004278                     l2986:
  1247                           
  1248                           ; BSR set to: 0
  1249                           ;main.c: 43:         LCD_String_xy(2,i,".");
  1250   004278  C0AF  F069         	movff	main@i,LCD_String_xy@pos
  1251   00427C  0E8F               	movlw	low (STR_26+11)
  1252   00427E  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1253   004280  0E41               	movlw	high (STR_26+11)
  1254   004282  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1255   004284  0E02               	movlw	2
  1256   004286  EC64  F02D         	call	_LCD_String_xy
  1257   00428A                     
  1258                           ;main.c: 44:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1259   00428A  0E02               	movlw	2
  1260   00428C  0100               	movlb	0	; () banked
  1261   00428E  6FAC               	movwf	(??_main+1)& (0+255),b
  1262   004290  0E04               	movlw	4
  1263   004292  6FAB               	movwf	??_main& (0+255),b
  1264   004294  0EBA               	movlw	186
  1265   004296                     u3047:
  1266   004296  2EE8               	decfsz	wreg,f,c
  1267   004298  D7FE               	bra	u3047
  1268   00429A  2FAB               	decfsz	??_main& (0+255),f,b
  1269   00429C  D7FC               	bra	u3047
  1270   00429E  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1271   0042A0  D7FA               	bra	u3047
  1272   0042A2  0000               	nop	
  1273   0042A4                     
  1274                           ;main.c: 45:     }
  1275   0042A4  0100               	movlb	0	; () banked
  1276   0042A6  4BAF               	infsnz	main@i& (0+255),f,b
  1277   0042A8  2BB0               	incf	(main@i+1)& (0+255),f,b
  1278   0042AA                     
  1279                           ; BSR set to: 0
  1280   0042AA  BFB0               	btfsc	(main@i+1)& (0+255),7,b
  1281   0042AC  EF61  F021         	goto	u2981
  1282   0042B0  51B0               	movf	(main@i+1)& (0+255),w,b
  1283   0042B2  E109               	bnz	u2980
  1284   0042B4  0E10               	movlw	16
  1285   0042B6  5DAF               	subwf	main@i& (0+255),w,b
  1286   0042B8  A0D8               	btfss	status,0,c
  1287   0042BA  EF61  F021         	goto	u2981
  1288   0042BE  EF63  F021         	goto	u2980
  1289   0042C2                     u2981:
  1290   0042C2  EF3C  F021         	goto	l2986
  1291   0042C6                     u2980:
  1292   0042C6                     
  1293                           ; BSR set to: 0
  1294                           ;main.c: 46:     LCD_Clear();
  1295   0042C6  EC42  F02F         	call	_LCD_Clear	;wreg free
  1296   0042CA                     
  1297                           ;main.c: 47:     if(pword > 9999){
  1298   0042CA  0100               	movlb	0	; () banked
  1299   0042CC  BFD8               	btfsc	(_pword+1)& (0+255),7,b
  1300   0042CE  EF72  F021         	goto	u2991
  1301   0042D2  0E10               	movlw	16
  1302   0042D4  5DD7               	subwf	_pword& (0+255),w,b
  1303   0042D6  0E27               	movlw	39
  1304   0042D8  59D8               	subwfb	(_pword+1)& (0+255),w,b
  1305   0042DA  A0D8               	btfss	status,0,c
  1306   0042DC  EF72  F021         	goto	u2991
  1307   0042E0  EF74  F021         	goto	u2990
  1308   0042E4                     u2991:
  1309   0042E4  EF96  F021         	goto	l3002
  1310   0042E8                     u2990:
  1311   0042E8                     
  1312                           ; BSR set to: 0
  1313                           ;main.c: 48:         LCD_String_xy(1, 0, "Password is not");
  1314   0042E8  0E00               	movlw	0
  1315   0042EA  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1316   0042EC  0E48               	movlw	low STR_17
  1317   0042EE  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1318   0042F0  0E41               	movlw	high STR_17
  1319   0042F2  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1320   0042F4  0E01               	movlw	1
  1321   0042F6  EC64  F02D         	call	_LCD_String_xy
  1322                           
  1323                           ;main.c: 49:         LCD_String_xy(2,0, "set please reset");
  1324   0042FA  0E00               	movlw	0
  1325   0042FC  0100               	movlb	0	; () banked
  1326   0042FE  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1327   004300  0EF7               	movlw	low STR_18
  1328   004302  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1329   004304  0E40               	movlw	high STR_18
  1330   004306  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1331   004308  0E02               	movlw	2
  1332   00430A  EC64  F02D         	call	_LCD_String_xy
  1333   00430E                     
  1334                           ;main.c: 50:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  1335   00430E  0E1A               	movlw	26
  1336   004310  0100               	movlb	0	; () banked
  1337   004312  6FAC               	movwf	(??_main+1)& (0+255),b
  1338   004314  0E5E               	movlw	94
  1339   004316  6FAB               	movwf	??_main& (0+255),b
  1340   004318  0E6E               	movlw	110
  1341   00431A                     u3057:
  1342   00431A  2EE8               	decfsz	wreg,f,c
  1343   00431C  D7FE               	bra	u3057
  1344   00431E  2FAB               	decfsz	??_main& (0+255),f,b
  1345   004320  D7FC               	bra	u3057
  1346   004322  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1347   004324  D7FA               	bra	u3057
  1348   004326  0000               	nop	
  1349                           
  1350                           ;main.c: 51:     }else{
  1351   004328  EFAC  F021         	goto	l3006
  1352   00432C                     l3002:
  1353                           
  1354                           ; BSR set to: 0
  1355                           ;main.c: 52:         LCD_String_xy(1, 0, "Password is set");
  1356   00432C  0E00               	movlw	0
  1357   00432E  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1358   004330  0E38               	movlw	low STR_19
  1359   004332  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1360   004334  0E41               	movlw	high STR_19
  1361   004336  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1362   004338  0E01               	movlw	1
  1363   00433A  EC64  F02D         	call	_LCD_String_xy
  1364   00433E                     
  1365                           ;main.c: 53:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1366   00433E  0E0B               	movlw	11
  1367   004340  0100               	movlb	0	; () banked
  1368   004342  6FAC               	movwf	(??_main+1)& (0+255),b
  1369   004344  0E26               	movlw	38
  1370   004346  6FAB               	movwf	??_main& (0+255),b
  1371   004348  0E5D               	movlw	93
  1372   00434A                     u3067:
  1373   00434A  2EE8               	decfsz	wreg,f,c
  1374   00434C  D7FE               	bra	u3067
  1375   00434E  2FAB               	decfsz	??_main& (0+255),f,b
  1376   004350  D7FC               	bra	u3067
  1377   004352  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1378   004354  D7FA               	bra	u3067
  1379   004356  D000               	nop2	
  1380   004358                     l3006:
  1381                           
  1382                           ;main.c: 57:     LCD_Clear();
  1383   004358  EC42  F02F         	call	_LCD_Clear	;wreg free
  1384                           
  1385                           ;main.c: 58:     while(userGuess < 0){
  1386   00435C  EF8E  F022         	goto	l3062
  1387   004360                     l3008:
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;main.c: 59:         LCD_String_xy(1,0,"Enter Password: ");
  1391   004360  0E00               	movlw	0
  1392   004362  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1393   004364  0EC4               	movlw	low STR_20
  1394   004366  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1395   004368  0E40               	movlw	high STR_20
  1396   00436A  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1397   00436C  0E01               	movlw	1
  1398   00436E  EC64  F02D         	call	_LCD_String_xy
  1399   004372                     
  1400                           ;main.c: 60:         userGuess = getValue();
  1401   004372  EC98  F022         	call	_getValue	;wreg free
  1402   004376  C08F  F0DA         	movff	?_getValue,_userGuess
  1403   00437A  C090  F0DB         	movff	?_getValue+1,_userGuess+1
  1404   00437E                     
  1405                           ;main.c: 61:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1406   00437E  0E06               	movlw	6
  1407   004380  0100               	movlb	0	; () banked
  1408   004382  6FAC               	movwf	(??_main+1)& (0+255),b
  1409   004384  0E13               	movlw	19
  1410   004386  6FAB               	movwf	??_main& (0+255),b
  1411   004388  0EAD               	movlw	173
  1412   00438A                     u3077:
  1413   00438A  2EE8               	decfsz	wreg,f,c
  1414   00438C  D7FE               	bra	u3077
  1415   00438E  2FAB               	decfsz	??_main& (0+255),f,b
  1416   004390  D7FC               	bra	u3077
  1417   004392  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1418   004394  D7FA               	bra	u3077
  1419   004396  D000               	nop2	
  1420   004398                     
  1421                           ;main.c: 62:         LCD_Clear();
  1422   004398  EC42  F02F         	call	_LCD_Clear	;wreg free
  1423   00439C                     
  1424                           ;main.c: 65:         if(userGuess == pword){
  1425   00439C  0100               	movlb	0	; () banked
  1426   00439E  51D7               	movf	_pword& (0+255),w,b
  1427   0043A0  19DA               	xorwf	_userGuess& (0+255),w,b
  1428   0043A2  E107               	bnz	u3001
  1429   0043A4  51D8               	movf	(_pword+1)& (0+255),w,b
  1430   0043A6  19DB               	xorwf	(_userGuess+1)& (0+255),w,b
  1431   0043A8  A4D8               	btfss	status,2,c
  1432   0043AA  EFD9  F021         	goto	u3001
  1433   0043AE  EFDB  F021         	goto	u3000
  1434   0043B2                     u3001:
  1435   0043B2  EF31  F022         	goto	l3036
  1436   0043B6                     u3000:
  1437   0043B6                     
  1438                           ; BSR set to: 0
  1439                           ;main.c: 66:             LCD_String_xy(1, 0, "Password is");
  1440   0043B6  0E00               	movlw	0
  1441   0043B8  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1442   0043BA  0E91               	movlw	low STR_21
  1443   0043BC  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1444   0043BE  0E41               	movlw	high STR_21
  1445   0043C0  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1446   0043C2  0E01               	movlw	1
  1447   0043C4  EC64  F02D         	call	_LCD_String_xy
  1448                           
  1449                           ;main.c: 67:             LCD_String_xy(2,0, "correct");
  1450   0043C8  0E00               	movlw	0
  1451   0043CA  0100               	movlb	0	; () banked
  1452   0043CC  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1453   0043CE  0EB1               	movlw	low STR_22
  1454   0043D0  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1455   0043D2  0E41               	movlw	high STR_22
  1456   0043D4  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1457   0043D6  0E02               	movlw	2
  1458   0043D8  EC64  F02D         	call	_LCD_String_xy
  1459   0043DC                     
  1460                           ;main.c: 68:             _delay((unsigned long)((1500)*(4000000/4000.0)));
  1461   0043DC  0E08               	movlw	8
  1462   0043DE  0100               	movlb	0	; () banked
  1463   0043E0  6FAC               	movwf	(??_main+1)& (0+255),b
  1464   0043E2  0E9D               	movlw	157
  1465   0043E4  6FAB               	movwf	??_main& (0+255),b
  1466   0043E6  0E05               	movlw	5
  1467   0043E8                     u3087:
  1468   0043E8  2EE8               	decfsz	wreg,f,c
  1469   0043EA  D7FE               	bra	u3087
  1470   0043EC  2FAB               	decfsz	??_main& (0+255),f,b
  1471   0043EE  D7FC               	bra	u3087
  1472   0043F0  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1473   0043F2  D7FA               	bra	u3087
  1474   0043F4  D000               	nop2	
  1475   0043F6                     
  1476                           ;main.c: 80:             INTCON0bits.GIE = 0;
  1477   0043F6  9ED2               	bcf	210,7,c	;volatile
  1478   0043F8                     
  1479                           ;main.c: 81:             openBox();
  1480   0043F8  EC8D  F028         	call	_openBox	;wreg free
  1481   0043FC                     
  1482                           ;main.c: 82:             LCD_String_xy(1, 0, "Box open");
  1483   0043FC  0E00               	movlw	0
  1484   0043FE  0100               	movlb	0	; () banked
  1485   004400  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1486   004402  0EA8               	movlw	low STR_23
  1487   004404  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1488   004406  0E41               	movlw	high STR_23
  1489   004408  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1490   00440A  0E01               	movlw	1
  1491   00440C  EC64  F02D         	call	_LCD_String_xy
  1492   004410                     
  1493                           ;main.c: 83:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1494   004410  0E0B               	movlw	11
  1495   004412  0100               	movlb	0	; () banked
  1496   004414  6FAC               	movwf	(??_main+1)& (0+255),b
  1497   004416  0E26               	movlw	38
  1498   004418  6FAB               	movwf	??_main& (0+255),b
  1499   00441A  0E5D               	movlw	93
  1500   00441C                     u3097:
  1501   00441C  2EE8               	decfsz	wreg,f,c
  1502   00441E  D7FE               	bra	u3097
  1503   004420  2FAB               	decfsz	??_main& (0+255),f,b
  1504   004422  D7FC               	bra	u3097
  1505   004424  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1506   004426  D7FA               	bra	u3097
  1507   004428  D000               	nop2	
  1508                           
  1509                           ;main.c: 93:             closeBox();
  1510   00442A  EC12  F029         	call	_closeBox	;wreg free
  1511   00442E                     
  1512                           ;main.c: 96:             LCD_String_xy(1, 0, "Box closed");
  1513   00442E  0E00               	movlw	0
  1514   004430  0100               	movlb	0	; () banked
  1515   004432  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1516   004434  0E9D               	movlw	low STR_24
  1517   004436  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1518   004438  0E41               	movlw	high STR_24
  1519   00443A  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1520   00443C  0E01               	movlw	1
  1521   00443E  EC64  F02D         	call	_LCD_String_xy
  1522   004442                     
  1523                           ;main.c: 97:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1524   004442  0E0B               	movlw	11
  1525   004444  0100               	movlb	0	; () banked
  1526   004446  6FAC               	movwf	(??_main+1)& (0+255),b
  1527   004448  0E26               	movlw	38
  1528   00444A  6FAB               	movwf	??_main& (0+255),b
  1529   00444C  0E5D               	movlw	93
  1530   00444E                     u3107:
  1531   00444E  2EE8               	decfsz	wreg,f,c
  1532   004450  D7FE               	bra	u3107
  1533   004452  2FAB               	decfsz	??_main& (0+255),f,b
  1534   004454  D7FC               	bra	u3107
  1535   004456  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1536   004458  D7FA               	bra	u3107
  1537   00445A  D000               	nop2	
  1538   00445C                     
  1539                           ;main.c: 98:             INTCON0bits.GIE = 1;
  1540   00445C  8ED2               	bsf	210,7,c	;volatile
  1541                           
  1542                           ;main.c: 99:         }else{
  1543   00445E  EF51  F022         	goto	l3040
  1544   004462                     l3036:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 100:             LCD_String_xy(1, 0, "Password is");
  1548   004462  0E00               	movlw	0
  1549   004464  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1550   004466  0E91               	movlw	low STR_21
  1551   004468  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1552   00446A  0E41               	movlw	high STR_21
  1553   00446C  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1554   00446E  0E01               	movlw	1
  1555   004470  EC64  F02D         	call	_LCD_String_xy
  1556                           
  1557                           ;main.c: 101:             LCD_String_xy(2,0, "incorrect...");
  1558   004474  0E00               	movlw	0
  1559   004476  0100               	movlb	0	; () banked
  1560   004478  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1561   00447A  0E84               	movlw	low STR_26
  1562   00447C  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1563   00447E  0E41               	movlw	high STR_26
  1564   004480  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1565   004482  0E02               	movlw	2
  1566   004484  EC64  F02D         	call	_LCD_String_xy
  1567   004488                     
  1568                           ;main.c: 102:             _delay((unsigned long)((2000)*(4000000/4000.0)));
  1569   004488  0E0B               	movlw	11
  1570   00448A  0100               	movlb	0	; () banked
  1571   00448C  6FAC               	movwf	(??_main+1)& (0+255),b
  1572   00448E  0E26               	movlw	38
  1573   004490  6FAB               	movwf	??_main& (0+255),b
  1574   004492  0E5D               	movlw	93
  1575   004494                     u3117:
  1576   004494  2EE8               	decfsz	wreg,f,c
  1577   004496  D7FE               	bra	u3117
  1578   004498  2FAB               	decfsz	??_main& (0+255),f,b
  1579   00449A  D7FC               	bra	u3117
  1580   00449C  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1581   00449E  D7FA               	bra	u3117
  1582   0044A0  D000               	nop2	
  1583   0044A2                     l3040:
  1584                           
  1585                           ;main.c: 105:         LCD_Clear();
  1586   0044A2  EC42  F02F         	call	_LCD_Clear	;wreg free
  1587   0044A6                     
  1588                           ;main.c: 106:         LCD_String_xy(1, 0, "Reinitializing");
  1589   0044A6  0E00               	movlw	0
  1590   0044A8  0100               	movlb	0	; () banked
  1591   0044AA  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1592   0044AC  0E58               	movlw	low STR_27
  1593   0044AE  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1594   0044B0  0E41               	movlw	high STR_27
  1595   0044B2  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1596   0044B4  0E01               	movlw	1
  1597   0044B6  EC64  F02D         	call	_LCD_String_xy
  1598   0044BA                     
  1599                           ;main.c: 107:         for(int i = 0; i < 16; i++){
  1600   0044BA  0E00               	movlw	0
  1601   0044BC  0100               	movlb	0	; () banked
  1602   0044BE  6FB2               	movwf	(main@i_854+1)& (0+255),b
  1603   0044C0  0E00               	movlw	0
  1604   0044C2  6FB1               	movwf	main@i_854& (0+255),b
  1605   0044C4                     l3050:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 108:             LCD_String_xy(2,i,".");
  1609   0044C4  C0B1  F069         	movff	main@i_854,LCD_String_xy@pos
  1610   0044C8  0E8F               	movlw	low (STR_26+11)
  1611   0044CA  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1612   0044CC  0E41               	movlw	high (STR_26+11)
  1613   0044CE  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1614   0044D0  0E02               	movlw	2
  1615   0044D2  EC64  F02D         	call	_LCD_String_xy
  1616   0044D6                     
  1617                           ;main.c: 109:             _delay((unsigned long)((200)*(4000000/4000.0)));
  1618   0044D6  0E02               	movlw	2
  1619   0044D8  0100               	movlb	0	; () banked
  1620   0044DA  6FAC               	movwf	(??_main+1)& (0+255),b
  1621   0044DC  0E04               	movlw	4
  1622   0044DE  6FAB               	movwf	??_main& (0+255),b
  1623   0044E0  0EBA               	movlw	186
  1624   0044E2                     u3127:
  1625   0044E2  2EE8               	decfsz	wreg,f,c
  1626   0044E4  D7FE               	bra	u3127
  1627   0044E6  2FAB               	decfsz	??_main& (0+255),f,b
  1628   0044E8  D7FC               	bra	u3127
  1629   0044EA  2FAC               	decfsz	(??_main+1)& (0+255),f,b
  1630   0044EC  D7FA               	bra	u3127
  1631   0044EE  0000               	nop	
  1632   0044F0                     
  1633                           ;main.c: 110:         }
  1634   0044F0  0100               	movlb	0	; () banked
  1635   0044F2  4BB1               	infsnz	main@i_854& (0+255),f,b
  1636   0044F4  2BB2               	incf	(main@i_854+1)& (0+255),f,b
  1637   0044F6                     
  1638                           ; BSR set to: 0
  1639   0044F6  BFB2               	btfsc	(main@i_854+1)& (0+255),7,b
  1640   0044F8  EF87  F022         	goto	u3011
  1641   0044FC  51B2               	movf	(main@i_854+1)& (0+255),w,b
  1642   0044FE  E109               	bnz	u3010
  1643   004500  0E10               	movlw	16
  1644   004502  5DB1               	subwf	main@i_854& (0+255),w,b
  1645   004504  A0D8               	btfss	status,0,c
  1646   004506  EF87  F022         	goto	u3011
  1647   00450A  EF89  F022         	goto	u3010
  1648   00450E                     u3011:
  1649   00450E  EF62  F022         	goto	l3050
  1650   004512                     u3010:
  1651   004512                     
  1652                           ; BSR set to: 0
  1653                           ;main.c: 111:         LCD_Clear();
  1654   004512  EC42  F02F         	call	_LCD_Clear	;wreg free
  1655   004516                     
  1656                           ;main.c: 112:         userGuess = -1;
  1657   004516  0100               	movlb	0	; () banked
  1658   004518  69DA               	setf	_userGuess& (0+255),b
  1659   00451A  69DB               	setf	(_userGuess+1)& (0+255),b
  1660   00451C                     l3062:
  1661                           
  1662                           ;main.c: 58:     while(userGuess < 0){
  1663   00451C  0100               	movlb	0	; () banked
  1664   00451E  BFDB               	btfsc	(_userGuess+1)& (0+255),7,b
  1665   004520  EF94  F022         	goto	u3021
  1666   004524  EF96  F022         	goto	u3020
  1667   004528                     u3021:
  1668   004528  EFB0  F021         	goto	l3008
  1669   00452C                     u3020:
  1670   00452C                     
  1671                           ; BSR set to: 0
  1672   00452C  EF57  F020         	goto	start
  1673   004530                     __end_of_main:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _openBox *****************
  1677 ;; Defined at:
  1678 ;;		line 26 in file "./servo.h"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  j               2   62[BANK0 ] int 
  1683 ;;  i               2   60[BANK0 ] int 
  1684 ;;  i               2   64[BANK0 ] int 
  1685 ;;  d              10   49[BANK0 ] unsigned char [10]
  1686 ;;  pwmStatus       1   59[BANK0 ] _Bool 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1697 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1699 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1700 ;;Total ram usage:       19 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 12
  1703 ;; This function calls:
  1704 ;;		_LCD_Clear
  1705 ;;		_LCD_String_xy
  1706 ;;		_PWM2_LoadDutyValue
  1707 ;;		_PWM2_OutputStatusGet
  1708 ;;		_sprintf
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text1
  1715   00511A                     __ptext1:
  1716                           	callstack 0
  1717   00511A                     _openBox:
  1718                           	callstack 18
  1719   00511A                     
  1720                           ;./servo.h: 27:     _Bool pwmStatus;;./servo.h: 28:     char d[10];;./servo.h: 29:     P
      +                          WM2_LoadDutyValue( 31 );
  1721   00511A  0E00               	movlw	0
  1722   00511C  0100               	movlb	0	; () banked
  1723   00511E  6F61               	movwf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  1724   005120  0E1F               	movlw	31
  1725   005122  6F60               	movwf	PWM2_LoadDutyValue@dutyValue& (0+255),b
  1726   005124  EC30  F02E         	call	_PWM2_LoadDutyValue	;wreg free
  1727                           
  1728                           ;./servo.h: 31:     LCD_Clear();
  1729   005128  EC42  F02F         	call	_LCD_Clear	;wreg free
  1730   00512C                     
  1731                           ;./servo.h: 32:     LCD_String_xy(1, 0, "Opening Box in:");
  1732   00512C  0E00               	movlw	0
  1733   00512E  0100               	movlb	0	; () banked
  1734   005130  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1735   005132  0E08               	movlw	low STR_9
  1736   005134  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1737   005136  0E41               	movlw	high STR_9
  1738   005138  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1739   00513A  0E01               	movlw	1
  1740   00513C  EC64  F02D         	call	_LCD_String_xy
  1741   005140                     
  1742                           ;./servo.h: 33:     for(int i = 0; i < 5 ; i++){
  1743   005140  0E00               	movlw	0
  1744   005142  0100               	movlb	0	; () banked
  1745   005144  6FA1               	movwf	(openBox@i+1)& (0+255),b
  1746   005146  0E00               	movlw	0
  1747   005148  6FA0               	movwf	openBox@i& (0+255),b
  1748   00514A                     l2772:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;./servo.h: 34:         sprintf(d,"%d",(6 - (i + 1)));
  1752   00514A  0E91               	movlw	low openBox@d
  1753   00514C  6F7D               	movwf	sprintf@s& (0+255),b
  1754   00514E  0EBE               	movlw	low STR_2
  1755   005150  6F7E               	movwf	sprintf@fmt& (0+255),b
  1756   005152  0E41               	movlw	high STR_2
  1757   005154  6F7F               	movwf	(sprintf@fmt+1)& (0+255),b
  1758   005156  51A0               	movf	openBox@i& (0+255),w,b
  1759   005158  0805               	sublw	5
  1760   00515A  6F80               	movwf	(?_sprintf+3)& (0+255),b
  1761   00515C  51A1               	movf	(openBox@i+1)& (0+255),w,b
  1762   00515E  A0D8               	btfss	status,0,c
  1763   005160  2AE8               	incf	wreg,f,c
  1764   005162  0800               	sublw	0
  1765   005164  6F81               	movwf	(?_sprintf+4)& (0+255),b
  1766   005166  ECA6  F02D         	call	_sprintf	;wreg free
  1767   00516A                     
  1768                           ;./servo.h: 35:         LCD_String_xy(2, 0, d);
  1769   00516A  0E00               	movlw	0
  1770   00516C  0100               	movlb	0	; () banked
  1771   00516E  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1772   005170  0E91               	movlw	low openBox@d
  1773   005172  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1774   005174  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  1775   005176  0E02               	movlw	2
  1776   005178  EC64  F02D         	call	_LCD_String_xy
  1777   00517C                     
  1778                           ;./servo.h: 36:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1779   00517C  0E06               	movlw	6
  1780   00517E  0100               	movlb	0	; () banked
  1781   005180  6F90               	movwf	(??_openBox+1)& (0+255),b
  1782   005182  0E13               	movlw	19
  1783   005184  6F8F               	movwf	??_openBox& (0+255),b
  1784   005186  0EAD               	movlw	173
  1785   005188                     u3137:
  1786   005188  2EE8               	decfsz	wreg,f,c
  1787   00518A  D7FE               	bra	u3137
  1788   00518C  2F8F               	decfsz	??_openBox& (0+255),f,b
  1789   00518E  D7FC               	bra	u3137
  1790   005190  2F90               	decfsz	(??_openBox+1)& (0+255),f,b
  1791   005192  D7FA               	bra	u3137
  1792   005194  D000               	nop2	
  1793   005196                     
  1794                           ;./servo.h: 37:     }
  1795   005196  0100               	movlb	0	; () banked
  1796   005198  4BA0               	infsnz	openBox@i& (0+255),f,b
  1797   00519A  2BA1               	incf	(openBox@i+1)& (0+255),f,b
  1798   00519C                     
  1799                           ; BSR set to: 0
  1800   00519C  BFA1               	btfsc	(openBox@i+1)& (0+255),7,b
  1801   00519E  EFDA  F028         	goto	u2811
  1802   0051A2  51A1               	movf	(openBox@i+1)& (0+255),w,b
  1803   0051A4  E109               	bnz	u2810
  1804   0051A6  0E05               	movlw	5
  1805   0051A8  5DA0               	subwf	openBox@i& (0+255),w,b
  1806   0051AA  A0D8               	btfss	status,0,c
  1807   0051AC  EFDA  F028         	goto	u2811
  1808   0051B0  EFDC  F028         	goto	u2810
  1809   0051B4                     u2811:
  1810   0051B4  EFA5  F028         	goto	l2772
  1811   0051B8                     u2810:
  1812   0051B8                     
  1813                           ; BSR set to: 0
  1814                           ;./servo.h: 38:     LCD_Clear();
  1815   0051B8  EC42  F02F         	call	_LCD_Clear	;wreg free
  1816   0051BC                     
  1817                           ;./servo.h: 41:     for(int i = 0;i < 100;i++)
  1818   0051BC  0E00               	movlw	0
  1819   0051BE  0100               	movlb	0	; () banked
  1820   0051C0  6F9D               	movwf	(openBox@i_741+1)& (0+255),b
  1821   0051C2  0E00               	movlw	0
  1822   0051C4  6F9C               	movwf	openBox@i_741& (0+255),b
  1823   0051C6                     l2790:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;./servo.h: 42:         for(int j = 0;j < 165;j++){
  1827   0051C6  0E00               	movlw	0
  1828   0051C8  6F9F               	movwf	(openBox@j+1)& (0+255),b
  1829   0051CA  0E00               	movlw	0
  1830   0051CC  6F9E               	movwf	openBox@j& (0+255),b
  1831   0051CE                     l2796:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;./servo.h: 43:             pwmStatus = PWM2_OutputStatusGet();
  1835   0051CE  EC2D  F02F         	call	_PWM2_OutputStatusGet	;wreg free
  1836   0051D2  0100               	movlb	0	; () banked
  1837   0051D4  6F9B               	movwf	openBox@pwmStatus& (0+255),b
  1838   0051D6                     
  1839                           ; BSR set to: 0
  1840                           ;./servo.h: 44:             PORTCbits.RC5 = pwmStatus;
  1841   0051D6  B19B               	btfsc	openBox@pwmStatus& (0+255),0,b
  1842   0051D8  D002               	bra	u2825
  1843   0051DA  9ACC               	bcf	204,5,c	;volatile
  1844   0051DC  D001               	bra	u2826
  1845   0051DE                     u2825:
  1846   0051DE  8ACC               	bsf	204,5,c	;volatile
  1847   0051E0                     u2826:
  1848   0051E0                     
  1849                           ;./servo.h: 45:         }
  1850   0051E0  0100               	movlb	0	; () banked
  1851   0051E2  4B9E               	infsnz	openBox@j& (0+255),f,b
  1852   0051E4  2B9F               	incf	(openBox@j+1)& (0+255),f,b
  1853   0051E6                     
  1854                           ; BSR set to: 0
  1855   0051E6  BF9F               	btfsc	(openBox@j+1)& (0+255),7,b
  1856   0051E8  EFFF  F028         	goto	u2831
  1857   0051EC  519F               	movf	(openBox@j+1)& (0+255),w,b
  1858   0051EE  E109               	bnz	u2830
  1859   0051F0  0EA5               	movlw	165
  1860   0051F2  5D9E               	subwf	openBox@j& (0+255),w,b
  1861   0051F4  A0D8               	btfss	status,0,c
  1862   0051F6  EFFF  F028         	goto	u2831
  1863   0051FA  EF01  F029         	goto	u2830
  1864   0051FE                     u2831:
  1865   0051FE  EFE7  F028         	goto	l2796
  1866   005202                     u2830:
  1867   005202                     
  1868                           ; BSR set to: 0
  1869   005202  4B9C               	infsnz	openBox@i_741& (0+255),f,b
  1870   005204  2B9D               	incf	(openBox@i_741+1)& (0+255),f,b
  1871   005206                     
  1872                           ; BSR set to: 0
  1873   005206  BF9D               	btfsc	(openBox@i_741+1)& (0+255),7,b
  1874   005208  EF0F  F029         	goto	u2841
  1875   00520C  519D               	movf	(openBox@i_741+1)& (0+255),w,b
  1876   00520E  E109               	bnz	u2840
  1877   005210  0E64               	movlw	100
  1878   005212  5D9C               	subwf	openBox@i_741& (0+255),w,b
  1879   005214  A0D8               	btfss	status,0,c
  1880   005216  EF0F  F029         	goto	u2841
  1881   00521A  EF11  F029         	goto	u2840
  1882   00521E                     u2841:
  1883   00521E  EFE3  F028         	goto	l2790
  1884   005222                     u2840:
  1885   005222                     
  1886                           ; BSR set to: 0
  1887   005222  0012               	return		;funcret
  1888   005224                     __end_of_openBox:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _initializeKeypad *****************
  1892 ;; Defined at:
  1893 ;;		line 18 in file "./keypad.h"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 8
  1914 ;; This function calls:
  1915 ;;		_initializePORTA
  1916 ;;		_initializePORTC
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text2
  1923   005E7A                     __ptext2:
  1924                           	callstack 0
  1925   005E7A                     _initializeKeypad:
  1926                           	callstack 22
  1927   005E7A                     
  1928                           ;./keypad.h: 19:     initializePORTA();
  1929   005E7A  EC23  F02F         	call	_initializePORTA	;wreg free
  1930   005E7E                     
  1931                           ;./keypad.h: 20:     initializePORTC();
  1932   005E7E  EC37  F02F         	call	_initializePORTC	;wreg free
  1933   005E82  0012               	return		;funcret
  1934   005E84                     __end_of_initializeKeypad:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _initializePORTC *****************
  1938 ;; Defined at:
  1939 ;;		line 28 in file "./keypad.h"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		None
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1957 ;;Total ram usage:        0 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 7
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_initializeKeypad
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text3
  1968   005E6E                     __ptext3:
  1969                           	callstack 0
  1970   005E6E                     _initializePORTC:
  1971                           	callstack 22
  1972   005E6E                     
  1973                           ;./keypad.h: 30:     PORTCbits.RC4 = 0;
  1974   005E6E  98CC               	bcf	204,4,c	;volatile
  1975                           
  1976                           ;./keypad.h: 31:     LATCbits.LATC4 = 0;
  1977   005E70  98BC               	bcf	188,4,c	;volatile
  1978                           
  1979                           ;./keypad.h: 32:     ANSELCbits.ANSELC4 = 0;
  1980   005E72  013A               	movlb	58	; () banked
  1981   005E74  9960               	bcf	96,4,b	;volatile
  1982                           
  1983                           ;./keypad.h: 33:     TRISCbits.TRISC4 = 1;
  1984   005E76  88C4               	bsf	196,4,c	;volatile
  1985   005E78                     
  1986                           ; BSR set to: 58
  1987   005E78  0012               	return		;funcret
  1988   005E7A                     __end_of_initializePORTC:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _initializePORTA *****************
  1992 ;; Defined at:
  1993 ;;		line 22 in file "./keypad.h"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 7
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_initializeKeypad
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text4
  2022   005E46                     __ptext4:
  2023                           	callstack 0
  2024   005E46                     _initializePORTA:
  2025                           	callstack 22
  2026   005E46                     
  2027                           ;./keypad.h: 23:     PORTA = 0;
  2028   005E46  0E00               	movlw	0
  2029   005E48  6ECA               	movwf	202,c	;volatile
  2030                           
  2031                           ;./keypad.h: 24:     LATA = 0;
  2032   005E4A  0E00               	movlw	0
  2033   005E4C  6EBA               	movwf	186,c	;volatile
  2034                           
  2035                           ;./keypad.h: 25:     ANSELA = 0;
  2036   005E4E  0E00               	movlw	0
  2037   005E50  013A               	movlb	58	; () banked
  2038   005E52  6F40               	movwf	64,b	;volatile
  2039                           
  2040                           ;./keypad.h: 26:     TRISA = 0b11111000;
  2041   005E54  0EF8               	movlw	248
  2042   005E56  6EC2               	movwf	194,c	;volatile
  2043   005E58                     
  2044                           ; BSR set to: 58
  2045   005E58  0012               	return		;funcret
  2046   005E5A                     __end_of_initializePORTA:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _getValue *****************
  2050 ;; Defined at:
  2051 ;;		line 141 in file "./keypad.h"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  data           10   55[BANK0 ] unsigned char [10]
  2056 ;;  value4          2   73[BANK0 ] int 
  2057 ;;  value3          2   71[BANK0 ] int 
  2058 ;;  value2          2   69[BANK0 ] int 
  2059 ;;  value1          2   67[BANK0 ] int 
  2060 ;;  decimalValue    2   65[BANK0 ] int 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  2   47[BANK0 ] int 
  2063 ;; Registers used:
  2064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2070 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2071 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2072 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2073 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2074 ;;Total ram usage:       28 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 12
  2077 ;; This function calls:
  2078 ;;		_LCD_String_xy
  2079 ;;		___wmul
  2080 ;;		_getKeypad
  2081 ;;		_sprintf
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text5
  2088   004530                     __ptext5:
  2089                           	callstack 0
  2090   004530                     _getValue:
  2091                           	callstack 18
  2092   004530                     
  2093                           ;./keypad.h: 142:     int value1 = -1;
  2094   004530  0100               	movlb	0	; () banked
  2095   004532  69A3               	setf	getValue@value1& (0+255),b
  2096   004534  69A4               	setf	(getValue@value1+1)& (0+255),b
  2097                           
  2098                           ;./keypad.h: 143:     int value2 = -1;
  2099   004536  69A5               	setf	getValue@value2& (0+255),b
  2100   004538  69A6               	setf	(getValue@value2+1)& (0+255),b
  2101                           
  2102                           ;./keypad.h: 144:     int value3 = -1;
  2103   00453A  69A7               	setf	getValue@value3& (0+255),b
  2104   00453C  69A8               	setf	(getValue@value3+1)& (0+255),b
  2105                           
  2106                           ;./keypad.h: 145:     int value4 = -1;
  2107   00453E  69A9               	setf	getValue@value4& (0+255),b
  2108   004540  69AA               	setf	(getValue@value4+1)& (0+255),b
  2109   004542                     
  2110                           ; BSR set to: 0
  2111                           ;./keypad.h: 147:     char data[10];;./keypad.h: 149:     LCD_String_xy(2,0,"____");
  2112   004542  0E00               	movlw	0
  2113   004544  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2114   004546  0EB9               	movlw	low STR_1
  2115   004548  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2116   00454A  0E41               	movlw	high STR_1
  2117   00454C  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  2118   00454E  0E02               	movlw	2
  2119   004550  EC64  F02D         	call	_LCD_String_xy
  2120                           
  2121                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
  2122   004554  EFB2  F022         	goto	l2678
  2123   004558                     l2676:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;./keypad.h: 152:             value1 = getKeypad();
  2127   004558  ECB7  F026         	call	_getKeypad	;wreg free
  2128   00455C  C060  F0A3         	movff	?_getKeypad,getValue@value1
  2129   004560  C061  F0A4         	movff	?_getKeypad+1,getValue@value1+1
  2130   004564                     l2678:
  2131                           
  2132                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
  2133   004564  0100               	movlb	0	; () banked
  2134   004566  BFA4               	btfsc	(getValue@value1+1)& (0+255),7,b
  2135   004568  EFB8  F022         	goto	u2711
  2136   00456C  EFBA  F022         	goto	u2710
  2137   004570                     u2711:
  2138   004570  EFAC  F022         	goto	l2676
  2139   004574                     u2710:
  2140   004574                     
  2141                           ; BSR set to: 0
  2142   004574  BFA4               	btfsc	(getValue@value1+1)& (0+255),7,b
  2143   004576  EFC8  F022         	goto	u2720
  2144   00457A  51A4               	movf	(getValue@value1+1)& (0+255),w,b
  2145   00457C  E107               	bnz	u2721
  2146   00457E  0E0A               	movlw	10
  2147   004580  5DA3               	subwf	getValue@value1& (0+255),w,b
  2148   004582  B0D8               	btfsc	status,0,c
  2149   004584  EFC6  F022         	goto	u2721
  2150   004588  EFC8  F022         	goto	u2720
  2151   00458C                     u2721:
  2152   00458C  EFAC  F022         	goto	l2676
  2153   004590                     u2720:
  2154   004590                     
  2155                           ; BSR set to: 0
  2156                           ;./keypad.h: 154:     sprintf(data,"%d",value1);
  2157   004590  0E97               	movlw	low getValue@data
  2158   004592  6F7D               	movwf	sprintf@s& (0+255),b
  2159   004594  0EBE               	movlw	low STR_2
  2160   004596  6F7E               	movwf	sprintf@fmt& (0+255),b
  2161   004598  0E41               	movlw	high STR_2
  2162   00459A  6F7F               	movwf	(sprintf@fmt+1)& (0+255),b
  2163   00459C  C0A3  F080         	movff	getValue@value1,?_sprintf+3
  2164   0045A0  C0A4  F081         	movff	getValue@value1+1,?_sprintf+4
  2165   0045A4  ECA6  F02D         	call	_sprintf	;wreg free
  2166   0045A8                     
  2167                           ;./keypad.h: 155:     LCD_String_xy(2,0,data);
  2168   0045A8  0E00               	movlw	0
  2169   0045AA  0100               	movlb	0	; () banked
  2170   0045AC  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2171   0045AE  0E97               	movlw	low getValue@data
  2172   0045B0  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2173   0045B2  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  2174   0045B4  0E02               	movlw	2
  2175   0045B6  EC64  F02D         	call	_LCD_String_xy
  2176                           
  2177                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
  2178   0045BA  EFE5  F022         	goto	l2688
  2179   0045BE                     l2686:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;./keypad.h: 158:         value2 = getKeypad();
  2183   0045BE  ECB7  F026         	call	_getKeypad	;wreg free
  2184   0045C2  C060  F0A5         	movff	?_getKeypad,getValue@value2
  2185   0045C6  C061  F0A6         	movff	?_getKeypad+1,getValue@value2+1
  2186   0045CA                     l2688:
  2187                           
  2188                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
  2189   0045CA  0100               	movlb	0	; () banked
  2190   0045CC  BFA6               	btfsc	(getValue@value2+1)& (0+255),7,b
  2191   0045CE  EFEB  F022         	goto	u2731
  2192   0045D2  EFED  F022         	goto	u2730
  2193   0045D6                     u2731:
  2194   0045D6  EFDF  F022         	goto	l2686
  2195   0045DA                     u2730:
  2196   0045DA                     
  2197                           ; BSR set to: 0
  2198   0045DA  BFA6               	btfsc	(getValue@value2+1)& (0+255),7,b
  2199   0045DC  EFFB  F022         	goto	u2740
  2200   0045E0  51A6               	movf	(getValue@value2+1)& (0+255),w,b
  2201   0045E2  E107               	bnz	u2741
  2202   0045E4  0E0A               	movlw	10
  2203   0045E6  5DA5               	subwf	getValue@value2& (0+255),w,b
  2204   0045E8  B0D8               	btfsc	status,0,c
  2205   0045EA  EFF9  F022         	goto	u2741
  2206   0045EE  EFFB  F022         	goto	u2740
  2207   0045F2                     u2741:
  2208   0045F2  EFDF  F022         	goto	l2686
  2209   0045F6                     u2740:
  2210   0045F6                     
  2211                           ; BSR set to: 0
  2212                           ;./keypad.h: 160:     sprintf(data,"%d",value2);
  2213   0045F6  0E97               	movlw	low getValue@data
  2214   0045F8  6F7D               	movwf	sprintf@s& (0+255),b
  2215   0045FA  0EBE               	movlw	low STR_2
  2216   0045FC  6F7E               	movwf	sprintf@fmt& (0+255),b
  2217   0045FE  0E41               	movlw	high STR_2
  2218   004600  6F7F               	movwf	(sprintf@fmt+1)& (0+255),b
  2219   004602  C0A5  F080         	movff	getValue@value2,?_sprintf+3
  2220   004606  C0A6  F081         	movff	getValue@value2+1,?_sprintf+4
  2221   00460A  ECA6  F02D         	call	_sprintf	;wreg free
  2222   00460E                     
  2223                           ;./keypad.h: 161:     LCD_String_xy(2,1,data);
  2224   00460E  0E01               	movlw	1
  2225   004610  0100               	movlb	0	; () banked
  2226   004612  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2227   004614  0E97               	movlw	low getValue@data
  2228   004616  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2229   004618  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  2230   00461A  0E02               	movlw	2
  2231   00461C  EC64  F02D         	call	_LCD_String_xy
  2232                           
  2233                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
  2234   004620  EF18  F023         	goto	l2698
  2235   004624                     l2696:
  2236                           
  2237                           ; BSR set to: 0
  2238                           ;./keypad.h: 164:         value3 = getKeypad();
  2239   004624  ECB7  F026         	call	_getKeypad	;wreg free
  2240   004628  C060  F0A7         	movff	?_getKeypad,getValue@value3
  2241   00462C  C061  F0A8         	movff	?_getKeypad+1,getValue@value3+1
  2242   004630                     l2698:
  2243                           
  2244                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
  2245   004630  0100               	movlb	0	; () banked
  2246   004632  BFA8               	btfsc	(getValue@value3+1)& (0+255),7,b
  2247   004634  EF1E  F023         	goto	u2751
  2248   004638  EF20  F023         	goto	u2750
  2249   00463C                     u2751:
  2250   00463C  EF12  F023         	goto	l2696
  2251   004640                     u2750:
  2252   004640                     
  2253                           ; BSR set to: 0
  2254   004640  BFA8               	btfsc	(getValue@value3+1)& (0+255),7,b
  2255   004642  EF2E  F023         	goto	u2760
  2256   004646  51A8               	movf	(getValue@value3+1)& (0+255),w,b
  2257   004648  E107               	bnz	u2761
  2258   00464A  0E0A               	movlw	10
  2259   00464C  5DA7               	subwf	getValue@value3& (0+255),w,b
  2260   00464E  B0D8               	btfsc	status,0,c
  2261   004650  EF2C  F023         	goto	u2761
  2262   004654  EF2E  F023         	goto	u2760
  2263   004658                     u2761:
  2264   004658  EF12  F023         	goto	l2696
  2265   00465C                     u2760:
  2266   00465C                     
  2267                           ; BSR set to: 0
  2268                           ;./keypad.h: 166:     sprintf(data,"%d",value3);
  2269   00465C  0E97               	movlw	low getValue@data
  2270   00465E  6F7D               	movwf	sprintf@s& (0+255),b
  2271   004660  0EBE               	movlw	low STR_2
  2272   004662  6F7E               	movwf	sprintf@fmt& (0+255),b
  2273   004664  0E41               	movlw	high STR_2
  2274   004666  6F7F               	movwf	(sprintf@fmt+1)& (0+255),b
  2275   004668  C0A7  F080         	movff	getValue@value3,?_sprintf+3
  2276   00466C  C0A8  F081         	movff	getValue@value3+1,?_sprintf+4
  2277   004670  ECA6  F02D         	call	_sprintf	;wreg free
  2278   004674                     
  2279                           ;./keypad.h: 167:     LCD_String_xy(2,2,data);
  2280   004674  0E02               	movlw	2
  2281   004676  0100               	movlb	0	; () banked
  2282   004678  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2283   00467A  0E97               	movlw	low getValue@data
  2284   00467C  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2285   00467E  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  2286   004680  0E02               	movlw	2
  2287   004682  EC64  F02D         	call	_LCD_String_xy
  2288                           
  2289                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
  2290   004686  EF4B  F023         	goto	l2708
  2291   00468A                     l2706:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;./keypad.h: 170:         value4 = getKeypad();
  2295   00468A  ECB7  F026         	call	_getKeypad	;wreg free
  2296   00468E  C060  F0A9         	movff	?_getKeypad,getValue@value4
  2297   004692  C061  F0AA         	movff	?_getKeypad+1,getValue@value4+1
  2298   004696                     l2708:
  2299                           
  2300                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
  2301   004696  0100               	movlb	0	; () banked
  2302   004698  BFAA               	btfsc	(getValue@value4+1)& (0+255),7,b
  2303   00469A  EF51  F023         	goto	u2771
  2304   00469E  EF53  F023         	goto	u2770
  2305   0046A2                     u2771:
  2306   0046A2  EF45  F023         	goto	l2706
  2307   0046A6                     u2770:
  2308   0046A6                     
  2309                           ; BSR set to: 0
  2310   0046A6  BFAA               	btfsc	(getValue@value4+1)& (0+255),7,b
  2311   0046A8  EF61  F023         	goto	u2780
  2312   0046AC  51AA               	movf	(getValue@value4+1)& (0+255),w,b
  2313   0046AE  E107               	bnz	u2781
  2314   0046B0  0E0A               	movlw	10
  2315   0046B2  5DA9               	subwf	getValue@value4& (0+255),w,b
  2316   0046B4  B0D8               	btfsc	status,0,c
  2317   0046B6  EF5F  F023         	goto	u2781
  2318   0046BA  EF61  F023         	goto	u2780
  2319   0046BE                     u2781:
  2320   0046BE  EF45  F023         	goto	l2706
  2321   0046C2                     u2780:
  2322   0046C2                     
  2323                           ; BSR set to: 0
  2324                           ;./keypad.h: 172:     sprintf(data,"%d",value4);
  2325   0046C2  0E97               	movlw	low getValue@data
  2326   0046C4  6F7D               	movwf	sprintf@s& (0+255),b
  2327   0046C6  0EBE               	movlw	low STR_2
  2328   0046C8  6F7E               	movwf	sprintf@fmt& (0+255),b
  2329   0046CA  0E41               	movlw	high STR_2
  2330   0046CC  6F7F               	movwf	(sprintf@fmt+1)& (0+255),b
  2331   0046CE  C0A9  F080         	movff	getValue@value4,?_sprintf+3
  2332   0046D2  C0AA  F081         	movff	getValue@value4+1,?_sprintf+4
  2333   0046D6  ECA6  F02D         	call	_sprintf	;wreg free
  2334   0046DA                     
  2335                           ;./keypad.h: 173:     LCD_String_xy(2,3,data);
  2336   0046DA  0E03               	movlw	3
  2337   0046DC  0100               	movlb	0	; () banked
  2338   0046DE  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2339   0046E0  0E97               	movlw	low getValue@data
  2340   0046E2  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2341   0046E4  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  2342   0046E6  0E02               	movlw	2
  2343   0046E8  EC64  F02D         	call	_LCD_String_xy
  2344   0046EC                     
  2345                           ;./keypad.h: 175:     decimalValue = (value1 * 1000)+(value2 * 100)+(value3 * 10) + (val
      +                          ue4);
  2346   0046EC  C0A3  F060         	movff	getValue@value1,___wmul@multiplier
  2347   0046F0  C0A4  F061         	movff	getValue@value1+1,___wmul@multiplier+1
  2348   0046F4  0E03               	movlw	3
  2349   0046F6  0100               	movlb	0	; () banked
  2350   0046F8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2351   0046FA  0EE8               	movlw	232
  2352   0046FC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2353   0046FE  EC78  F02E         	call	___wmul	;wreg free
  2354   004702  C060  F091         	movff	?___wmul,??_getValue
  2355   004706  C061  F092         	movff	?___wmul+1,??_getValue+1
  2356   00470A  C0A5  F060         	movff	getValue@value2,___wmul@multiplier
  2357   00470E  C0A6  F061         	movff	getValue@value2+1,___wmul@multiplier+1
  2358   004712  0E00               	movlw	0
  2359   004714  0100               	movlb	0	; () banked
  2360   004716  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2361   004718  0E64               	movlw	100
  2362   00471A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2363   00471C  EC78  F02E         	call	___wmul	;wreg free
  2364   004720  0100               	movlb	0	; () banked
  2365   004722  5160               	movf	?___wmul& (0+255),w,b
  2366   004724  2591               	addwf	??_getValue& (0+255),w,b
  2367   004726  6F93               	movwf	(??_getValue+2)& (0+255),b
  2368   004728  5161               	movf	(?___wmul+1)& (0+255),w,b
  2369   00472A  2192               	addwfc	(??_getValue+1)& (0+255),w,b
  2370   00472C  6F94               	movwf	(??_getValue+3)& (0+255),b
  2371   00472E  C0A7  F060         	movff	getValue@value3,___wmul@multiplier
  2372   004732  C0A8  F061         	movff	getValue@value3+1,___wmul@multiplier+1
  2373   004736  0E00               	movlw	0
  2374   004738  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2375   00473A  0E0A               	movlw	10
  2376   00473C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2377   00473E  EC78  F02E         	call	___wmul	;wreg free
  2378   004742  0100               	movlb	0	; () banked
  2379   004744  5160               	movf	?___wmul& (0+255),w,b
  2380   004746  2593               	addwf	(??_getValue+2)& (0+255),w,b
  2381   004748  6F95               	movwf	(??_getValue+4)& (0+255),b
  2382   00474A  5161               	movf	(?___wmul+1)& (0+255),w,b
  2383   00474C  2194               	addwfc	(??_getValue+3)& (0+255),w,b
  2384   00474E  6F96               	movwf	(??_getValue+5)& (0+255),b
  2385   004750  51A9               	movf	getValue@value4& (0+255),w,b
  2386   004752  2595               	addwf	(??_getValue+4)& (0+255),w,b
  2387   004754  6FA1               	movwf	getValue@decimalValue& (0+255),b
  2388   004756  51AA               	movf	(getValue@value4+1)& (0+255),w,b
  2389   004758  2196               	addwfc	(??_getValue+5)& (0+255),w,b
  2390   00475A  6FA2               	movwf	(getValue@decimalValue+1)& (0+255),b
  2391   00475C                     
  2392                           ; BSR set to: 0
  2393                           ;./keypad.h: 176:     return decimalValue;
  2394   00475C  C0A1  F08F         	movff	getValue@decimalValue,?_getValue
  2395   004760  C0A2  F090         	movff	getValue@decimalValue+1,?_getValue+1
  2396   004764                     
  2397                           ; BSR set to: 0
  2398   004764  0012               	return		;funcret
  2399   004766                     __end_of_getValue:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _getKeypad *****************
  2403 ;; Defined at:
  2404 ;;		line 38 in file "./keypad.h"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  buttonNumber    2    2[BANK0 ] int 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  2    0[BANK0 ] int 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2418 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2421 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2422 ;;Total ram usage:        4 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 7
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_getValue
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text6
  2433   004D6E                     __ptext6:
  2434                           	callstack 0
  2435   004D6E                     _getKeypad:
  2436                           	callstack 22
  2437   004D6E                     
  2438                           ;./keypad.h: 39:     int buttonNumber = -1;
  2439   004D6E  0100               	movlb	0	; () banked
  2440   004D70  6962               	setf	getKeypad@buttonNumber& (0+255),b
  2441   004D72  6963               	setf	(getKeypad@buttonNumber+1)& (0+255),b
  2442                           
  2443                           ;./keypad.h: 42:     PORTAbits.RA0 = 1;
  2444   004D74  80CA               	bsf	202,0,c	;volatile
  2445                           
  2446                           ;./keypad.h: 43:     if(PORTAbits.RA4 == 1){
  2447   004D76  A8CA               	btfss	202,4,c	;volatile
  2448   004D78  EFC0  F026         	goto	u2191
  2449   004D7C  EFC2  F026         	goto	u2190
  2450   004D80                     u2191:
  2451   004D80  EFCD  F026         	goto	l165
  2452   004D84                     u2190:
  2453   004D84                     
  2454                           ; BSR set to: 0
  2455                           ;./keypad.h: 45:         buttonNumber = 1;
  2456   004D84  0E00               	movlw	0
  2457   004D86  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2458   004D88  0E01               	movlw	1
  2459   004D8A  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2460   004D8C                     l166:
  2461   004D8C  B8CA               	btfsc	202,4,c	;volatile
  2462   004D8E  EFCB  F026         	goto	u2201
  2463   004D92  EFCD  F026         	goto	u2200
  2464   004D96                     u2201:
  2465   004D96  EFC6  F026         	goto	l166
  2466   004D9A                     u2200:
  2467   004D9A                     l165:
  2468                           
  2469                           ;./keypad.h: 48:     if(PORTAbits.RA5 == 1){
  2470   004D9A  AACA               	btfss	202,5,c	;volatile
  2471   004D9C  EFD2  F026         	goto	u2211
  2472   004DA0  EFD4  F026         	goto	u2210
  2473   004DA4                     u2211:
  2474   004DA4  EFE0  F026         	goto	l169
  2475   004DA8                     u2210:
  2476   004DA8                     
  2477                           ;./keypad.h: 50:         buttonNumber = 4;
  2478   004DA8  0E00               	movlw	0
  2479   004DAA  0100               	movlb	0	; () banked
  2480   004DAC  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2481   004DAE  0E04               	movlw	4
  2482   004DB0  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2483   004DB2                     l170:
  2484   004DB2  BACA               	btfsc	202,5,c	;volatile
  2485   004DB4  EFDE  F026         	goto	u2221
  2486   004DB8  EFE0  F026         	goto	u2220
  2487   004DBC                     u2221:
  2488   004DBC  EFD9  F026         	goto	l170
  2489   004DC0                     u2220:
  2490   004DC0                     l169:
  2491                           
  2492                           ;./keypad.h: 53:     if(PORTAbits.RA3 == 1){
  2493   004DC0  A6CA               	btfss	202,3,c	;volatile
  2494   004DC2  EFE5  F026         	goto	u2231
  2495   004DC6  EFE7  F026         	goto	u2230
  2496   004DCA                     u2231:
  2497   004DCA  EFF3  F026         	goto	l173
  2498   004DCE                     u2230:
  2499   004DCE                     
  2500                           ;./keypad.h: 55:         buttonNumber = 7;
  2501   004DCE  0E00               	movlw	0
  2502   004DD0  0100               	movlb	0	; () banked
  2503   004DD2  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2504   004DD4  0E07               	movlw	7
  2505   004DD6  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2506   004DD8                     l174:
  2507   004DD8  B6CA               	btfsc	202,3,c	;volatile
  2508   004DDA  EFF1  F026         	goto	u2241
  2509   004DDE  EFF3  F026         	goto	u2240
  2510   004DE2                     u2241:
  2511   004DE2  EFEC  F026         	goto	l174
  2512   004DE6                     u2240:
  2513   004DE6                     l173:
  2514                           
  2515                           ;./keypad.h: 58:     if(PORTCbits.RC4 == 1){
  2516   004DE6  A8CC               	btfss	204,4,c	;volatile
  2517   004DE8  EFF8  F026         	goto	u2251
  2518   004DEC  EFFA  F026         	goto	u2250
  2519   004DF0                     u2251:
  2520   004DF0  EF06  F027         	goto	l177
  2521   004DF4                     u2250:
  2522   004DF4                     
  2523                           ;./keypad.h: 60:         buttonNumber = 15;
  2524   004DF4  0E00               	movlw	0
  2525   004DF6  0100               	movlb	0	; () banked
  2526   004DF8  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2527   004DFA  0E0F               	movlw	15
  2528   004DFC  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2529   004DFE                     l178:
  2530   004DFE  B8CC               	btfsc	204,4,c	;volatile
  2531   004E00  EF04  F027         	goto	u2261
  2532   004E04  EF06  F027         	goto	u2260
  2533   004E08                     u2261:
  2534   004E08  EFFF  F026         	goto	l178
  2535   004E0C                     u2260:
  2536   004E0C                     l177:
  2537                           
  2538                           ;./keypad.h: 63:     PORTAbits.RA0 = 0;
  2539   004E0C  90CA               	bcf	202,0,c	;volatile
  2540                           
  2541                           ;./keypad.h: 66:     PORTAbits.RA1 = 1;
  2542   004E0E  82CA               	bsf	202,1,c	;volatile
  2543                           
  2544                           ;./keypad.h: 67:     if(PORTAbits.RA4 == 1){
  2545   004E10  A8CA               	btfss	202,4,c	;volatile
  2546   004E12  EF0D  F027         	goto	u2271
  2547   004E16  EF0F  F027         	goto	u2270
  2548   004E1A                     u2271:
  2549   004E1A  EF1B  F027         	goto	l181
  2550   004E1E                     u2270:
  2551   004E1E                     
  2552                           ;./keypad.h: 69:         buttonNumber = 2;
  2553   004E1E  0E00               	movlw	0
  2554   004E20  0100               	movlb	0	; () banked
  2555   004E22  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2556   004E24  0E02               	movlw	2
  2557   004E26  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2558   004E28                     l182:
  2559   004E28  B8CA               	btfsc	202,4,c	;volatile
  2560   004E2A  EF19  F027         	goto	u2281
  2561   004E2E  EF1B  F027         	goto	u2280
  2562   004E32                     u2281:
  2563   004E32  EF14  F027         	goto	l182
  2564   004E36                     u2280:
  2565   004E36                     l181:
  2566                           
  2567                           ;./keypad.h: 72:     if(PORTAbits.RA5 == 1){
  2568   004E36  AACA               	btfss	202,5,c	;volatile
  2569   004E38  EF20  F027         	goto	u2291
  2570   004E3C  EF22  F027         	goto	u2290
  2571   004E40                     u2291:
  2572   004E40  EF2E  F027         	goto	l185
  2573   004E44                     u2290:
  2574   004E44                     
  2575                           ;./keypad.h: 74:         buttonNumber = 5;
  2576   004E44  0E00               	movlw	0
  2577   004E46  0100               	movlb	0	; () banked
  2578   004E48  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2579   004E4A  0E05               	movlw	5
  2580   004E4C  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2581   004E4E                     l186:
  2582   004E4E  BACA               	btfsc	202,5,c	;volatile
  2583   004E50  EF2C  F027         	goto	u2301
  2584   004E54  EF2E  F027         	goto	u2300
  2585   004E58                     u2301:
  2586   004E58  EF27  F027         	goto	l186
  2587   004E5C                     u2300:
  2588   004E5C                     l185:
  2589                           
  2590                           ;./keypad.h: 77:     if(PORTAbits.RA3 == 1){
  2591   004E5C  A6CA               	btfss	202,3,c	;volatile
  2592   004E5E  EF33  F027         	goto	u2311
  2593   004E62  EF35  F027         	goto	u2310
  2594   004E66                     u2311:
  2595   004E66  EF41  F027         	goto	l189
  2596   004E6A                     u2310:
  2597   004E6A                     
  2598                           ;./keypad.h: 79:         buttonNumber = 8;
  2599   004E6A  0E00               	movlw	0
  2600   004E6C  0100               	movlb	0	; () banked
  2601   004E6E  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2602   004E70  0E08               	movlw	8
  2603   004E72  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2604   004E74                     l190:
  2605   004E74  B6CA               	btfsc	202,3,c	;volatile
  2606   004E76  EF3F  F027         	goto	u2321
  2607   004E7A  EF41  F027         	goto	u2320
  2608   004E7E                     u2321:
  2609   004E7E  EF3A  F027         	goto	l190
  2610   004E82                     u2320:
  2611   004E82                     l189:
  2612                           
  2613                           ;./keypad.h: 82:     if(PORTCbits.RC4 == 1){
  2614   004E82  A8CC               	btfss	204,4,c	;volatile
  2615   004E84  EF46  F027         	goto	u2331
  2616   004E88  EF48  F027         	goto	u2330
  2617   004E8C                     u2331:
  2618   004E8C  EF54  F027         	goto	l193
  2619   004E90                     u2330:
  2620   004E90                     
  2621                           ;./keypad.h: 84:         buttonNumber = 0;
  2622   004E90  0E00               	movlw	0
  2623   004E92  0100               	movlb	0	; () banked
  2624   004E94  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2625   004E96  0E00               	movlw	0
  2626   004E98  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2627   004E9A                     l194:
  2628   004E9A  B8CC               	btfsc	204,4,c	;volatile
  2629   004E9C  EF52  F027         	goto	u2341
  2630   004EA0  EF54  F027         	goto	u2340
  2631   004EA4                     u2341:
  2632   004EA4  EF4D  F027         	goto	l194
  2633   004EA8                     u2340:
  2634   004EA8                     l193:
  2635                           
  2636                           ;./keypad.h: 87:     PORTAbits.RA1 = 0;
  2637   004EA8  92CA               	bcf	202,1,c	;volatile
  2638                           
  2639                           ;./keypad.h: 90:     PORTAbits.RA2 = 1;
  2640   004EAA  84CA               	bsf	202,2,c	;volatile
  2641                           
  2642                           ;./keypad.h: 91:     if(PORTAbits.RA4 == 1){
  2643   004EAC  A8CA               	btfss	202,4,c	;volatile
  2644   004EAE  EF5B  F027         	goto	u2351
  2645   004EB2  EF5D  F027         	goto	u2350
  2646   004EB6                     u2351:
  2647   004EB6  EF69  F027         	goto	l197
  2648   004EBA                     u2350:
  2649   004EBA                     
  2650                           ;./keypad.h: 93:         buttonNumber = 3;
  2651   004EBA  0E00               	movlw	0
  2652   004EBC  0100               	movlb	0	; () banked
  2653   004EBE  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2654   004EC0  0E03               	movlw	3
  2655   004EC2  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2656   004EC4                     l198:
  2657   004EC4  B8CA               	btfsc	202,4,c	;volatile
  2658   004EC6  EF67  F027         	goto	u2361
  2659   004ECA  EF69  F027         	goto	u2360
  2660   004ECE                     u2361:
  2661   004ECE  EF62  F027         	goto	l198
  2662   004ED2                     u2360:
  2663   004ED2                     l197:
  2664                           
  2665                           ;./keypad.h: 96:     if(PORTAbits.RA5 == 1){
  2666   004ED2  AACA               	btfss	202,5,c	;volatile
  2667   004ED4  EF6E  F027         	goto	u2371
  2668   004ED8  EF70  F027         	goto	u2370
  2669   004EDC                     u2371:
  2670   004EDC  EF7C  F027         	goto	l201
  2671   004EE0                     u2370:
  2672   004EE0                     
  2673                           ;./keypad.h: 98:         buttonNumber = 6;
  2674   004EE0  0E00               	movlw	0
  2675   004EE2  0100               	movlb	0	; () banked
  2676   004EE4  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2677   004EE6  0E06               	movlw	6
  2678   004EE8  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2679   004EEA                     l202:
  2680   004EEA  BACA               	btfsc	202,5,c	;volatile
  2681   004EEC  EF7A  F027         	goto	u2381
  2682   004EF0  EF7C  F027         	goto	u2380
  2683   004EF4                     u2381:
  2684   004EF4  EF75  F027         	goto	l202
  2685   004EF8                     u2380:
  2686   004EF8                     l201:
  2687                           
  2688                           ;./keypad.h: 101:     if(PORTAbits.RA3 == 1){
  2689   004EF8  A6CA               	btfss	202,3,c	;volatile
  2690   004EFA  EF81  F027         	goto	u2391
  2691   004EFE  EF83  F027         	goto	u2390
  2692   004F02                     u2391:
  2693   004F02  EF8F  F027         	goto	l205
  2694   004F06                     u2390:
  2695   004F06                     
  2696                           ;./keypad.h: 103:         buttonNumber = 9;
  2697   004F06  0E00               	movlw	0
  2698   004F08  0100               	movlb	0	; () banked
  2699   004F0A  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2700   004F0C  0E09               	movlw	9
  2701   004F0E  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2702   004F10                     l206:
  2703   004F10  B6CA               	btfsc	202,3,c	;volatile
  2704   004F12  EF8D  F027         	goto	u2401
  2705   004F16  EF8F  F027         	goto	u2400
  2706   004F1A                     u2401:
  2707   004F1A  EF88  F027         	goto	l206
  2708   004F1E                     u2400:
  2709   004F1E                     l205:
  2710                           
  2711                           ;./keypad.h: 106:     if(PORTCbits.RC4 == 1){
  2712   004F1E  A8CC               	btfss	204,4,c	;volatile
  2713   004F20  EF94  F027         	goto	u2411
  2714   004F24  EF96  F027         	goto	u2410
  2715   004F28                     u2411:
  2716   004F28  EFA2  F027         	goto	l209
  2717   004F2C                     u2410:
  2718   004F2C                     
  2719                           ;./keypad.h: 108:         buttonNumber = 10;
  2720   004F2C  0E00               	movlw	0
  2721   004F2E  0100               	movlb	0	; () banked
  2722   004F30  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2723   004F32  0E0A               	movlw	10
  2724   004F34  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2725   004F36                     l210:
  2726   004F36  B8CC               	btfsc	204,4,c	;volatile
  2727   004F38  EFA0  F027         	goto	u2421
  2728   004F3C  EFA2  F027         	goto	u2420
  2729   004F40                     u2421:
  2730   004F40  EF9B  F027         	goto	l210
  2731   004F44                     u2420:
  2732   004F44                     l209:
  2733                           
  2734                           ;./keypad.h: 111:     PORTAbits.RA2 = 0;
  2735   004F44  94CA               	bcf	202,2,c	;volatile
  2736                           
  2737                           ;./keypad.h: 138:     return buttonNumber;
  2738   004F46  C062  F060         	movff	getKeypad@buttonNumber,?_getKeypad
  2739   004F4A  C063  F061         	movff	getKeypad@buttonNumber+1,?_getKeypad+1
  2740   004F4E  0012               	return		;funcret
  2741   004F50                     __end_of_getKeypad:
  2742                           	callstack 0
  2743                           
  2744 ;; *************** function ___wmul *****************
  2745 ;; Defined at:
  2746 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2749 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  product         2    4[BANK0 ] unsigned int 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  2    0[BANK0 ] unsigned int 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, prodl, prodh
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2761 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2762 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2764 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2765 ;;Total ram usage:        6 bytes
  2766 ;; Hardware stack levels used: 1
  2767 ;; Hardware stack levels required when called: 7
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_getValue
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text7
  2776   005CF0                     __ptext7:
  2777                           	callstack 0
  2778   005CF0                     ___wmul:
  2779                           	callstack 22
  2780   005CF0  0100               	movlb	0	; () banked
  2781   005CF2  5160               	movf	___wmul@multiplier& (0+255),w,b
  2782   005CF4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2783   005CF6  006F FFCC  F064    	movff	prodl,___wmul@product
  2784   005CFC  006F FFD0  F065    	movff	prodh,___wmul@product+1
  2785   005D02  5160               	movf	___wmul@multiplier& (0+255),w,b
  2786   005D04  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2787   005D06  50F3               	movf	243,w,c
  2788   005D08  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2789   005D0A  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2790   005D0C  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2791   005D0E  50F3               	movf	243,w,c
  2792   005D10  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2793   005D12                     
  2794                           ; BSR set to: 0
  2795   005D12  C064  F060         	movff	___wmul@product,?___wmul
  2796   005D16  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2797   005D1A                     
  2798                           ; BSR set to: 0
  2799   005D1A  0012               	return		;funcret
  2800   005D1C                     __end_of___wmul:
  2801                           	callstack 0
  2802                           
  2803 ;; *************** function _eepromRead *****************
  2804 ;; Defined at:
  2805 ;;		line 59 in file "./interrupt.h"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  address         1    wreg     unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  address         1    0[BANK0 ] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      unsigned char 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2822 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2823 ;;Total ram usage:        1 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; Hardware stack levels required when called: 7
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text8
  2834   005D46                     __ptext8:
  2835                           	callstack 0
  2836   005D46                     _eepromRead:
  2837                           	callstack 23
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;incstack = 0
  2841                           ;eepromRead@address stored from wreg
  2842   005D46  0100               	movlb	0	; () banked
  2843   005D48  6F60               	movwf	eepromRead@address& (0+255),b
  2844   005D4A                     
  2845                           ;./interrupt.h: 61:     NVMCON1 = 0;
  2846   005D4A  0E00               	movlw	0
  2847   005D4C  0139               	movlb	57	; () banked
  2848   005D4E  6FE5               	movwf	229,b	;volsfr
  2849   005D50                     
  2850                           ; BSR set to: 57
  2851                           ;./interrupt.h: 64:     NVMADRL = address;
  2852   005D50  0060  F183  F9E0   	movff	eepromRead@address,14816	;volatile
  2853   005D56                     
  2854                           ; BSR set to: 57
  2855                           ;./interrupt.h: 68:     NVMCON1bits.RD = 1;
  2856   005D56  81E5               	bsf	229,0,b	;volsfr
  2857   005D58                     l242:
  2858                           
  2859                           ; BSR set to: 57
  2860   005D58  B1E5               	btfsc	229,0,b	;volsfr
  2861   005D5A  EFB1  F02E         	goto	u2801
  2862   005D5E  EFB3  F02E         	goto	u2800
  2863   005D62                     u2801:
  2864   005D62  EFAC  F02E         	goto	l242
  2865   005D66                     u2800:
  2866   005D66                     
  2867                           ; BSR set to: 57
  2868                           ;./interrupt.h: 72:     return NVMDAT;
  2869   005D66  51E3               	movf	227,w,b	;volatile
  2870   005D68                     
  2871                           ; BSR set to: 57
  2872   005D68  0012               	return		;funcret
  2873   005D6A                     __end_of_eepromRead:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _closeBox *****************
  2877 ;; Defined at:
  2878 ;;		line 48 in file "./servo.h"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  j               2   62[BANK0 ] int 
  2883 ;;  i               2   60[BANK0 ] int 
  2884 ;;  i               2   64[BANK0 ] int 
  2885 ;;  d              10   49[BANK0 ] unsigned char [10]
  2886 ;;  pwmStatus       1   59[BANK0 ] _Bool 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2897 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2898 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2899 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2900 ;;Total ram usage:       19 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 12
  2903 ;; This function calls:
  2904 ;;		_LCD_Clear
  2905 ;;		_LCD_String_xy
  2906 ;;		_PWM2_LoadDutyValue
  2907 ;;		_PWM2_OutputStatusGet
  2908 ;;		_sprintf
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           	psect	text9
  2915   005224                     __ptext9:
  2916                           	callstack 0
  2917   005224                     _closeBox:
  2918                           	callstack 18
  2919   005224                     
  2920                           ;./servo.h: 49:     _Bool pwmStatus;;./servo.h: 50:     PWM2_LoadDutyValue( 67 );
  2921   005224  0E00               	movlw	0
  2922   005226  0100               	movlb	0	; () banked
  2923   005228  6F61               	movwf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  2924   00522A  0E43               	movlw	67
  2925   00522C  6F60               	movwf	PWM2_LoadDutyValue@dutyValue& (0+255),b
  2926   00522E  EC30  F02E         	call	_PWM2_LoadDutyValue	;wreg free
  2927                           
  2928                           ;./servo.h: 51:     char d[10];;./servo.h: 53:     LCD_Clear();
  2929   005232  EC42  F02F         	call	_LCD_Clear	;wreg free
  2930   005236                     
  2931                           ;./servo.h: 54:     LCD_String_xy(1, 0, "Closing Box in:");
  2932   005236  0E00               	movlw	0
  2933   005238  0100               	movlb	0	; () banked
  2934   00523A  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2935   00523C  0E18               	movlw	low STR_11
  2936   00523E  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2937   005240  0E41               	movlw	high STR_11
  2938   005242  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  2939   005244  0E01               	movlw	1
  2940   005246  EC64  F02D         	call	_LCD_String_xy
  2941   00524A                     
  2942                           ;./servo.h: 55:     for(int i = 0; i < 5 ; i++){
  2943   00524A  0E00               	movlw	0
  2944   00524C  0100               	movlb	0	; () banked
  2945   00524E  6FA1               	movwf	(closeBox@i+1)& (0+255),b
  2946   005250  0E00               	movlw	0
  2947   005252  6FA0               	movwf	closeBox@i& (0+255),b
  2948   005254                     l2818:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;./servo.h: 56:         sprintf(d,"%d",(6 - (i + 1)));
  2952   005254  0E91               	movlw	low closeBox@d
  2953   005256  6F7D               	movwf	sprintf@s& (0+255),b
  2954   005258  0EBE               	movlw	low STR_2
  2955   00525A  6F7E               	movwf	sprintf@fmt& (0+255),b
  2956   00525C  0E41               	movlw	high STR_2
  2957   00525E  6F7F               	movwf	(sprintf@fmt+1)& (0+255),b
  2958   005260  51A0               	movf	closeBox@i& (0+255),w,b
  2959   005262  0805               	sublw	5
  2960   005264  6F80               	movwf	(?_sprintf+3)& (0+255),b
  2961   005266  51A1               	movf	(closeBox@i+1)& (0+255),w,b
  2962   005268  A0D8               	btfss	status,0,c
  2963   00526A  2AE8               	incf	wreg,f,c
  2964   00526C  0800               	sublw	0
  2965   00526E  6F81               	movwf	(?_sprintf+4)& (0+255),b
  2966   005270  ECA6  F02D         	call	_sprintf	;wreg free
  2967   005274                     
  2968                           ;./servo.h: 57:         LCD_String_xy(2, 0, d);
  2969   005274  0E00               	movlw	0
  2970   005276  0100               	movlb	0	; () banked
  2971   005278  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2972   00527A  0E91               	movlw	low closeBox@d
  2973   00527C  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2974   00527E  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  2975   005280  0E02               	movlw	2
  2976   005282  EC64  F02D         	call	_LCD_String_xy
  2977   005286                     
  2978                           ;./servo.h: 58:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2979   005286  0E06               	movlw	6
  2980   005288  0100               	movlb	0	; () banked
  2981   00528A  6F90               	movwf	(??_closeBox+1)& (0+255),b
  2982   00528C  0E13               	movlw	19
  2983   00528E  6F8F               	movwf	??_closeBox& (0+255),b
  2984   005290  0EAD               	movlw	173
  2985   005292                     u3147:
  2986   005292  2EE8               	decfsz	wreg,f,c
  2987   005294  D7FE               	bra	u3147
  2988   005296  2F8F               	decfsz	??_closeBox& (0+255),f,b
  2989   005298  D7FC               	bra	u3147
  2990   00529A  2F90               	decfsz	(??_closeBox+1)& (0+255),f,b
  2991   00529C  D7FA               	bra	u3147
  2992   00529E  D000               	nop2	
  2993   0052A0                     
  2994                           ;./servo.h: 59:     }
  2995   0052A0  0100               	movlb	0	; () banked
  2996   0052A2  4BA0               	infsnz	closeBox@i& (0+255),f,b
  2997   0052A4  2BA1               	incf	(closeBox@i+1)& (0+255),f,b
  2998   0052A6                     
  2999                           ; BSR set to: 0
  3000   0052A6  BFA1               	btfsc	(closeBox@i+1)& (0+255),7,b
  3001   0052A8  EF5F  F029         	goto	u2851
  3002   0052AC  51A1               	movf	(closeBox@i+1)& (0+255),w,b
  3003   0052AE  E109               	bnz	u2850
  3004   0052B0  0E05               	movlw	5
  3005   0052B2  5DA0               	subwf	closeBox@i& (0+255),w,b
  3006   0052B4  A0D8               	btfss	status,0,c
  3007   0052B6  EF5F  F029         	goto	u2851
  3008   0052BA  EF61  F029         	goto	u2850
  3009   0052BE                     u2851:
  3010   0052BE  EF2A  F029         	goto	l2818
  3011   0052C2                     u2850:
  3012   0052C2                     
  3013                           ; BSR set to: 0
  3014                           ;./servo.h: 60:     LCD_Clear();
  3015   0052C2  EC42  F02F         	call	_LCD_Clear	;wreg free
  3016   0052C6                     
  3017                           ;./servo.h: 63:     for(int i = 0;i < 100;i++)
  3018   0052C6  0E00               	movlw	0
  3019   0052C8  0100               	movlb	0	; () banked
  3020   0052CA  6F9D               	movwf	(closeBox@i_749+1)& (0+255),b
  3021   0052CC  0E00               	movlw	0
  3022   0052CE  6F9C               	movwf	closeBox@i_749& (0+255),b
  3023   0052D0                     l2836:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;./servo.h: 64:         for(int j = 0;j < 165;j++){
  3027   0052D0  0E00               	movlw	0
  3028   0052D2  6F9F               	movwf	(closeBox@j+1)& (0+255),b
  3029   0052D4  0E00               	movlw	0
  3030   0052D6  6F9E               	movwf	closeBox@j& (0+255),b
  3031   0052D8                     l2842:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;./servo.h: 65:             pwmStatus = PWM2_OutputStatusGet();
  3035   0052D8  EC2D  F02F         	call	_PWM2_OutputStatusGet	;wreg free
  3036   0052DC  0100               	movlb	0	; () banked
  3037   0052DE  6F9B               	movwf	closeBox@pwmStatus& (0+255),b
  3038   0052E0                     
  3039                           ; BSR set to: 0
  3040                           ;./servo.h: 66:             PORTCbits.RC5 = pwmStatus;
  3041   0052E0  B19B               	btfsc	closeBox@pwmStatus& (0+255),0,b
  3042   0052E2  D002               	bra	u2865
  3043   0052E4  9ACC               	bcf	204,5,c	;volatile
  3044   0052E6  D001               	bra	u2866
  3045   0052E8                     u2865:
  3046   0052E8  8ACC               	bsf	204,5,c	;volatile
  3047   0052EA                     u2866:
  3048   0052EA                     
  3049                           ;./servo.h: 67:         }
  3050   0052EA  0100               	movlb	0	; () banked
  3051   0052EC  4B9E               	infsnz	closeBox@j& (0+255),f,b
  3052   0052EE  2B9F               	incf	(closeBox@j+1)& (0+255),f,b
  3053   0052F0                     
  3054                           ; BSR set to: 0
  3055   0052F0  BF9F               	btfsc	(closeBox@j+1)& (0+255),7,b
  3056   0052F2  EF84  F029         	goto	u2871
  3057   0052F6  519F               	movf	(closeBox@j+1)& (0+255),w,b
  3058   0052F8  E109               	bnz	u2870
  3059   0052FA  0EA5               	movlw	165
  3060   0052FC  5D9E               	subwf	closeBox@j& (0+255),w,b
  3061   0052FE  A0D8               	btfss	status,0,c
  3062   005300  EF84  F029         	goto	u2871
  3063   005304  EF86  F029         	goto	u2870
  3064   005308                     u2871:
  3065   005308  EF6C  F029         	goto	l2842
  3066   00530C                     u2870:
  3067   00530C                     
  3068                           ; BSR set to: 0
  3069   00530C  4B9C               	infsnz	closeBox@i_749& (0+255),f,b
  3070   00530E  2B9D               	incf	(closeBox@i_749+1)& (0+255),f,b
  3071   005310                     
  3072                           ; BSR set to: 0
  3073   005310  BF9D               	btfsc	(closeBox@i_749+1)& (0+255),7,b
  3074   005312  EF94  F029         	goto	u2881
  3075   005316  519D               	movf	(closeBox@i_749+1)& (0+255),w,b
  3076   005318  E109               	bnz	u2880
  3077   00531A  0E64               	movlw	100
  3078   00531C  5D9C               	subwf	closeBox@i_749& (0+255),w,b
  3079   00531E  A0D8               	btfss	status,0,c
  3080   005320  EF94  F029         	goto	u2881
  3081   005324  EF96  F029         	goto	u2880
  3082   005328                     u2881:
  3083   005328  EF68  F029         	goto	l2836
  3084   00532C                     u2880:
  3085   00532C                     
  3086                           ; BSR set to: 0
  3087   00532C  0012               	return		;funcret
  3088   00532E                     __end_of_closeBox:
  3089                           	callstack 0
  3090                           
  3091 ;; *************** function _sprintf *****************
  3092 ;; Defined at:
  3093 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  s               1   29[BANK0 ] PTR unsigned char 
  3096 ;;		 -> closeBox@d(10), openBox@d(10), getValue@data(10), 
  3097 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  3098 ;;		 -> STR_12(3), STR_10(3), STR_5(3), STR_4(3), 
  3099 ;;		 -> STR_3(3), STR_2(3), 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  f              12   35[BANK0 ] struct _IO_FILE
  3102 ;;  ret             2    0        int 
  3103 ;;  ap              1   34[BANK0 ] PTR void [1]
  3104 ;;		 -> ?_sprintf(2), 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  2   29[BANK0 ] int 
  3107 ;; Registers used:
  3108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3114 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3115 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3117 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3118 ;;Total ram usage:       18 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; Hardware stack levels required when called: 11
  3121 ;; This function calls:
  3122 ;;		_vfprintf
  3123 ;; This function is called by:
  3124 ;;		_getValue
  3125 ;;		_openBox
  3126 ;;		_closeBox
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text10
  3131   005B4C                     __ptext10:
  3132                           	callstack 0
  3133   005B4C                     _sprintf:
  3134                           	callstack 18
  3135   005B4C  0E80               	movlw	low (?_sprintf+3)
  3136   005B4E  0100               	movlb	0	; () banked
  3137   005B50  6F82               	movwf	sprintf@ap& (0+255),b
  3138   005B52  C07D  F083         	movff	sprintf@s,sprintf@f
  3139   005B56                     
  3140                           ; BSR set to: 0
  3141   005B56  0E00               	movlw	0
  3142   005B58  6F87               	movwf	(sprintf@f+4)& (0+255),b
  3143   005B5A  0E00               	movlw	0
  3144   005B5C  6F86               	movwf	(sprintf@f+3)& (0+255),b
  3145   005B5E                     
  3146                           ; BSR set to: 0
  3147   005B5E  0E00               	movlw	0
  3148   005B60  6F8E               	movwf	(sprintf@f+11)& (0+255),b
  3149   005B62  0E00               	movlw	0
  3150   005B64  6F8D               	movwf	(sprintf@f+10)& (0+255),b
  3151   005B66                     
  3152                           ; BSR set to: 0
  3153   005B66  0E83               	movlw	low sprintf@f
  3154   005B68  6F77               	movwf	vfprintf@fp& (0+255),b
  3155   005B6A  C07E  F078         	movff	sprintf@fmt,vfprintf@fmt
  3156   005B6E  C07F  F079         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3157   005B72  0E82               	movlw	low sprintf@ap
  3158   005B74  6F7A               	movwf	vfprintf@ap& (0+255),b
  3159   005B76  ECF7  F02C         	call	_vfprintf	;wreg free
  3160   005B7A  0100               	movlb	0	; () banked
  3161   005B7C  517D               	movf	sprintf@s& (0+255),w,b
  3162   005B7E  2586               	addwf	(sprintf@f+3)& (0+255),w,b
  3163   005B80  6ED9               	movwf	fsr2l,c
  3164   005B82  6ADA               	clrf	fsr2h,c
  3165   005B84  6ADF               	clrf	indf2,c
  3166   005B86                     
  3167                           ; BSR set to: 0
  3168   005B86  0012               	return		;funcret
  3169   005B88                     __end_of_sprintf:
  3170                           	callstack 0
  3171                           
  3172 ;; *************** function _vfprintf *****************
  3173 ;; Defined at:
  3174 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  fp              1   23[BANK0 ] PTR struct _IO_FILE
  3177 ;;		 -> sprintf@f(12), 
  3178 ;;  fmt             2   24[BANK0 ] PTR const unsigned char 
  3179 ;;		 -> STR_12(3), STR_10(3), STR_5(3), STR_4(3), 
  3180 ;;		 -> STR_3(3), STR_2(3), 
  3181 ;;  ap              1   26[BANK0 ] PTR PTR void 
  3182 ;;		 -> sprintf@ap(1), 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  cfmt            2   27[BANK0 ] PTR unsigned char 
  3185 ;;		 -> STR_12(3), STR_10(3), STR_5(3), STR_4(3), 
  3186 ;;		 -> STR_3(3), STR_2(3), 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  2   23[BANK0 ] int 
  3189 ;; Registers used:
  3190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3196 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3199 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3200 ;;Total ram usage:        6 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 10
  3203 ;; This function calls:
  3204 ;;		_vfpfcnvrt
  3205 ;; This function is called by:
  3206 ;;		_sprintf
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text11
  3211   0059EE                     __ptext11:
  3212                           	callstack 0
  3213   0059EE                     _vfprintf:
  3214                           	callstack 18
  3215   0059EE                     
  3216                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3217   0059EE  C078  F07B         	movff	vfprintf@fmt,vfprintf@cfmt
  3218   0059F2  C079  F07C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3221   0059F6  EF06  F02D         	goto	l2472
  3222   0059FA                     l2470:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3225   0059FA  C077  F06A         	movff	vfprintf@fp,vfpfcnvrt@fp
  3226   0059FE  0E7B               	movlw	low vfprintf@cfmt
  3227   005A00  0100               	movlb	0	; () banked
  3228   005A02  6F6B               	movwf	vfpfcnvrt@fmt& (0+255),b
  3229   005A04  C07A  F06C         	movff	vfprintf@ap,vfpfcnvrt@ap
  3230   005A08  ECC1  F024         	call	_vfpfcnvrt	;wreg free
  3231   005A0C                     l2472:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3234   005A0C  0060  F1EF  FFF6   	movff	vfprintf@cfmt,tblptrl
  3235   005A12  0060  F1F3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3236   005A18                     	if	0	;tblptru may be non-zero
  3237   005A18                     	endif
  3238   005A18                     	if	0	;tblptru may be non-zero
  3239   005A18                     	endif
  3240   005A18  0008               	tblrd		*
  3241   005A1A  50F5               	movf	tablat,w,c
  3242   005A1C  0900               	iorlw	0
  3243   005A1E  A4D8               	btfss	status,2,c
  3244   005A20  EF14  F02D         	goto	u2131
  3245   005A24  EF16  F02D         	goto	u2130
  3246   005A28                     u2131:
  3247   005A28  EFFD  F02C         	goto	l2470
  3248   005A2C                     u2130:
  3249   005A2C                     
  3250                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3251   005A2C  0E00               	movlw	0
  3252   005A2E  0100               	movlb	0	; () banked
  3253   005A30  6F78               	movwf	(?_vfprintf+1)& (0+255),b
  3254   005A32  0E00               	movlw	0
  3255   005A34  6F77               	movwf	?_vfprintf& (0+255),b
  3256   005A36                     
  3257                           ; BSR set to: 0
  3258   005A36  0012               	return		;funcret
  3259   005A38                     __end_of_vfprintf:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _vfpfcnvrt *****************
  3263 ;; Defined at:
  3264 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  3267 ;;		 -> sprintf@f(12), 
  3268 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  3269 ;;		 -> vfprintf@cfmt(2), 
  3270 ;;  ap              1   12[BANK0 ] PTR PTR void 
  3271 ;;		 -> sprintf@ap(1), 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  convarg         4   18[BANK0 ] struct .
  3274 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  3275 ;;		 -> STR_12(3), STR_10(3), STR_5(3), STR_4(3), 
  3276 ;;		 -> STR_3(3), STR_2(3), 
  3277 ;;  c               1   22[BANK0 ] unsigned char 
  3278 ;;  done            1   15[BANK0 ] _Bool 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      void 
  3281 ;; Registers used:
  3282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3288 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3289 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3291 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3292 ;;Total ram usage:       13 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 9
  3295 ;; This function calls:
  3296 ;;		___awdiv
  3297 ;;		___awmod
  3298 ;;		_abs
  3299 ;;		_fputc
  3300 ;; This function is called by:
  3301 ;;		_vfprintf
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text12
  3306   004982                     __ptext12:
  3307                           	callstack 0
  3308   004982                     _vfpfcnvrt:
  3309                           	callstack 18
  3310   004982                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3312   004982  0100               	movlb	0	; () banked
  3313   004984  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3314   004986  6ED9               	movwf	fsr2l,c
  3315   004988  6ADA               	clrf	fsr2h,c
  3316   00498A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3317   004990  006F FF77 FFF7     	movff	postdec2,tblptrh
  3318   004996                     	if	0	;tblptru may be non-zero
  3319   004996                     	endif
  3320   004996                     	if	0	;tblptru may be non-zero
  3321   004996                     	endif
  3322   004996  0008               	tblrd		*
  3323   004998  50F5               	movf	tablat,w,c
  3324   00499A  0A25               	xorlw	37
  3325   00499C  A4D8               	btfss	status,2,c
  3326   00499E  EFD3  F024         	goto	u1901
  3327   0049A2  EFD5  F024         	goto	u1900
  3328   0049A6                     u1901:
  3329   0049A6  EFAA  F025         	goto	l2380
  3330   0049AA                     u1900:
  3331   0049AA                     
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3334   0049AA  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3335   0049AC  6ED9               	movwf	fsr2l,c
  3336   0049AE  6ADA               	clrf	fsr2h,c
  3337   0049B0  2ADE               	incf	postinc2,f,c
  3338   0049B2  0E00               	movlw	0
  3339   0049B4  22DD               	addwfc	postdec2,f,c
  3340   0049B6                     
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3343   0049B6  0E00               	movlw	0
  3344   0049B8  6FD4               	movwf	(_width+1)& (0+255),b
  3345   0049BA  0E00               	movlw	0
  3346   0049BC  6FD3               	movwf	_width& (0+255),b
  3347   0049BE  C0D3  F0D9         	movff	_width,_flags
  3348   0049C2                     
  3349                           ; BSR set to: 0
  3350                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3351   0049C2  69D5               	setf	_prec& (0+255),b
  3352   0049C4  69D6               	setf	(_prec+1)& (0+255),b
  3353   0049C6                     
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3356   0049C6  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3357   0049C8  6ED9               	movwf	fsr2l,c
  3358   0049CA  6ADA               	clrf	fsr2h,c
  3359   0049CC  006F FF78  F070    	movff	postinc2,vfpfcnvrt@cp
  3360   0049D2  006F FF74  F071    	movff	postdec2,vfpfcnvrt@cp+1
  3361   0049D8                     
  3362                           ; BSR set to: 0
  3363                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3364   0049D8  0060  F1C3  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3365   0049DE  0060  F1C7  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  3366   0049E4                     	if	0	;tblptru may be non-zero
  3367   0049E4                     	endif
  3368   0049E4                     	if	0	;tblptru may be non-zero
  3369   0049E4                     	endif
  3370   0049E4  0008               	tblrd		*
  3371   0049E6  50F5               	movf	tablat,w,c
  3372   0049E8  0A64               	xorlw	100
  3373   0049EA  B4D8               	btfsc	status,2,c
  3374   0049EC  EFFA  F024         	goto	u1911
  3375   0049F0  EFFC  F024         	goto	u1910
  3376   0049F4                     u1911:
  3377   0049F4  EF0C  F025         	goto	l2350
  3378   0049F8                     u1910:
  3379   0049F8                     
  3380                           ; BSR set to: 0
  3381   0049F8  0060  F1C3  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3382   0049FE  0060  F1C7  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  3383   004A04                     	if	0	;tblptru may be non-zero
  3384   004A04                     	endif
  3385   004A04                     	if	0	;tblptru may be non-zero
  3386   004A04                     	endif
  3387   004A04  0008               	tblrd		*
  3388   004A06  50F5               	movf	tablat,w,c
  3389   004A08  0A69               	xorlw	105
  3390   004A0A  A4D8               	btfss	status,2,c
  3391   004A0C  EF0A  F025         	goto	u1921
  3392   004A10  EF0C  F025         	goto	u1920
  3393   004A14                     u1921:
  3394   004A14  EFA1  F025         	goto	l2376
  3395   004A18                     u1920:
  3396   004A18                     l2350:
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3400   004A18  516C               	movf	vfpfcnvrt@ap& (0+255),w,b
  3401   004A1A  6ED9               	movwf	fsr2l,c
  3402   004A1C  6ADA               	clrf	fsr2h,c
  3403   004A1E  0E02               	movlw	2
  3404   004A20  26DF               	addwf	indf2,f,c
  3405   004A22  5CDF               	subwf	indf2,w,c
  3406   004A24  6ED9               	movwf	fsr2l,c
  3407   004A26  6ADA               	clrf	fsr2h,c
  3408   004A28  006F FF78  F072    	movff	postinc2,vfpfcnvrt@convarg
  3409   004A2E  006F FF78  F073    	movff	postinc2,vfpfcnvrt@convarg+1
  3410   004A34                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3413   004A34  0E01               	movlw	1
  3414   004A36  2570               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3415   004A38  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  3416   004A3A  0E00               	movlw	0
  3417   004A3C  2171               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3418   004A3E  6F6E               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3419   004A40  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3420   004A42  6ED9               	movwf	fsr2l,c
  3421   004A44  6ADA               	clrf	fsr2h,c
  3422   004A46  0060  F1B7  FFDE   	movff	??_vfpfcnvrt,postinc2
  3423   004A4C  0060  F1BB  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  3424   004A52                     
  3425                           ; BSR set to: 0
  3426                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3427   004A52  0E20               	movlw	32
  3428   004A54  6F76               	movwf	vfpfcnvrt@c& (0+255),b
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3431   004A56  BF73               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3432   004A58  EF30  F025         	goto	u1931
  3433   004A5C  EF33  F025         	goto	u1930
  3434   004A60                     u1931:
  3435   004A60  0E01               	movlw	1
  3436   004A62  EF34  F025         	goto	u1940
  3437   004A66                     u1930:
  3438   004A66  0E00               	movlw	0
  3439   004A68                     u1940:
  3440   004A68  6F6F               	movwf	vfpfcnvrt@done& (0+255),b
  3441   004A6A                     l2356:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3445   004A6A  0776               	decf	vfpfcnvrt@c& (0+255),f,b
  3446   004A6C  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  3447   004A6E  0FB3               	addlw	low _dbuf
  3448   004A70  6ED9               	movwf	fsr2l,c
  3449   004A72  6ADA               	clrf	fsr2h,c
  3450   004A74  C072  F060         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3451   004A78  C073  F061         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3452   004A7C  0E00               	movlw	0
  3453   004A7E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  3454   004A80  0E0A               	movlw	10
  3455   004A82  6F62               	movwf	___awmod@divisor& (0+255),b
  3456   004A84  ECDB  F02A         	call	___awmod	;wreg free
  3457   004A88  C060  F066         	movff	?___awmod,abs@a
  3458   004A8C  C061  F067         	movff	?___awmod+1,abs@a+1
  3459   004A90  ECE0  F02D         	call	_abs	;wreg free
  3460   004A94  0100               	movlb	0	; () banked
  3461   004A96  5166               	movf	?_abs& (0+255),w,b
  3462   004A98  0F30               	addlw	48
  3463   004A9A  6EDF               	movwf	indf2,c
  3464   004A9C                     
  3465                           ; BSR set to: 0
  3466                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3467   004A9C  C072  F060         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3468   004AA0  C073  F061         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3469   004AA4  0E00               	movlw	0
  3470   004AA6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  3471   004AA8  0E0A               	movlw	10
  3472   004AAA  6F62               	movwf	___awdiv@divisor& (0+255),b
  3473   004AAC  EC16  F02A         	call	___awdiv	;wreg free
  3474   004AB0  C060  F072         	movff	?___awdiv,vfpfcnvrt@convarg
  3475   004AB4  C061  F073         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3476   004AB8                     
  3477                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3478   004AB8  0100               	movlb	0	; () banked
  3479   004ABA  5172               	movf	vfpfcnvrt@convarg& (0+255),w,b
  3480   004ABC  1173               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  3481   004ABE  B4D8               	btfsc	status,2,c
  3482   004AC0  EF64  F025         	goto	u1951
  3483   004AC4  EF66  F025         	goto	u1950
  3484   004AC8                     u1951:
  3485   004AC8  EF6E  F025         	goto	l2364
  3486   004ACC                     u1950:
  3487   004ACC                     
  3488                           ; BSR set to: 0
  3489   004ACC  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  3490   004ACE  A4D8               	btfss	status,2,c
  3491   004AD0  EF6C  F025         	goto	u1961
  3492   004AD4  EF6E  F025         	goto	u1960
  3493   004AD8                     u1961:
  3494   004AD8  EF35  F025         	goto	l2356
  3495   004ADC                     u1960:
  3496   004ADC                     l2364:
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3500   004ADC  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  3501   004ADE  B4D8               	btfsc	status,2,c
  3502   004AE0  EF74  F025         	goto	u1971
  3503   004AE4  EF76  F025         	goto	u1970
  3504   004AE8                     u1971:
  3505   004AE8  EF96  F025         	goto	l2374
  3506   004AEC                     u1970:
  3507   004AEC                     
  3508                           ; BSR set to: 0
  3509   004AEC  516F               	movf	vfpfcnvrt@done& (0+255),w,b
  3510   004AEE  B4D8               	btfsc	status,2,c
  3511   004AF0  EF7C  F025         	goto	u1981
  3512   004AF4  EF7E  F025         	goto	u1980
  3513   004AF8                     u1981:
  3514   004AF8  EF96  F025         	goto	l2374
  3515   004AFC                     u1980:
  3516   004AFC                     
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3519   004AFC  0776               	decf	vfpfcnvrt@c& (0+255),f,b
  3520   004AFE  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  3521   004B00  0FB3               	addlw	low _dbuf
  3522   004B02  6ED9               	movwf	fsr2l,c
  3523   004B04  6ADA               	clrf	fsr2h,c
  3524   004B06  0E2D               	movlw	45
  3525   004B08  6EDF               	movwf	indf2,c
  3526   004B0A  EF96  F025         	goto	l2374
  3527   004B0E                     l2370:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3531   004B0E  5176               	movf	vfpfcnvrt@c& (0+255),w,b
  3532   004B10  0FB3               	addlw	low _dbuf
  3533   004B12  6ED9               	movwf	fsr2l,c
  3534   004B14  6ADA               	clrf	fsr2h,c
  3535   004B16  50DF               	movf	indf2,w,c
  3536   004B18  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  3537   004B1A  516D               	movf	??_vfpfcnvrt& (0+255),w,b
  3538   004B1C  6F60               	movwf	fputc@c& (0+255),b
  3539   004B1E  6B61               	clrf	(fputc@c+1)& (0+255),b
  3540   004B20  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  3541   004B24  EC8C  F02B         	call	_fputc	;wreg free
  3542   004B28  0100               	movlb	0	; () banked
  3543   004B2A  2B76               	incf	vfpfcnvrt@c& (0+255),f,b
  3544   004B2C                     l2374:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3548   004B2C  0E20               	movlw	32
  3549   004B2E  1976               	xorwf	vfpfcnvrt@c& (0+255),w,b
  3550   004B30  A4D8               	btfss	status,2,c
  3551   004B32  EF9D  F025         	goto	u1991
  3552   004B36  EF9F  F025         	goto	u1990
  3553   004B3A                     u1991:
  3554   004B3A  EF87  F025         	goto	l2370
  3555   004B3E                     u1990:
  3556   004B3E  EFBD  F025         	goto	l1060
  3557   004B42                     l2376:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3560   004B42  0100               	movlb	0	; () banked
  3561   004B44  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3562   004B46  6ED9               	movwf	fsr2l,c
  3563   004B48  6ADA               	clrf	fsr2h,c
  3564   004B4A  2ADE               	incf	postinc2,f,c
  3565   004B4C  0E00               	movlw	0
  3566   004B4E  22DD               	addwfc	postdec2,f,c
  3567   004B50  EFBD  F025         	goto	l1060
  3568   004B54                     l2380:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3572   004B54  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3573   004B56  6ED9               	movwf	fsr2l,c
  3574   004B58  6ADA               	clrf	fsr2h,c
  3575   004B5A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3576   004B60  006F FF77 FFF7     	movff	postdec2,tblptrh
  3577   004B66                     	if	0	;tblptru may be non-zero
  3578   004B66                     	endif
  3579   004B66                     	if	0	;tblptru may be non-zero
  3580   004B66                     	endif
  3581   004B66  0008               	tblrd		*
  3582   004B68  50F5               	movf	tablat,w,c
  3583   004B6A  6F60               	movwf	fputc@c& (0+255),b
  3584   004B6C  6B61               	clrf	(fputc@c+1)& (0+255),b
  3585   004B6E  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  3586   004B72  EC8C  F02B         	call	_fputc	;wreg free
  3587   004B76  EFA1  F025         	goto	l2376
  3588   004B7A                     l1060:
  3589                           
  3590                           ; BSR set to: 0
  3591   004B7A  0012               	return		;funcret
  3592   004B7C                     __end_of_vfpfcnvrt:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _fputc *****************
  3596 ;; Defined at:
  3597 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  c               2    0[BANK0 ] int 
  3600 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  3601 ;;		 -> sprintf@f(12), 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  2    0[BANK0 ] int 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3613 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3617 ;;Total ram usage:        8 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 8
  3620 ;; This function calls:
  3621 ;;		_putch
  3622 ;; This function is called by:
  3623 ;;		_vfpfcnvrt
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text13
  3628   005718                     __ptext13:
  3629                           	callstack 0
  3630   005718                     _fputc:
  3631                           	callstack 18
  3632   005718  0100               	movlb	0	; () banked
  3633   00571A  5162               	movf	fputc@fp& (0+255),w,b
  3634   00571C  B4D8               	btfsc	status,2,c
  3635   00571E  EF93  F02B         	goto	u1661
  3636   005722  EF95  F02B         	goto	u1660
  3637   005726                     u1661:
  3638   005726  EF9D  F02B         	goto	l2196
  3639   00572A                     u1660:
  3640   00572A                     
  3641                           ; BSR set to: 0
  3642   00572A  5162               	movf	fputc@fp& (0+255),w,b
  3643   00572C  A4D8               	btfss	status,2,c
  3644   00572E  EF9B  F02B         	goto	u1671
  3645   005732  EF9D  F02B         	goto	u1670
  3646   005736                     u1671:
  3647   005736  EFA2  F02B         	goto	l2198
  3648   00573A                     u1670:
  3649   00573A                     l2196:
  3650                           
  3651                           ; BSR set to: 0
  3652   00573A  5160               	movf	fputc@c& (0+255),w,b
  3653   00573C  EC50  F02F         	call	_putch
  3654   005740  EFE2  F02B         	goto	l1085
  3655   005744                     l2198:
  3656                           
  3657                           ; BSR set to: 0
  3658   005744  5162               	movf	fputc@fp& (0+255),w,b
  3659   005746  6ED9               	movwf	fsr2l,c
  3660   005748  6ADA               	clrf	fsr2h,c
  3661   00574A  0E0A               	movlw	10
  3662   00574C  26D9               	addwf	fsr2l,f,c
  3663   00574E  50DE               	movf	postinc2,w,c
  3664   005750  10DE               	iorwf	postinc2,w,c
  3665   005752  B4D8               	btfsc	status,2,c
  3666   005754  EFAE  F02B         	goto	u1681
  3667   005758  EFB0  F02B         	goto	u1680
  3668   00575C                     u1681:
  3669   00575C  EFC9  F02B         	goto	l2202
  3670   005760                     u1680:
  3671   005760                     
  3672                           ; BSR set to: 0
  3673   005760  5162               	movf	fputc@fp& (0+255),w,b
  3674   005762  6ED9               	movwf	fsr2l,c
  3675   005764  6ADA               	clrf	fsr2h,c
  3676   005766  0E0A               	movlw	10
  3677   005768  26D9               	addwf	fsr2l,f,c
  3678   00576A  5162               	movf	fputc@fp& (0+255),w,b
  3679   00576C  6EE1               	movwf	fsr1l,c
  3680   00576E  6AE2               	clrf	fsr1h,c
  3681   005770  0E03               	movlw	3
  3682   005772  26E1               	addwf	fsr1l,f,c
  3683   005774  50DE               	movf	postinc2,w,c
  3684   005776  5CE6               	subwf	postinc1,w,c
  3685   005778  50E6               	movf	postinc1,w,c
  3686   00577A  0A80               	xorlw	128
  3687   00577C  6F67               	movwf	(??_fputc+4)& (0+255),b
  3688   00577E  50DE               	movf	postinc2,w,c
  3689   005780  0A80               	xorlw	128
  3690   005782  5967               	subwfb	(??_fputc+4)& (0+255),w,b
  3691   005784  B0D8               	btfsc	status,0,c
  3692   005786  EFC7  F02B         	goto	u1691
  3693   00578A  EFC9  F02B         	goto	u1690
  3694   00578E                     u1691:
  3695   00578E  EFE2  F02B         	goto	l1085
  3696   005792                     u1690:
  3697   005792                     l2202:
  3698                           
  3699                           ; BSR set to: 0
  3700   005792  5162               	movf	fputc@fp& (0+255),w,b
  3701   005794  6ED9               	movwf	fsr2l,c
  3702   005796  6ADA               	clrf	fsr2h,c
  3703   005798  0E03               	movlw	3
  3704   00579A  26D9               	addwf	fsr2l,f,c
  3705   00579C  50DF               	movf	indf2,w,c
  3706   00579E  6F63               	movwf	??_fputc& (0+255),b
  3707   0057A0  5162               	movf	fputc@fp& (0+255),w,b
  3708   0057A2  6ED9               	movwf	fsr2l,c
  3709   0057A4  6ADA               	clrf	fsr2h,c
  3710   0057A6  50DF               	movf	indf2,w,c
  3711   0057A8  2563               	addwf	??_fputc& (0+255),w,b
  3712   0057AA  6ED9               	movwf	fsr2l,c
  3713   0057AC  6ADA               	clrf	fsr2h,c
  3714   0057AE  0060  F183  FFDF   	movff	fputc@c,indf2
  3715   0057B4  5162               	movf	fputc@fp& (0+255),w,b
  3716   0057B6  6ED9               	movwf	fsr2l,c
  3717   0057B8  6ADA               	clrf	fsr2h,c
  3718   0057BA  0E03               	movlw	3
  3719   0057BC  26D9               	addwf	fsr2l,f,c
  3720   0057BE  2ADE               	incf	postinc2,f,c
  3721   0057C0  0E00               	movlw	0
  3722   0057C2  22DD               	addwfc	postdec2,f,c
  3723   0057C4                     l1085:
  3724   0057C4  0012               	return		;funcret
  3725   0057C6                     __end_of_fputc:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _putch *****************
  3729 ;; Defined at:
  3730 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  c               1    wreg     unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  c               1    0[COMRAM] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 7
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_fputc
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text14
  3759   005EA0                     __ptext14:
  3760                           	callstack 0
  3761   005EA0                     _putch:
  3762                           	callstack 18
  3763   005EA0  0012               	return		;funcret
  3764   005EA2                     __end_of_putch:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _abs *****************
  3768 ;; Defined at:
  3769 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  a               2    6[BANK0 ] int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2    6[BANK0 ] int 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3783 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3785 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3786 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3787 ;;Total ram usage:        4 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 7
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_vfpfcnvrt
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text15
  3798   005BC0                     __ptext15:
  3799                           	callstack 0
  3800   005BC0                     _abs:
  3801                           	callstack 19
  3802   005BC0  0100               	movlb	0	; () banked
  3803   005BC2  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  3804   005BC4  EFE6  F02D         	goto	u1701
  3805   005BC8  EFE8  F02D         	goto	u1700
  3806   005BCC                     u1701:
  3807   005BCC  EFEE  F02D         	goto	l1070
  3808   005BD0                     u1700:
  3809   005BD0                     
  3810                           ; BSR set to: 0
  3811   005BD0  C066  F066         	movff	abs@a,?_abs
  3812   005BD4  C067  F067         	movff	abs@a+1,?_abs+1
  3813   005BD8  EFFA  F02D         	goto	l1073
  3814   005BDC                     l1070:
  3815                           
  3816                           ; BSR set to: 0
  3817   005BDC  C066  F068         	movff	abs@a,??_abs
  3818   005BE0  C067  F069         	movff	abs@a+1,??_abs+1
  3819   005BE4  1F68               	comf	??_abs& (0+255),f,b
  3820   005BE6  1F69               	comf	(??_abs+1)& (0+255),f,b
  3821   005BE8  4B68               	infsnz	??_abs& (0+255),f,b
  3822   005BEA  2B69               	incf	(??_abs+1)& (0+255),f,b
  3823   005BEC  C068  F066         	movff	??_abs,?_abs
  3824   005BF0  C069  F067         	movff	??_abs+1,?_abs+1
  3825   005BF4                     l1073:
  3826                           
  3827                           ; BSR set to: 0
  3828   005BF4  0012               	return		;funcret
  3829   005BF6                     __end_of_abs:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function ___awmod *****************
  3833 ;; Defined at:
  3834 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  dividend        2    0[BANK0 ] int 
  3837 ;;  divisor         2    2[BANK0 ] int 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  sign            1    5[BANK0 ] unsigned char 
  3840 ;;  counter         1    4[BANK0 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  2    0[BANK0 ] int 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3853 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3854 ;;Total ram usage:        6 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 7
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_vfpfcnvrt
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text16
  3865   0055B6                     __ptext16:
  3866                           	callstack 0
  3867   0055B6                     ___awmod:
  3868                           	callstack 19
  3869   0055B6  0E00               	movlw	0
  3870   0055B8  0100               	movlb	0	; () banked
  3871   0055BA  6F65               	movwf	___awmod@sign& (0+255),b
  3872   0055BC                     
  3873                           ; BSR set to: 0
  3874   0055BC  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  3875   0055BE  EFE5  F02A         	goto	u1600
  3876   0055C2  EFE3  F02A         	goto	u1601
  3877   0055C6                     u1601:
  3878   0055C6  EFEB  F02A         	goto	l2164
  3879   0055CA                     u1600:
  3880   0055CA                     
  3881                           ; BSR set to: 0
  3882   0055CA  6D60               	negf	___awmod@dividend& (0+255),b
  3883   0055CC  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3884   0055CE  B0D8               	btfsc	status,0,c
  3885   0055D0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3886   0055D2                     
  3887                           ; BSR set to: 0
  3888   0055D2  0E01               	movlw	1
  3889   0055D4  6F65               	movwf	___awmod@sign& (0+255),b
  3890   0055D6                     l2164:
  3891                           
  3892                           ; BSR set to: 0
  3893   0055D6  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  3894   0055D8  EFF2  F02A         	goto	u1610
  3895   0055DC  EFF0  F02A         	goto	u1611
  3896   0055E0                     u1611:
  3897   0055E0  EFF6  F02A         	goto	l2168
  3898   0055E4                     u1610:
  3899   0055E4                     
  3900                           ; BSR set to: 0
  3901   0055E4  6D62               	negf	___awmod@divisor& (0+255),b
  3902   0055E6  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  3903   0055E8  B0D8               	btfsc	status,0,c
  3904   0055EA  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  3905   0055EC                     l2168:
  3906                           
  3907                           ; BSR set to: 0
  3908   0055EC  5162               	movf	___awmod@divisor& (0+255),w,b
  3909   0055EE  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3910   0055F0  B4D8               	btfsc	status,2,c
  3911   0055F2  EFFD  F02A         	goto	u1621
  3912   0055F6  EFFF  F02A         	goto	u1620
  3913   0055FA                     u1621:
  3914   0055FA  EF23  F02B         	goto	l2184
  3915   0055FE                     u1620:
  3916   0055FE                     
  3917                           ; BSR set to: 0
  3918   0055FE  0E01               	movlw	1
  3919   005600  6F64               	movwf	___awmod@counter& (0+255),b
  3920   005602  EF07  F02B         	goto	l2174
  3921   005606                     l2172:
  3922                           
  3923                           ; BSR set to: 0
  3924   005606  90D8               	bcf	status,0,c
  3925   005608  3762               	rlcf	___awmod@divisor& (0+255),f,b
  3926   00560A  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3927   00560C  2B64               	incf	___awmod@counter& (0+255),f,b
  3928   00560E                     l2174:
  3929                           
  3930                           ; BSR set to: 0
  3931   00560E  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3932   005610  EF0C  F02B         	goto	u1631
  3933   005614  EF0E  F02B         	goto	u1630
  3934   005618                     u1631:
  3935   005618  EF03  F02B         	goto	l2172
  3936   00561C                     u1630:
  3937   00561C                     l2176:
  3938                           
  3939                           ; BSR set to: 0
  3940   00561C  5162               	movf	___awmod@divisor& (0+255),w,b
  3941   00561E  5D60               	subwf	___awmod@dividend& (0+255),w,b
  3942   005620  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3943   005622  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3944   005624  A0D8               	btfss	status,0,c
  3945   005626  EF17  F02B         	goto	u1641
  3946   00562A  EF19  F02B         	goto	u1640
  3947   00562E                     u1641:
  3948   00562E  EF1D  F02B         	goto	l2180
  3949   005632                     u1640:
  3950   005632                     
  3951                           ; BSR set to: 0
  3952   005632  5162               	movf	___awmod@divisor& (0+255),w,b
  3953   005634  5F60               	subwf	___awmod@dividend& (0+255),f,b
  3954   005636  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  3955   005638  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3956   00563A                     l2180:
  3957                           
  3958                           ; BSR set to: 0
  3959   00563A  90D8               	bcf	status,0,c
  3960   00563C  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3961   00563E  3362               	rrcf	___awmod@divisor& (0+255),f,b
  3962   005640                     
  3963                           ; BSR set to: 0
  3964   005640  2F64               	decfsz	___awmod@counter& (0+255),f,b
  3965   005642  EF0E  F02B         	goto	l2176
  3966   005646                     l2184:
  3967                           
  3968                           ; BSR set to: 0
  3969   005646  5165               	movf	___awmod@sign& (0+255),w,b
  3970   005648  B4D8               	btfsc	status,2,c
  3971   00564A  EF29  F02B         	goto	u1651
  3972   00564E  EF2B  F02B         	goto	u1650
  3973   005652                     u1651:
  3974   005652  EF2F  F02B         	goto	l2188
  3975   005656                     u1650:
  3976   005656                     
  3977                           ; BSR set to: 0
  3978   005656  6D60               	negf	___awmod@dividend& (0+255),b
  3979   005658  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  3980   00565A  B0D8               	btfsc	status,0,c
  3981   00565C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  3982   00565E                     l2188:
  3983                           
  3984                           ; BSR set to: 0
  3985   00565E  C060  F060         	movff	___awmod@dividend,?___awmod
  3986   005662  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  3987   005666                     
  3988                           ; BSR set to: 0
  3989   005666  0012               	return		;funcret
  3990   005668                     __end_of___awmod:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function ___awdiv *****************
  3994 ;; Defined at:
  3995 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  dividend        2    0[BANK0 ] int 
  3998 ;;  divisor         2    2[BANK0 ] int 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  quotient        2    6[BANK0 ] int 
  4001 ;;  sign            1    5[BANK0 ] unsigned char 
  4002 ;;  counter         1    4[BANK0 ] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  2    0[BANK0 ] int 
  4005 ;; Registers used:
  4006 ;;		wreg, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4012 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4013 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4015 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4016 ;;Total ram usage:        8 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 7
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_vfpfcnvrt
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text17
  4027   00542C                     __ptext17:
  4028                           	callstack 0
  4029   00542C                     ___awdiv:
  4030                           	callstack 19
  4031   00542C  0E00               	movlw	0
  4032   00542E  0100               	movlb	0	; () banked
  4033   005430  6F65               	movwf	___awdiv@sign& (0+255),b
  4034   005432                     
  4035                           ; BSR set to: 0
  4036   005432  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  4037   005434  EF20  F02A         	goto	u1540
  4038   005438  EF1E  F02A         	goto	u1541
  4039   00543C                     u1541:
  4040   00543C  EF26  F02A         	goto	l2120
  4041   005440                     u1540:
  4042   005440                     
  4043                           ; BSR set to: 0
  4044   005440  6D62               	negf	___awdiv@divisor& (0+255),b
  4045   005442  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  4046   005444  B0D8               	btfsc	status,0,c
  4047   005446  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  4048   005448                     
  4049                           ; BSR set to: 0
  4050   005448  0E01               	movlw	1
  4051   00544A  6F65               	movwf	___awdiv@sign& (0+255),b
  4052   00544C                     l2120:
  4053                           
  4054                           ; BSR set to: 0
  4055   00544C  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  4056   00544E  EF2D  F02A         	goto	u1550
  4057   005452  EF2B  F02A         	goto	u1551
  4058   005456                     u1551:
  4059   005456  EF33  F02A         	goto	l2126
  4060   00545A                     u1550:
  4061   00545A                     
  4062                           ; BSR set to: 0
  4063   00545A  6D60               	negf	___awdiv@dividend& (0+255),b
  4064   00545C  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  4065   00545E  B0D8               	btfsc	status,0,c
  4066   005460  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  4067   005462                     
  4068                           ; BSR set to: 0
  4069   005462  0E01               	movlw	1
  4070   005464  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  4071   005466                     l2126:
  4072                           
  4073                           ; BSR set to: 0
  4074   005466  0E00               	movlw	0
  4075   005468  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  4076   00546A  0E00               	movlw	0
  4077   00546C  6F66               	movwf	___awdiv@quotient& (0+255),b
  4078   00546E                     
  4079                           ; BSR set to: 0
  4080   00546E  5162               	movf	___awdiv@divisor& (0+255),w,b
  4081   005470  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  4082   005472  B4D8               	btfsc	status,2,c
  4083   005474  EF3E  F02A         	goto	u1561
  4084   005478  EF40  F02A         	goto	u1560
  4085   00547C                     u1561:
  4086   00547C  EF68  F02A         	goto	l2148
  4087   005480                     u1560:
  4088   005480                     
  4089                           ; BSR set to: 0
  4090   005480  0E01               	movlw	1
  4091   005482  6F64               	movwf	___awdiv@counter& (0+255),b
  4092   005484  EF48  F02A         	goto	l2134
  4093   005488                     l2132:
  4094                           
  4095                           ; BSR set to: 0
  4096   005488  90D8               	bcf	status,0,c
  4097   00548A  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  4098   00548C  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  4099   00548E  2B64               	incf	___awdiv@counter& (0+255),f,b
  4100   005490                     l2134:
  4101                           
  4102                           ; BSR set to: 0
  4103   005490  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  4104   005492  EF4D  F02A         	goto	u1571
  4105   005496  EF4F  F02A         	goto	u1570
  4106   00549A                     u1571:
  4107   00549A  EF44  F02A         	goto	l2132
  4108   00549E                     u1570:
  4109   00549E                     l2136:
  4110                           
  4111                           ; BSR set to: 0
  4112   00549E  90D8               	bcf	status,0,c
  4113   0054A0  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  4114   0054A2  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  4115   0054A4                     
  4116                           ; BSR set to: 0
  4117   0054A4  5162               	movf	___awdiv@divisor& (0+255),w,b
  4118   0054A6  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  4119   0054A8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4120   0054AA  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  4121   0054AC  A0D8               	btfss	status,0,c
  4122   0054AE  EF5B  F02A         	goto	u1581
  4123   0054B2  EF5D  F02A         	goto	u1580
  4124   0054B6                     u1581:
  4125   0054B6  EF62  F02A         	goto	l2144
  4126   0054BA                     u1580:
  4127   0054BA                     
  4128                           ; BSR set to: 0
  4129   0054BA  5162               	movf	___awdiv@divisor& (0+255),w,b
  4130   0054BC  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  4131   0054BE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  4132   0054C0  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  4133   0054C2                     
  4134                           ; BSR set to: 0
  4135   0054C2  8166               	bsf	___awdiv@quotient& (0+255),0,b
  4136   0054C4                     l2144:
  4137                           
  4138                           ; BSR set to: 0
  4139   0054C4  90D8               	bcf	status,0,c
  4140   0054C6  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  4141   0054C8  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  4142   0054CA                     
  4143                           ; BSR set to: 0
  4144   0054CA  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  4145   0054CC  EF4F  F02A         	goto	l2136
  4146   0054D0                     l2148:
  4147                           
  4148                           ; BSR set to: 0
  4149   0054D0  5165               	movf	___awdiv@sign& (0+255),w,b
  4150   0054D2  B4D8               	btfsc	status,2,c
  4151   0054D4  EF6E  F02A         	goto	u1591
  4152   0054D8  EF70  F02A         	goto	u1590
  4153   0054DC                     u1591:
  4154   0054DC  EF74  F02A         	goto	l2152
  4155   0054E0                     u1590:
  4156   0054E0                     
  4157                           ; BSR set to: 0
  4158   0054E0  6D66               	negf	___awdiv@quotient& (0+255),b
  4159   0054E2  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  4160   0054E4  B0D8               	btfsc	status,0,c
  4161   0054E6  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  4162   0054E8                     l2152:
  4163                           
  4164                           ; BSR set to: 0
  4165   0054E8  C066  F060         	movff	___awdiv@quotient,?___awdiv
  4166   0054EC  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  4167   0054F0                     
  4168                           ; BSR set to: 0
  4169   0054F0  0012               	return		;funcret
  4170   0054F2                     __end_of___awdiv:
  4171                           	callstack 0
  4172                           
  4173 ;; *************** function _PWM2_OutputStatusGet *****************
  4174 ;; Defined at:
  4175 ;;		line 255 in file "./servo.h"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;		None
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      _Bool 
  4182 ;; Registers used:
  4183 ;;		wreg
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4193 ;;Total ram usage:        0 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 7
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_openBox
  4200 ;;		_closeBox
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text18
  4205   005E5A                     __ptext18:
  4206                           	callstack 0
  4207   005E5A                     _PWM2_OutputStatusGet:
  4208                           	callstack 22
  4209   005E5A                     
  4210                           ;./servo.h: 258:     return(CCP2CONbits.OUT);
  4211   005E5A  BA7A               	btfsc	122,5,c	;volatile
  4212   005E5C  EF32  F02F         	goto	u2451
  4213   005E60  EF35  F02F         	goto	u2450
  4214   005E64                     u2451:
  4215   005E64  0E01               	movlw	1
  4216   005E66  EF36  F02F         	goto	u2456
  4217   005E6A                     u2450:
  4218   005E6A  0E00               	movlw	0
  4219   005E6C                     u2456:
  4220   005E6C  0012               	return		;funcret
  4221   005E6E                     __end_of_PWM2_OutputStatusGet:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _PWM2_LoadDutyValue *****************
  4225 ;; Defined at:
  4226 ;;		line 237 in file "./servo.h"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  dutyValue       2    0[BANK0 ] unsigned short 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4240 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4243 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4244 ;;Total ram usage:        2 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 7
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_openBox
  4251 ;;		_closeBox
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text19
  4256   005C60                     __ptext19:
  4257                           	callstack 0
  4258   005C60                     _PWM2_LoadDutyValue:
  4259                           	callstack 22
  4260   005C60                     
  4261                           ;./servo.h: 237: void PWM2_LoadDutyValue(uint16_t dutyValue);./servo.h: 238: {;./servo.h
      +                          : 239:     dutyValue &= 0x03FF;
  4262   005C60  0100               	movlb	0	; () banked
  4263   005C62  0EFF               	movlw	255
  4264   005C64  1760               	andwf	PWM2_LoadDutyValue@dutyValue& (0+255),f,b
  4265   005C66  0E03               	movlw	3
  4266   005C68  1761               	andwf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),f,b
  4267   005C6A                     
  4268                           ; BSR set to: 0
  4269                           ;./servo.h: 242:     if(CCP2CONbits.FMT)
  4270   005C6A  A87A               	btfss	122,4,c	;volatile
  4271   005C6C  EF3A  F02E         	goto	u2431
  4272   005C70  EF3C  F02E         	goto	u2430
  4273   005C74                     u2431:
  4274   005C74  EF43  F02E         	goto	l2572
  4275   005C78                     u2430:
  4276   005C78                     
  4277                           ; BSR set to: 0
  4278                           ;./servo.h: 243:     {;./servo.h: 244:         dutyValue <<= 6;
  4279   005C78  0E06               	movlw	6
  4280   005C7A                     u2445:
  4281   005C7A  90D8               	bcf	status,0,c
  4282   005C7C  3760               	rlcf	PWM2_LoadDutyValue@dutyValue& (0+255),f,b
  4283   005C7E  3761               	rlcf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),f,b
  4284   005C80  2EE8               	decfsz	wreg,f,c
  4285   005C82  EF3D  F02E         	goto	u2445
  4286   005C86                     l2572:
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;./servo.h: 245:         CCPR2H = dutyValue >> 8;
  4290   005C86  5161               	movf	(PWM2_LoadDutyValue@dutyValue+1)& (0+255),w,b
  4291   005C88  6E79               	movwf	121,c	;volatile
  4292   005C8A                     
  4293                           ; BSR set to: 0
  4294                           ;./servo.h: 246:         CCPR2L = dutyValue;
  4295   005C8A  0060  F183  FF78   	movff	PWM2_LoadDutyValue@dutyValue,16248	;volatile
  4296   005C90                     
  4297                           ; BSR set to: 0
  4298   005C90  0012               	return		;funcret
  4299   005C92                     __end_of_PWM2_LoadDutyValue:
  4300                           	callstack 0
  4301                           
  4302 ;; *************** function _LCD_String_xy *****************
  4303 ;; Defined at:
  4304 ;;		line 63 in file "./LCD.h"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  row             1    wreg     unsigned char 
  4307 ;;  pos             1    9[BANK0 ] unsigned char 
  4308 ;;  msg             2   10[BANK0 ] PTR const unsigned char 
  4309 ;;		 -> STR_28(2), STR_27(15), STR_26(13), STR_25(12), 
  4310 ;;		 -> STR_24(11), STR_23(9), STR_22(8), STR_21(12), 
  4311 ;;		 -> STR_20(17), STR_19(16), STR_18(17), STR_17(16), 
  4312 ;;		 -> STR_16(2), STR_15(17), STR_14(17), STR_13(16), 
  4313 ;;		 -> closeBox@d(10), STR_11(16), openBox@d(10), STR_9(16), 
  4314 ;;		 -> STR_8(17), STR_7(15), STR_6(14), getValue@data(10), 
  4315 ;;		 -> STR_1(5), 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  row             1   12[BANK0 ] unsigned char 
  4318 ;;  location        1   13[BANK0 ] unsigned char 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4328 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4331 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4332 ;;Total ram usage:        5 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 10
  4335 ;; This function calls:
  4336 ;;		_LCD_Command
  4337 ;;		_LCD_String
  4338 ;; This function is called by:
  4339 ;;		_getValue
  4340 ;;		_openBox
  4341 ;;		_closeBox
  4342 ;;		_main
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text20
  4347   005AC8                     __ptext20:
  4348                           	callstack 0
  4349   005AC8                     _LCD_String_xy:
  4350                           	callstack 19
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;incstack = 0
  4354                           ;LCD_String_xy@row stored from wreg
  4355   005AC8  0100               	movlb	0	; () banked
  4356   005ACA  6F6C               	movwf	LCD_String_xy@row& (0+255),b
  4357   005ACC                     
  4358                           ;./LCD.h: 66:     if(row<=1)
  4359   005ACC  0E02               	movlw	2
  4360   005ACE  0100               	movlb	0	; () banked
  4361   005AD0  616C               	cpfslt	LCD_String_xy@row& (0+255),b
  4362   005AD2  EF6D  F02D         	goto	u2181
  4363   005AD6  EF6F  F02D         	goto	u2180
  4364   005ADA                     u2181:
  4365   005ADA  EF78  F02D         	goto	l2518
  4366   005ADE                     u2180:
  4367   005ADE                     
  4368                           ; BSR set to: 0
  4369                           ;./LCD.h: 67:     {;./LCD.h: 68:         location=(0x80) | ((pos) & 0x0f);
  4370   005ADE  5169               	movf	LCD_String_xy@pos& (0+255),w,b
  4371   005AE0  0B0F               	andlw	15
  4372   005AE2  0980               	iorlw	128
  4373   005AE4  6F6D               	movwf	LCD_String_xy@location& (0+255),b
  4374   005AE6                     
  4375                           ; BSR set to: 0
  4376                           ;./LCD.h: 69:         LCD_Command(location);
  4377   005AE6  516D               	movf	LCD_String_xy@location& (0+255),w,b
  4378   005AE8  ECD7  F02E         	call	_LCD_Command
  4379                           
  4380                           ;./LCD.h: 70:     }
  4381   005AEC  EF7F  F02D         	goto	l2522
  4382   005AF0                     l2518:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;./LCD.h: 72:     {;./LCD.h: 73:         location=(0xC0) | ((pos) & 0x0f);
  4386   005AF0  5169               	movf	LCD_String_xy@pos& (0+255),w,b
  4387   005AF2  0B0F               	andlw	15
  4388   005AF4  09C0               	iorlw	192
  4389   005AF6  6F6D               	movwf	LCD_String_xy@location& (0+255),b
  4390   005AF8                     
  4391                           ; BSR set to: 0
  4392                           ;./LCD.h: 74:         LCD_Command(location);
  4393   005AF8  516D               	movf	LCD_String_xy@location& (0+255),w,b
  4394   005AFA  ECD7  F02E         	call	_LCD_Command
  4395   005AFE                     l2522:
  4396                           
  4397                           ;./LCD.h: 76:     LCD_String(msg);
  4398   005AFE  C06A  F067         	movff	LCD_String_xy@msg,LCD_String@msg
  4399   005B02  C06B  F068         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4400   005B06  EC39  F02C         	call	_LCD_String	;wreg free
  4401   005B0A  0012               	return		;funcret
  4402   005B0C                     __end_of_LCD_String_xy:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _LCD_String *****************
  4406 ;; Defined at:
  4407 ;;		line 54 in file "./LCD.h"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  msg             2    7[BANK0 ] PTR const unsigned char 
  4410 ;;		 -> STR_28(2), STR_27(15), STR_26(13), STR_25(12), 
  4411 ;;		 -> STR_24(11), STR_23(9), STR_22(8), STR_21(12), 
  4412 ;;		 -> STR_20(17), STR_19(16), STR_18(17), STR_17(16), 
  4413 ;;		 -> STR_16(2), STR_15(17), STR_14(17), STR_13(16), 
  4414 ;;		 -> closeBox@d(10), STR_11(16), openBox@d(10), STR_9(16), 
  4415 ;;		 -> STR_8(17), STR_7(15), STR_6(14), getValue@data(10), 
  4416 ;;		 -> STR_1(5), 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4428 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4431 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4432 ;;Total ram usage:        2 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 9
  4435 ;; This function calls:
  4436 ;;		_LCD_Char
  4437 ;; This function is called by:
  4438 ;;		_LCD_String_xy
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text21
  4443   005872                     __ptext21:
  4444                           	callstack 0
  4445   005872                     _LCD_String:
  4446                           	callstack 19
  4447   005872                     
  4448                           ;./LCD.h: 54: void LCD_String(const char *msg);./LCD.h: 55: {;./LCD.h: 56:     while((*m
      +                          sg)!='\0')
  4449   005872  EF55  F02C         	goto	l2466
  4450   005876                     l2462:
  4451                           
  4452                           ;./LCD.h: 57:     {;./LCD.h: 58:       LCD_Char(*msg);
  4453   005876  0060  F19F  FFF6   	movff	LCD_String@msg,tblptrl
  4454   00587C  0060  F1A3  FFF7   	movff	LCD_String@msg+1,tblptrh
  4455   005882  0E00               	movlw	low (__mediumconst shr (0+16))
  4456   005884  6EF8               	movwf	tblptru,c
  4457   005886  0E1F               	movlw	(high __ramtop+-1)
  4458   005888  64F7               	cpfsgt	tblptrh,c
  4459   00588A  D003               	bra	u2107
  4460   00588C  0008               	tblrd		*
  4461   00588E  50F5               	movf	tablat,w,c
  4462   005890  D007               	bra	u2100
  4463   005892                     u2107:
  4464   005892  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4465   005898  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4466   00589E  50E7               	movf	indf1,w,c
  4467   0058A0                     u2100:
  4468   0058A0  ECB5  F02E         	call	_LCD_Char
  4469   0058A4                     
  4470                           ;./LCD.h: 59:       msg++;
  4471   0058A4  0100               	movlb	0	; () banked
  4472   0058A6  4B67               	infsnz	LCD_String@msg& (0+255),f,b
  4473   0058A8  2B68               	incf	(LCD_String@msg+1)& (0+255),f,b
  4474   0058AA                     l2466:
  4475                           
  4476                           ;./LCD.h: 56:     while((*msg)!='\0')
  4477   0058AA  0060  F19F  FFF6   	movff	LCD_String@msg,tblptrl
  4478   0058B0  0060  F1A3  FFF7   	movff	LCD_String@msg+1,tblptrh
  4479   0058B6  0E00               	movlw	low (__mediumconst shr (0+16))
  4480   0058B8  6EF8               	movwf	tblptru,c
  4481   0058BA  0E1F               	movlw	(high __ramtop+-1)
  4482   0058BC  64F7               	cpfsgt	tblptrh,c
  4483   0058BE  D003               	bra	u2117
  4484   0058C0  0008               	tblrd		*
  4485   0058C2  50F5               	movf	tablat,w,c
  4486   0058C4  D007               	bra	u2110
  4487   0058C6                     u2117:
  4488   0058C6  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4489   0058CC  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4490   0058D2  50E7               	movf	indf1,w,c
  4491   0058D4                     u2110:
  4492   0058D4  0900               	iorlw	0
  4493   0058D6  A4D8               	btfss	status,2,c
  4494   0058D8  EF70  F02C         	goto	u2121
  4495   0058DC  EF72  F02C         	goto	u2120
  4496   0058E0                     u2121:
  4497   0058E0  EF3B  F02C         	goto	l2462
  4498   0058E4                     u2120:
  4499   0058E4  0012               	return		;funcret
  4500   0058E6                     __end_of_LCD_String:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _LCD_Char *****************
  4504 ;; Defined at:
  4505 ;;		line 43 in file "./LCD.h"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  dat             1    wreg     unsigned char 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  dat             1    6[BANK0 ] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, status,2, status,0, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4520 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4522 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4523 ;;Total ram usage:        1 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 8
  4526 ;; This function calls:
  4527 ;;		_MSdelay
  4528 ;; This function is called by:
  4529 ;;		_LCD_String
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text22
  4534   005D6A                     __ptext22:
  4535                           	callstack 0
  4536   005D6A                     _LCD_Char:
  4537                           	callstack 19
  4538                           
  4539                           ;incstack = 0
  4540                           ;LCD_Char@dat stored from wreg
  4541   005D6A  0100               	movlb	0	; () banked
  4542   005D6C  6F66               	movwf	LCD_Char@dat& (0+255),b
  4543   005D6E                     
  4544                           ;./LCD.h: 43: void LCD_Char(char dat);./LCD.h: 44: {;./LCD.h: 45:     LATD= dat;
  4545   005D6E  0060  F19B  FFBD   	movff	LCD_Char@dat,16317	;volatile
  4546   005D74                     
  4547                           ;./LCD.h: 46:     LATC2 = 1;
  4548   005D74  84BC               	bsf	16316,2,c	;volatile
  4549   005D76                     
  4550                           ;./LCD.h: 47:     LATC3=1;
  4551   005D76  86BC               	bsf	16316,3,c	;volatile
  4552   005D78                     
  4553                           ;./LCD.h: 48:     __nop();
  4554   005D78  0000               	nop	
  4555   005D7A                     
  4556                           ;./LCD.h: 49:     LATC3=0;
  4557   005D7A  96BC               	bcf	16316,3,c	;volatile
  4558   005D7C                     
  4559                           ;./LCD.h: 50:     MSdelay(1);
  4560   005D7C  0E00               	movlw	0
  4561   005D7E  0100               	movlb	0	; () banked
  4562   005D80  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  4563   005D82  0E01               	movlw	1
  4564   005D84  6F60               	movwf	MSdelay@val& (0+255),b
  4565   005D86  ECAC  F02C         	call	_MSdelay	;wreg free
  4566   005D8A  0012               	return		;funcret
  4567   005D8C                     __end_of_LCD_Char:
  4568                           	callstack 0
  4569                           
  4570 ;; *************** function _LCD_Clear *****************
  4571 ;; Defined at:
  4572 ;;		line 28 in file "./LCD.h"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;		None
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;		None
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4590 ;;Total ram usage:        0 bytes
  4591 ;; Hardware stack levels used: 1
  4592 ;; Hardware stack levels required when called: 9
  4593 ;; This function calls:
  4594 ;;		_LCD_Command
  4595 ;; This function is called by:
  4596 ;;		_openBox
  4597 ;;		_closeBox
  4598 ;;		_main
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text23
  4603   005E84                     __ptext23:
  4604                           	callstack 0
  4605   005E84                     _LCD_Clear:
  4606                           	callstack 20
  4607   005E84                     
  4608                           ;./LCD.h: 30:         LCD_Command(0x01);
  4609   005E84  0E01               	movlw	1
  4610   005E86  ECD7  F02E         	call	_LCD_Command
  4611   005E8A  0012               	return		;funcret
  4612   005E8C                     __end_of_LCD_Clear:
  4613                           	callstack 0
  4614                           
  4615 ;; *************** function _TMR2_StartTimer *****************
  4616 ;; Defined at:
  4617 ;;		line 119 in file "./servo.h"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4635 ;;Total ram usage:        0 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 8
  4638 ;; This function calls:
  4639 ;;		_TMR2_Start
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text24
  4646   005E94                     __ptext24:
  4647                           	callstack 0
  4648   005E94                     _TMR2_StartTimer:
  4649                           	callstack 22
  4650   005E94                     
  4651                           ;./servo.h: 121:     TMR2_Start();
  4652   005E94  EC4D  F02F         	call	_TMR2_Start	;wreg free
  4653   005E98  0012               	return		;funcret
  4654   005E9A                     __end_of_TMR2_StartTimer:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _TMR2_Start *****************
  4658 ;; Defined at:
  4659 ;;		line 113 in file "./servo.h"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		None
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 7
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_TMR2_StartTimer
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text25
  4688   005E9A                     __ptext25:
  4689                           	callstack 0
  4690   005E9A                     _TMR2_Start:
  4691                           	callstack 22
  4692   005E9A                     
  4693                           ;./servo.h: 116:     T2CONbits.TMR2ON = 1;
  4694   005E9A  8EAC               	bsf	172,7,c	;volatile
  4695   005E9C  0012               	return		;funcret
  4696   005E9E                     __end_of_TMR2_Start:
  4697                           	callstack 0
  4698                           
  4699 ;; *************** function _TMR2_Initialize *****************
  4700 ;; Defined at:
  4701 ;;		line 75 in file "./servo.h"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;		None
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4719 ;;Total ram usage:        0 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 7
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text26
  4730   005DD0                     __ptext26:
  4731                           	callstack 0
  4732   005DD0                     _TMR2_Initialize:
  4733                           	callstack 23
  4734   005DD0                     
  4735                           ;./servo.h: 80:     T2CLKCON = 0x01;
  4736   005DD0  0E01               	movlw	1
  4737   005DD2  6EAE               	movwf	174,c	;volatile
  4738                           
  4739                           ;./servo.h: 83:     T2HLT = 0x00;
  4740   005DD4  0E00               	movlw	0
  4741   005DD6  6EAD               	movwf	173,c	;volatile
  4742                           
  4743                           ;./servo.h: 86:     T2RST = 0x00;
  4744   005DD8  0E00               	movlw	0
  4745   005DDA  6EAF               	movwf	175,c	;volatile
  4746                           
  4747                           ;./servo.h: 89:     T2PR = 0x9D;
  4748   005DDC  0E9D               	movlw	157
  4749   005DDE  6EAB               	movwf	171,c	;volatile
  4750                           
  4751                           ;./servo.h: 92:     T2TMR = 0x08;
  4752   005DE0  0E08               	movlw	8
  4753   005DE2  6EAA               	movwf	170,c	;volatile
  4754   005DE4                     
  4755                           ;./servo.h: 95:     PIR4bits.TMR2IF = 0;
  4756   005DE4  0139               	movlb	57	; () banked
  4757   005DE6  95A4               	bcf	164,2,b	;volatile
  4758                           
  4759                           ;./servo.h: 98:     T2CON = 0xF0;
  4760   005DE8  0EF0               	movlw	240
  4761   005DEA  6EAC               	movwf	172,c	;volatile
  4762   005DEC                     
  4763                           ; BSR set to: 57
  4764   005DEC  0012               	return		;funcret
  4765   005DEE                     __end_of_TMR2_Initialize:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function _PWM_Output_D8_Enable *****************
  4769 ;; Defined at:
  4770 ;;		line 187 in file "./servo.h"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; Hardware stack levels required when called: 7
  4791 ;; This function calls:
  4792 ;;		Nothing
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text27
  4799   005E2A                     __ptext27:
  4800                           	callstack 0
  4801   005E2A                     _PWM_Output_D8_Enable:
  4802                           	callstack 23
  4803   005E2A                     
  4804                           ;./servo.h: 188:     PPSLOCK = 0x55;
  4805   005E2A  0E55               	movlw	85
  4806   005E2C  013A               	movlb	58	; () banked
  4807   005E2E  6FBF               	movwf	191,b	;volsfr
  4808                           
  4809                           ;./servo.h: 189:     PPSLOCK = 0xAA;
  4810   005E30  0EAA               	movlw	170
  4811   005E32  6FBF               	movwf	191,b	;volsfr
  4812   005E34                     
  4813                           ; BSR set to: 58
  4814                           ;./servo.h: 190:     PPSLOCKbits.PPSLOCKED = 0x00;
  4815   005E34  91BF               	bcf	191,0,b	;volsfr
  4816                           
  4817                           ;./servo.h: 193:     RB3PPS = 0x0A;
  4818   005E36  0E0A               	movlw	10
  4819   005E38  6F0B               	movwf	11,b	;volatile
  4820                           
  4821                           ;./servo.h: 195:     PPSLOCK = 0x55;
  4822   005E3A  0E55               	movlw	85
  4823   005E3C  6FBF               	movwf	191,b	;volsfr
  4824                           
  4825                           ;./servo.h: 196:     PPSLOCK = 0xAA;
  4826   005E3E  0EAA               	movlw	170
  4827   005E40  6FBF               	movwf	191,b	;volsfr
  4828   005E42                     
  4829                           ; BSR set to: 58
  4830                           ;./servo.h: 197:     PPSLOCKbits.PPSLOCKED = 0x01;
  4831   005E42  81BF               	bsf	191,0,b	;volsfr
  4832   005E44                     
  4833                           ; BSR set to: 58
  4834   005E44  0012               	return		;funcret
  4835   005E46                     __end_of_PWM_Output_D8_Enable:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function _PWM2_Initialize *****************
  4839 ;; Defined at:
  4840 ;;		line 215 in file "./servo.h"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4858 ;;Total ram usage:        0 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; Hardware stack levels required when called: 7
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text28
  4869   005D8C                     __ptext28:
  4870                           	callstack 0
  4871   005D8C                     _PWM2_Initialize:
  4872                           	callstack 23
  4873   005D8C                     
  4874                           ;./servo.h: 218:     PORTCbits.RC5 = 0;
  4875   005D8C  9ACC               	bcf	204,5,c	;volatile
  4876                           
  4877                           ;./servo.h: 219:     LATCbits.LATC5 = 0;
  4878   005D8E  9ABC               	bcf	188,5,c	;volatile
  4879                           
  4880                           ;./servo.h: 220:     ANSELCbits.ANSELC5 = 0;
  4881   005D90  013A               	movlb	58	; () banked
  4882   005D92  9B60               	bcf	96,5,b	;volatile
  4883                           
  4884                           ;./servo.h: 221:     TRISCbits.TRISC5 = 0;
  4885   005D94  9AC4               	bcf	196,5,c	;volatile
  4886   005D96                     
  4887                           ; BSR set to: 58
  4888                           ;./servo.h: 225:  CCP2CON = 0x8C;
  4889   005D96  0E8C               	movlw	140
  4890   005D98  6E7A               	movwf	122,c	;volatile
  4891                           
  4892                           ;./servo.h: 228:  CCPR2H = 0x1;
  4893   005D9A  0E01               	movlw	1
  4894   005D9C  6E79               	movwf	121,c	;volatile
  4895                           
  4896                           ;./servo.h: 231:  CCPR2L = 0x99;
  4897   005D9E  0E99               	movlw	153
  4898   005DA0  6E78               	movwf	120,c	;volatile
  4899                           
  4900                           ;./servo.h: 234:  CCPTMRS0bits.C2TSEL = 0x1;
  4901   005DA2  013F               	movlb	63	; () banked
  4902   005DA4  515E               	movf	94,w,b	;volatile
  4903   005DA6  0BF3               	andlw	-13
  4904   005DA8  0904               	iorlw	4
  4905   005DAA  6F5E               	movwf	94,b	;volatile
  4906   005DAC                     
  4907                           ; BSR set to: 63
  4908   005DAC  0012               	return		;funcret
  4909   005DAE                     __end_of_PWM2_Initialize:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _LCD_Init *****************
  4913 ;; Defined at:
  4914 ;;		line 15 in file "./LCD.h"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 9
  4935 ;; This function calls:
  4936 ;;		_LCD_Command
  4937 ;;		_MSdelay
  4938 ;; This function is called by:
  4939 ;;		_main
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text29
  4944   005C92                     __ptext29:
  4945                           	callstack 0
  4946   005C92                     _LCD_Init:
  4947                           	callstack 21
  4948   005C92                     
  4949                           ;./LCD.h: 17:     MSdelay(15);
  4950   005C92  0E00               	movlw	0
  4951   005C94  0100               	movlb	0	; () banked
  4952   005C96  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  4953   005C98  0E0F               	movlw	15
  4954   005C9A  6F60               	movwf	MSdelay@val& (0+255),b
  4955   005C9C  ECAC  F02C         	call	_MSdelay	;wreg free
  4956   005CA0                     
  4957                           ;./LCD.h: 18:     TRISD = 0x00;
  4958   005CA0  0E00               	movlw	0
  4959   005CA2  6EC5               	movwf	197,c	;volatile
  4960   005CA4                     
  4961                           ;./LCD.h: 20:     TRISCbits.TRISC2 = 0;
  4962   005CA4  94C4               	bcf	196,2,c	;volatile
  4963   005CA6                     
  4964                           ;./LCD.h: 21:     TRISCbits.TRISC3 = 0;
  4965   005CA6  96C4               	bcf	196,3,c	;volatile
  4966   005CA8                     
  4967                           ;./LCD.h: 22:     LCD_Command(0x01);
  4968   005CA8  0E01               	movlw	1
  4969   005CAA  ECD7  F02E         	call	_LCD_Command
  4970   005CAE                     
  4971                           ;./LCD.h: 23:     LCD_Command(0x38);
  4972   005CAE  0E38               	movlw	56
  4973   005CB0  ECD7  F02E         	call	_LCD_Command
  4974   005CB4                     
  4975                           ;./LCD.h: 24:     LCD_Command(0x0c);
  4976   005CB4  0E0C               	movlw	12
  4977   005CB6  ECD7  F02E         	call	_LCD_Command
  4978   005CBA                     
  4979                           ;./LCD.h: 25:     LCD_Command(0x06);
  4980   005CBA  0E06               	movlw	6
  4981   005CBC  ECD7  F02E         	call	_LCD_Command
  4982   005CC0  0012               	return		;funcret
  4983   005CC2                     __end_of_LCD_Init:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _LCD_Command *****************
  4987 ;; Defined at:
  4988 ;;		line 33 in file "./LCD.h"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  cmd             1    wreg     unsigned char 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  cmd             1    6[BANK0 ] unsigned char 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5006 ;;Total ram usage:        1 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 8
  5009 ;; This function calls:
  5010 ;;		_MSdelay
  5011 ;; This function is called by:
  5012 ;;		_LCD_Init
  5013 ;;		_LCD_Clear
  5014 ;;		_LCD_String_xy
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text30
  5019   005DAE                     __ptext30:
  5020                           	callstack 0
  5021   005DAE                     _LCD_Command:
  5022                           	callstack 20
  5023                           
  5024                           ;incstack = 0
  5025                           ;LCD_Command@cmd stored from wreg
  5026   005DAE  0100               	movlb	0	; () banked
  5027   005DB0  6F66               	movwf	LCD_Command@cmd& (0+255),b
  5028   005DB2                     
  5029                           ;./LCD.h: 33: void LCD_Command(char cmd );./LCD.h: 34: {;./LCD.h: 35:     LATD= cmd;
  5030   005DB2  0060  F19B  FFBD   	movff	LCD_Command@cmd,16317	;volatile
  5031   005DB8                     
  5032                           ;./LCD.h: 36:     LATC2 = 0;
  5033   005DB8  94BC               	bcf	16316,2,c	;volatile
  5034   005DBA                     
  5035                           ;./LCD.h: 37:     LATC3 = 1;
  5036   005DBA  86BC               	bsf	16316,3,c	;volatile
  5037   005DBC                     
  5038                           ;./LCD.h: 38:     __nop();
  5039   005DBC  0000               	nop	
  5040   005DBE                     
  5041                           ;./LCD.h: 39:     LATC3 = 0;
  5042   005DBE  96BC               	bcf	16316,3,c	;volatile
  5043   005DC0                     
  5044                           ;./LCD.h: 40:     MSdelay(3);
  5045   005DC0  0E00               	movlw	0
  5046   005DC2  0100               	movlb	0	; () banked
  5047   005DC4  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  5048   005DC6  0E03               	movlw	3
  5049   005DC8  6F60               	movwf	MSdelay@val& (0+255),b
  5050   005DCA  ECAC  F02C         	call	_MSdelay	;wreg free
  5051   005DCE  0012               	return		;funcret
  5052   005DD0                     __end_of_LCD_Command:
  5053                           	callstack 0
  5054                           
  5055 ;; *************** function _MSdelay *****************
  5056 ;; Defined at:
  5057 ;;		line 80 in file "./LCD.h"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  val             2    0[BANK0 ] unsigned int 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  j               2    4[BANK0 ] unsigned int 
  5062 ;;  i               2    2[BANK0 ] unsigned int 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5073 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5075 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5076 ;;Total ram usage:        6 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 7
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_LCD_Init
  5083 ;;		_LCD_Command
  5084 ;;		_LCD_Char
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text31
  5089   005958                     __ptext31:
  5090                           	callstack 0
  5091   005958                     _MSdelay:
  5092                           	callstack 19
  5093   005958                     
  5094                           ;./LCD.h: 80: void MSdelay(unsigned int val);./LCD.h: 81: {;./LCD.h: 82:      unsigned i
      +                          nt i,j;;./LCD.h: 83:         for(i=0;i<val;i++)
  5095   005958  0E00               	movlw	0
  5096   00595A  0100               	movlb	0	; () banked
  5097   00595C  6F63               	movwf	(MSdelay@i+1)& (0+255),b
  5098   00595E  0E00               	movlw	0
  5099   005960  6F62               	movwf	MSdelay@i& (0+255),b
  5100   005962  EFC6  F02C         	goto	l2110
  5101   005966                     l2098:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;./LCD.h: 84:             for(j=0;j<165;j++);
  5105   005966  0E00               	movlw	0
  5106   005968  6F65               	movwf	(MSdelay@j+1)& (0+255),b
  5107   00596A  0E00               	movlw	0
  5108   00596C  6F64               	movwf	MSdelay@j& (0+255),b
  5109   00596E                     l2104:
  5110                           
  5111                           ; BSR set to: 0
  5112   00596E  4B64               	infsnz	MSdelay@j& (0+255),f,b
  5113   005970  2B65               	incf	(MSdelay@j+1)& (0+255),f,b
  5114   005972                     
  5115                           ; BSR set to: 0
  5116   005972  5165               	movf	(MSdelay@j+1)& (0+255),w,b
  5117   005974  E109               	bnz	u1520
  5118   005976  0EA5               	movlw	165
  5119   005978  5D64               	subwf	MSdelay@j& (0+255),w,b
  5120   00597A  A0D8               	btfss	status,0,c
  5121   00597C  EFC2  F02C         	goto	u1521
  5122   005980  EFC4  F02C         	goto	u1520
  5123   005984                     u1521:
  5124   005984  EFB7  F02C         	goto	l2104
  5125   005988                     u1520:
  5126   005988                     
  5127                           ; BSR set to: 0
  5128   005988  4B62               	infsnz	MSdelay@i& (0+255),f,b
  5129   00598A  2B63               	incf	(MSdelay@i+1)& (0+255),f,b
  5130   00598C                     l2110:
  5131                           
  5132                           ; BSR set to: 0
  5133   00598C  5160               	movf	MSdelay@val& (0+255),w,b
  5134   00598E  5D62               	subwf	MSdelay@i& (0+255),w,b
  5135   005990  5161               	movf	(MSdelay@val+1)& (0+255),w,b
  5136   005992  5963               	subwfb	(MSdelay@i+1)& (0+255),w,b
  5137   005994  A0D8               	btfss	status,0,c
  5138   005996  EFCF  F02C         	goto	u1531
  5139   00599A  EFD1  F02C         	goto	u1530
  5140   00599E                     u1531:
  5141   00599E  EFB3  F02C         	goto	l2098
  5142   0059A2                     u1530:
  5143   0059A2                     
  5144                           ; BSR set to: 0
  5145   0059A2  0012               	return		;funcret
  5146   0059A4                     __end_of_MSdelay:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function _INTERRUPT_Initialize *****************
  5150 ;; Defined at:
  5151 ;;		line 29 in file "./interrupt.h"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5169 ;;Total ram usage:        0 bytes
  5170 ;; Hardware stack levels used: 1
  5171 ;; Hardware stack levels required when called: 7
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text32
  5180   005CC2                     __ptext32:
  5181                           	callstack 0
  5182   005CC2                     _INTERRUPT_Initialize:
  5183                           	callstack 23
  5184   005CC2                     
  5185                           ;./interrupt.h: 31:     PORTB = 0;
  5186   005CC2  0E00               	movlw	0
  5187   005CC4  6ECB               	movwf	203,c	;volatile
  5188   005CC6                     
  5189                           ;./interrupt.h: 32:     TRISB = 0b11111111;
  5190   005CC6  68C3               	setf	195,c	;volatile
  5191                           
  5192                           ;./interrupt.h: 33:     LATB = 0;
  5193   005CC8  0E00               	movlw	0
  5194   005CCA  6EBB               	movwf	187,c	;volatile
  5195                           
  5196                           ;./interrupt.h: 34:     ANSELB = 0;
  5197   005CCC  0E00               	movlw	0
  5198   005CCE  013A               	movlb	58	; () banked
  5199   005CD0  6F50               	movwf	80,b	;volatile
  5200   005CD2                     
  5201                           ; BSR set to: 58
  5202                           ;./interrupt.h: 36:     INTCON0bits.IPEN = 1;
  5203   005CD2  8AD2               	bsf	210,5,c	;volatile
  5204   005CD4                     
  5205                           ; BSR set to: 58
  5206                           ;./interrupt.h: 38:     INTCON0bits.GIEH = 1;
  5207   005CD4  8ED2               	bsf	210,7,c	;volatile
  5208   005CD6                     
  5209                           ; BSR set to: 58
  5210                           ;./interrupt.h: 40:     INTCON0bits.GIEL = 1;
  5211   005CD6  8CD2               	bsf	210,6,c	;volatile
  5212   005CD8                     
  5213                           ; BSR set to: 58
  5214                           ;./interrupt.h: 42:     INTCON0bits.INT0EDG = 1;
  5215   005CD8  80D2               	bsf	210,0,c	;volatile
  5216   005CDA                     
  5217                           ; BSR set to: 58
  5218                           ;./interrupt.h: 44:     IPR1bits.INT0IP = 1;
  5219   005CDA  0139               	movlb	57	; () banked
  5220   005CDC  8181               	bsf	129,0,b	;volatile
  5221   005CDE                     
  5222                           ; BSR set to: 57
  5223                           ;./interrupt.h: 46:     PIE1bits.INT0IE = 1;
  5224   005CDE  8191               	bsf	145,0,b	;volatile
  5225   005CE0                     
  5226                           ; BSR set to: 57
  5227                           ;./interrupt.h: 48:     PIR1bits.INT0IF = 0;
  5228   005CE0  91A1               	bcf	161,0,b	;volatile
  5229                           
  5230                           ;./interrupt.h: 52:     IVTBASEU = 0x00;
  5231   005CE2  0E00               	movlw	0
  5232   005CE4  6ED7               	movwf	215,c	;volatile
  5233                           
  5234                           ;./interrupt.h: 54:     IVTBASEH = 0x40;
  5235   005CE6  0E40               	movlw	64
  5236   005CE8  6ED6               	movwf	214,c	;volatile
  5237                           
  5238                           ;./interrupt.h: 56:     IVTBASEL = 0x08;
  5239   005CEA  0E08               	movlw	8
  5240   005CEC  6ED5               	movwf	213,c	;volatile
  5241   005CEE                     
  5242                           ; BSR set to: 57
  5243   005CEE  0012               	return		;funcret
  5244   005CF0                     __end_of_INTERRUPT_Initialize:
  5245                           	callstack 0
  5246                           
  5247 ;; *************** function _INT0_ISR *****************
  5248 ;; Defined at:
  5249 ;;		line 4 in file "./interrupt.h"
  5250 ;; Parameters:    Size  Location     Type
  5251 ;;		None
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;		None
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5265 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5266 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5267 ;;Total ram usage:        6 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 6
  5270 ;; This function calls:
  5271 ;;		_eepromWrite
  5272 ;;		i2_LCD_Clear
  5273 ;;		i2_LCD_String_xy
  5274 ;;		i2___awdiv
  5275 ;;		i2___awmod
  5276 ;;		i2_getValue
  5277 ;; This function is called by:
  5278 ;;		Interrupt level 2
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text33
  5283   005330                     __ptext33:
  5284                           	callstack 0
  5285   005330                     _INT0_ISR:
  5286                           	callstack 18
  5287                           
  5288                           ; BSR set to: 57
  5289                           ;incstack = 0
  5290   005330  006F FFD8  F04E    	movff	tblptrl,??_INT0_ISR+2
  5291   005336  006F FFDC  F04F    	movff	tblptrh,??_INT0_ISR+3
  5292   00533C  006F FFE0  F050    	movff	tblptru,??_INT0_ISR+4
  5293   005342  006F FFD4  F051    	movff	tablat,??_INT0_ISR+5
  5294   005348                     
  5295                           ;./interrupt.h: 9:     if(PORTBbits.RB0 == 1){
  5296   005348  A0CB               	btfss	203,0,c	;volatile
  5297   00534A  EFA9  F029         	goto	i2u297_41
  5298   00534E  EFAB  F029         	goto	i2u297_40
  5299   005352                     i2u297_41:
  5300   005352  EF07  F02A         	goto	i2l2948
  5301   005356                     i2u297_40:
  5302   005356                     
  5303                           ;./interrupt.h: 10:         LCD_Clear();
  5304   005356  EC46  F02F         	call	i2_LCD_Clear	;wreg free
  5305   00535A                     
  5306                           ;./interrupt.h: 11:         LCD_String_xy(1, 0, "New Password:");
  5307   00535A  0E00               	movlw	0
  5308   00535C  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  5309   00535E  0E76               	movlw	low STR_6
  5310   005360  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  5311   005362  0E41               	movlw	high STR_6
  5312   005364  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  5313   005366  0E01               	movlw	1
  5314   005368  EC86  F02D         	call	i2_LCD_String_xy
  5315   00536C                     
  5316                           ;./interrupt.h: 13:         password = getValue();
  5317   00536C  ECB3  F023         	call	i2_getValue	;wreg free
  5318   005370  C030  F05C         	movff	?i2_getValue,_password
  5319   005374  C031  F05D         	movff	?i2_getValue+1,_password+1
  5320   005378                     
  5321                           ;./interrupt.h: 14:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  5322   005378  0E10               	movlw	16
  5323   00537A  6E4D               	movwf	(??_INT0_ISR+1)^0,c
  5324   00537C  0E39               	movlw	57
  5325   00537E  6E4C               	movwf	??_INT0_ISR^0,c
  5326   005380  0E0E               	movlw	14
  5327   005382                     i2u315_47:
  5328   005382  2EE8               	decfsz	wreg,f,c
  5329   005384  D7FE               	bra	i2u315_47
  5330   005386  2E4C               	decfsz	??_INT0_ISR^0,f,c
  5331   005388  D7FC               	bra	i2u315_47
  5332   00538A  2E4D               	decfsz	(??_INT0_ISR+1)^0,f,c
  5333   00538C  D7FA               	bra	i2u315_47
  5334   00538E                     
  5335                           ;./interrupt.h: 15:         LCD_Clear();
  5336   00538E  EC46  F02F         	call	i2_LCD_Clear	;wreg free
  5337   005392                     
  5338                           ;./interrupt.h: 16:         LCD_String_xy(1, 1, "Password Reset");
  5339   005392  0E01               	movlw	1
  5340   005394  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  5341   005396  0E67               	movlw	low STR_7
  5342   005398  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  5343   00539A  0E41               	movlw	high STR_7
  5344   00539C  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  5345   00539E  0E01               	movlw	1
  5346   0053A0  EC86  F02D         	call	i2_LCD_String_xy
  5347   0053A4                     
  5348                           ;./interrupt.h: 17:         LCD_String_xy(2, 0, "****************");
  5349   0053A4  0E00               	movlw	0
  5350   0053A6  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  5351   0053A8  0ED5               	movlw	low STR_8
  5352   0053AA  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  5353   0053AC  0E40               	movlw	high STR_8
  5354   0053AE  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  5355   0053B0  0E02               	movlw	2
  5356   0053B2  EC86  F02D         	call	i2_LCD_String_xy
  5357   0053B6                     
  5358                           ;./interrupt.h: 18:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  5359   0053B6  0E10               	movlw	16
  5360   0053B8  6E4D               	movwf	(??_INT0_ISR+1)^0,c
  5361   0053BA  0E39               	movlw	57
  5362   0053BC  6E4C               	movwf	??_INT0_ISR^0,c
  5363   0053BE  0E0E               	movlw	14
  5364   0053C0                     i2u316_47:
  5365   0053C0  2EE8               	decfsz	wreg,f,c
  5366   0053C2  D7FE               	bra	i2u316_47
  5367   0053C4  2E4C               	decfsz	??_INT0_ISR^0,f,c
  5368   0053C6  D7FC               	bra	i2u316_47
  5369   0053C8  2E4D               	decfsz	(??_INT0_ISR+1)^0,f,c
  5370   0053CA  D7FA               	bra	i2u316_47
  5371   0053CC                     
  5372                           ;./interrupt.h: 19:         LCD_Clear();
  5373   0053CC  EC46  F02F         	call	i2_LCD_Clear	;wreg free
  5374   0053D0                     
  5375                           ;./interrupt.h: 20:         eepromWrite(0,password/100);
  5376   0053D0  C05C  F001         	movff	_password,i2___awdiv@dividend
  5377   0053D4  C05D  F002         	movff	_password+1,i2___awdiv@dividend+1
  5378   0053D8  0E00               	movlw	0
  5379   0053DA  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  5380   0053DC  0E64               	movlw	100
  5381   0053DE  6E03               	movwf	i2___awdiv@divisor^0,c
  5382   0053E0  EC79  F02A         	call	i2___awdiv	;wreg free
  5383   0053E4  5001               	movf	?i2___awdiv^0,w,c
  5384   0053E6  6E09               	movwf	eepromWrite@data^0,c
  5385   0053E8  0E00               	movlw	0
  5386   0053EA  ECFB  F02D         	call	_eepromWrite
  5387   0053EE                     
  5388                           ;./interrupt.h: 21:         eepromWrite(2,password%100);
  5389   0053EE  C05C  F001         	movff	_password,i2___awmod@dividend
  5390   0053F2  C05D  F002         	movff	_password+1,i2___awmod@dividend+1
  5391   0053F6  0E00               	movlw	0
  5392   0053F8  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  5393   0053FA  0E64               	movlw	100
  5394   0053FC  6E03               	movwf	i2___awmod@divisor^0,c
  5395   0053FE  EC34  F02B         	call	i2___awmod	;wreg free
  5396   005402  5001               	movf	?i2___awmod^0,w,c
  5397   005404  6E09               	movwf	eepromWrite@data^0,c
  5398   005406  0E02               	movlw	2
  5399   005408  ECFB  F02D         	call	_eepromWrite
  5400   00540C  00FF               	reset		;# 
  5401   00540E                     i2l2948:
  5402                           
  5403                           ;./interrupt.h: 25:     PIR1bits.INT0IF = 0;
  5404   00540E  0139               	movlb	57	; () banked
  5405   005410  91A1               	bcf	161,0,b	;volatile
  5406   005412                     
  5407                           ; BSR set to: 57
  5408   005412  0060  F147  FFF5   	movff	??_INT0_ISR+5,tablat
  5409   005418  0060  F143  FFF8   	movff	??_INT0_ISR+4,tblptru
  5410   00541E  0060  F13F  FFF7   	movff	??_INT0_ISR+3,tblptrh
  5411   005424  0060  F13B  FFF6   	movff	??_INT0_ISR+2,tblptrl
  5412   00542A  0011               	retfie		f
  5413   00542C                     __end_of_INT0_ISR:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function i2_getValue *****************
  5417 ;; Defined at:
  5418 ;;		line 141 in file "./keypad.h"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;		None
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  data           10   55[COMRAM] unsigned char [10]
  5423 ;;  value4          2   73[COMRAM] int 
  5424 ;;  value3          2   71[COMRAM] int 
  5425 ;;  value2          2   69[COMRAM] int 
  5426 ;;  value1          2   67[COMRAM] int 
  5427 ;;  decimalValue    2   65[COMRAM] int 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  2   47[COMRAM] int 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5438 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5439 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5440 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5441 ;;Total ram usage:       28 bytes
  5442 ;; Hardware stack levels used: 1
  5443 ;; Hardware stack levels required when called: 5
  5444 ;; This function calls:
  5445 ;;		i2_LCD_String_xy
  5446 ;;		i2___wmul
  5447 ;;		i2_getKeypad
  5448 ;;		i2_sprintf
  5449 ;; This function is called by:
  5450 ;;		_INT0_ISR
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454                           	psect	text34
  5455   004766                     __ptext34:
  5456                           	callstack 0
  5457   004766                     i2_getValue:
  5458                           	callstack 18
  5459   004766                     
  5460                           ;./keypad.h: 142:     int value1 = -1;
  5461   004766  6844               	setf	i2getValue@value1^0,c
  5462   004768  6845               	setf	(i2getValue@value1+1)^0,c
  5463                           
  5464                           ;./keypad.h: 143:     int value2 = -1;
  5465   00476A  6846               	setf	i2getValue@value2^0,c
  5466   00476C  6847               	setf	(i2getValue@value2+1)^0,c
  5467                           
  5468                           ;./keypad.h: 144:     int value3 = -1;
  5469   00476E  6848               	setf	i2getValue@value3^0,c
  5470   004770  6849               	setf	(i2getValue@value3+1)^0,c
  5471                           
  5472                           ;./keypad.h: 145:     int value4 = -1;
  5473   004772  684A               	setf	i2getValue@value4^0,c
  5474   004774  684B               	setf	(i2getValue@value4+1)^0,c
  5475   004776                     
  5476                           ;./keypad.h: 147:     char data[10];;./keypad.h: 149:     LCD_String_xy(2,0,"____");
  5477   004776  0E00               	movlw	0
  5478   004778  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  5479   00477A  0EB9               	movlw	low STR_1
  5480   00477C  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  5481   00477E  0E41               	movlw	high STR_1
  5482   004780  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  5483   004782  0E02               	movlw	2
  5484   004784  EC86  F02D         	call	i2_LCD_String_xy
  5485                           
  5486                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
  5487   004788  EFCC  F023         	goto	i2l2880
  5488   00478C                     i2l2878:
  5489                           
  5490                           ;./keypad.h: 152:             value1 = getKeypad();
  5491   00478C  ECA8  F027         	call	i2_getKeypad	;wreg free
  5492   004790  C001  F044         	movff	?i2_getKeypad,i2getValue@value1
  5493   004794  C002  F045         	movff	?i2_getKeypad+1,i2getValue@value1+1
  5494   004798                     i2l2880:
  5495                           
  5496                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
  5497   004798  BE45               	btfsc	(i2getValue@value1+1)^0,7,c
  5498   00479A  EFD1  F023         	goto	i2u289_41
  5499   00479E  EFD3  F023         	goto	i2u289_40
  5500   0047A2                     i2u289_41:
  5501   0047A2  EFC6  F023         	goto	i2l2878
  5502   0047A6                     i2u289_40:
  5503   0047A6  BE45               	btfsc	(i2getValue@value1+1)^0,7,c
  5504   0047A8  EFE1  F023         	goto	i2u290_40
  5505   0047AC  5045               	movf	(i2getValue@value1+1)^0,w,c
  5506   0047AE  E107               	bnz	i2u290_41
  5507   0047B0  0E0A               	movlw	10
  5508   0047B2  5C44               	subwf	i2getValue@value1^0,w,c
  5509   0047B4  B0D8               	btfsc	status,0,c
  5510   0047B6  EFDF  F023         	goto	i2u290_41
  5511   0047BA  EFE1  F023         	goto	i2u290_40
  5512   0047BE                     i2u290_41:
  5513   0047BE  EFC6  F023         	goto	i2l2878
  5514   0047C2                     i2u290_40:
  5515   0047C2                     
  5516                           ;./keypad.h: 154:     sprintf(data,"%d",value1);
  5517   0047C2  0E38               	movlw	low i2getValue@data
  5518   0047C4  6E1E               	movwf	i2sprintf@s^0,c
  5519   0047C6  0EBE               	movlw	low STR_2
  5520   0047C8  6E1F               	movwf	i2sprintf@fmt^0,c
  5521   0047CA  0E41               	movlw	high STR_2
  5522   0047CC  6E20               	movwf	(i2sprintf@fmt+1)^0,c
  5523   0047CE  C044  F021         	movff	i2getValue@value1,?i2_sprintf+3
  5524   0047D2  C045  F022         	movff	i2getValue@value1+1,?i2_sprintf+4
  5525   0047D6  ECC4  F02D         	call	i2_sprintf	;wreg free
  5526   0047DA                     
  5527                           ;./keypad.h: 155:     LCD_String_xy(2,0,data);
  5528   0047DA  0E00               	movlw	0
  5529   0047DC  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  5530   0047DE  0E38               	movlw	low i2getValue@data
  5531   0047E0  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  5532   0047E2  6A0C               	clrf	(i2LCD_String_xy@msg+1)^0,c
  5533   0047E4  0E02               	movlw	2
  5534   0047E6  EC86  F02D         	call	i2_LCD_String_xy
  5535                           
  5536                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
  5537   0047EA  EFFD  F023         	goto	i2l2890
  5538   0047EE                     i2l2888:
  5539                           
  5540                           ;./keypad.h: 158:         value2 = getKeypad();
  5541   0047EE  ECA8  F027         	call	i2_getKeypad	;wreg free
  5542   0047F2  C001  F046         	movff	?i2_getKeypad,i2getValue@value2
  5543   0047F6  C002  F047         	movff	?i2_getKeypad+1,i2getValue@value2+1
  5544   0047FA                     i2l2890:
  5545                           
  5546                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
  5547   0047FA  BE47               	btfsc	(i2getValue@value2+1)^0,7,c
  5548   0047FC  EF02  F024         	goto	i2u291_41
  5549   004800  EF04  F024         	goto	i2u291_40
  5550   004804                     i2u291_41:
  5551   004804  EFF7  F023         	goto	i2l2888
  5552   004808                     i2u291_40:
  5553   004808  BE47               	btfsc	(i2getValue@value2+1)^0,7,c
  5554   00480A  EF12  F024         	goto	i2u292_40
  5555   00480E  5047               	movf	(i2getValue@value2+1)^0,w,c
  5556   004810  E107               	bnz	i2u292_41
  5557   004812  0E0A               	movlw	10
  5558   004814  5C46               	subwf	i2getValue@value2^0,w,c
  5559   004816  B0D8               	btfsc	status,0,c
  5560   004818  EF10  F024         	goto	i2u292_41
  5561   00481C  EF12  F024         	goto	i2u292_40
  5562   004820                     i2u292_41:
  5563   004820  EFF7  F023         	goto	i2l2888
  5564   004824                     i2u292_40:
  5565   004824                     
  5566                           ;./keypad.h: 160:     sprintf(data,"%d",value2);
  5567   004824  0E38               	movlw	low i2getValue@data
  5568   004826  6E1E               	movwf	i2sprintf@s^0,c
  5569   004828  0EBE               	movlw	low STR_2
  5570   00482A  6E1F               	movwf	i2sprintf@fmt^0,c
  5571   00482C  0E41               	movlw	high STR_2
  5572   00482E  6E20               	movwf	(i2sprintf@fmt+1)^0,c
  5573   004830  C046  F021         	movff	i2getValue@value2,?i2_sprintf+3
  5574   004834  C047  F022         	movff	i2getValue@value2+1,?i2_sprintf+4
  5575   004838  ECC4  F02D         	call	i2_sprintf	;wreg free
  5576   00483C                     
  5577                           ;./keypad.h: 161:     LCD_String_xy(2,1,data);
  5578   00483C  0E01               	movlw	1
  5579   00483E  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  5580   004840  0E38               	movlw	low i2getValue@data
  5581   004842  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  5582   004844  6A0C               	clrf	(i2LCD_String_xy@msg+1)^0,c
  5583   004846  0E02               	movlw	2
  5584   004848  EC86  F02D         	call	i2_LCD_String_xy
  5585                           
  5586                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
  5587   00484C  EF2E  F024         	goto	i2l2900
  5588   004850                     i2l2898:
  5589                           
  5590                           ;./keypad.h: 164:         value3 = getKeypad();
  5591   004850  ECA8  F027         	call	i2_getKeypad	;wreg free
  5592   004854  C001  F048         	movff	?i2_getKeypad,i2getValue@value3
  5593   004858  C002  F049         	movff	?i2_getKeypad+1,i2getValue@value3+1
  5594   00485C                     i2l2900:
  5595                           
  5596                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
  5597   00485C  BE49               	btfsc	(i2getValue@value3+1)^0,7,c
  5598   00485E  EF33  F024         	goto	i2u293_41
  5599   004862  EF35  F024         	goto	i2u293_40
  5600   004866                     i2u293_41:
  5601   004866  EF28  F024         	goto	i2l2898
  5602   00486A                     i2u293_40:
  5603   00486A  BE49               	btfsc	(i2getValue@value3+1)^0,7,c
  5604   00486C  EF43  F024         	goto	i2u294_40
  5605   004870  5049               	movf	(i2getValue@value3+1)^0,w,c
  5606   004872  E107               	bnz	i2u294_41
  5607   004874  0E0A               	movlw	10
  5608   004876  5C48               	subwf	i2getValue@value3^0,w,c
  5609   004878  B0D8               	btfsc	status,0,c
  5610   00487A  EF41  F024         	goto	i2u294_41
  5611   00487E  EF43  F024         	goto	i2u294_40
  5612   004882                     i2u294_41:
  5613   004882  EF28  F024         	goto	i2l2898
  5614   004886                     i2u294_40:
  5615   004886                     
  5616                           ;./keypad.h: 166:     sprintf(data,"%d",value3);
  5617   004886  0E38               	movlw	low i2getValue@data
  5618   004888  6E1E               	movwf	i2sprintf@s^0,c
  5619   00488A  0EBE               	movlw	low STR_2
  5620   00488C  6E1F               	movwf	i2sprintf@fmt^0,c
  5621   00488E  0E41               	movlw	high STR_2
  5622   004890  6E20               	movwf	(i2sprintf@fmt+1)^0,c
  5623   004892  C048  F021         	movff	i2getValue@value3,?i2_sprintf+3
  5624   004896  C049  F022         	movff	i2getValue@value3+1,?i2_sprintf+4
  5625   00489A  ECC4  F02D         	call	i2_sprintf	;wreg free
  5626   00489E                     
  5627                           ;./keypad.h: 167:     LCD_String_xy(2,2,data);
  5628   00489E  0E02               	movlw	2
  5629   0048A0  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  5630   0048A2  0E38               	movlw	low i2getValue@data
  5631   0048A4  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  5632   0048A6  6A0C               	clrf	(i2LCD_String_xy@msg+1)^0,c
  5633   0048A8  0E02               	movlw	2
  5634   0048AA  EC86  F02D         	call	i2_LCD_String_xy
  5635                           
  5636                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
  5637   0048AE  EF5F  F024         	goto	i2l2910
  5638   0048B2                     i2l2908:
  5639                           
  5640                           ;./keypad.h: 170:         value4 = getKeypad();
  5641   0048B2  ECA8  F027         	call	i2_getKeypad	;wreg free
  5642   0048B6  C001  F04A         	movff	?i2_getKeypad,i2getValue@value4
  5643   0048BA  C002  F04B         	movff	?i2_getKeypad+1,i2getValue@value4+1
  5644   0048BE                     i2l2910:
  5645                           
  5646                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
  5647   0048BE  BE4B               	btfsc	(i2getValue@value4+1)^0,7,c
  5648   0048C0  EF64  F024         	goto	i2u295_41
  5649   0048C4  EF66  F024         	goto	i2u295_40
  5650   0048C8                     i2u295_41:
  5651   0048C8  EF59  F024         	goto	i2l2908
  5652   0048CC                     i2u295_40:
  5653   0048CC  BE4B               	btfsc	(i2getValue@value4+1)^0,7,c
  5654   0048CE  EF74  F024         	goto	i2u296_40
  5655   0048D2  504B               	movf	(i2getValue@value4+1)^0,w,c
  5656   0048D4  E107               	bnz	i2u296_41
  5657   0048D6  0E0A               	movlw	10
  5658   0048D8  5C4A               	subwf	i2getValue@value4^0,w,c
  5659   0048DA  B0D8               	btfsc	status,0,c
  5660   0048DC  EF72  F024         	goto	i2u296_41
  5661   0048E0  EF74  F024         	goto	i2u296_40
  5662   0048E4                     i2u296_41:
  5663   0048E4  EF59  F024         	goto	i2l2908
  5664   0048E8                     i2u296_40:
  5665   0048E8                     
  5666                           ;./keypad.h: 172:     sprintf(data,"%d",value4);
  5667   0048E8  0E38               	movlw	low i2getValue@data
  5668   0048EA  6E1E               	movwf	i2sprintf@s^0,c
  5669   0048EC  0EBE               	movlw	low STR_2
  5670   0048EE  6E1F               	movwf	i2sprintf@fmt^0,c
  5671   0048F0  0E41               	movlw	high STR_2
  5672   0048F2  6E20               	movwf	(i2sprintf@fmt+1)^0,c
  5673   0048F4  C04A  F021         	movff	i2getValue@value4,?i2_sprintf+3
  5674   0048F8  C04B  F022         	movff	i2getValue@value4+1,?i2_sprintf+4
  5675   0048FC  ECC4  F02D         	call	i2_sprintf	;wreg free
  5676   004900                     
  5677                           ;./keypad.h: 173:     LCD_String_xy(2,3,data);
  5678   004900  0E03               	movlw	3
  5679   004902  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  5680   004904  0E38               	movlw	low i2getValue@data
  5681   004906  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  5682   004908  6A0C               	clrf	(i2LCD_String_xy@msg+1)^0,c
  5683   00490A  0E02               	movlw	2
  5684   00490C  EC86  F02D         	call	i2_LCD_String_xy
  5685   004910                     
  5686                           ;./keypad.h: 175:     decimalValue = (value1 * 1000)+(value2 * 100)+(value3 * 10) + (val
      +                          ue4);
  5687   004910  C044  F001         	movff	i2getValue@value1,i2___wmul@multiplier
  5688   004914  C045  F002         	movff	i2getValue@value1+1,i2___wmul@multiplier+1
  5689   004918  0E03               	movlw	3
  5690   00491A  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5691   00491C  0EE8               	movlw	232
  5692   00491E  6E03               	movwf	i2___wmul@multiplicand^0,c
  5693   004920  EC8E  F02E         	call	i2___wmul	;wreg free
  5694   004924  C001  F032         	movff	?i2___wmul,??i2_getValue
  5695   004928  C002  F033         	movff	?i2___wmul+1,??i2_getValue+1
  5696   00492C  C046  F001         	movff	i2getValue@value2,i2___wmul@multiplier
  5697   004930  C047  F002         	movff	i2getValue@value2+1,i2___wmul@multiplier+1
  5698   004934  0E00               	movlw	0
  5699   004936  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5700   004938  0E64               	movlw	100
  5701   00493A  6E03               	movwf	i2___wmul@multiplicand^0,c
  5702   00493C  EC8E  F02E         	call	i2___wmul	;wreg free
  5703   004940  5001               	movf	?i2___wmul^0,w,c
  5704   004942  2432               	addwf	??i2_getValue^0,w,c
  5705   004944  6E34               	movwf	(??i2_getValue+2)^0,c
  5706   004946  5002               	movf	(?i2___wmul+1)^0,w,c
  5707   004948  2033               	addwfc	(??i2_getValue+1)^0,w,c
  5708   00494A  6E35               	movwf	(??i2_getValue+3)^0,c
  5709   00494C  C048  F001         	movff	i2getValue@value3,i2___wmul@multiplier
  5710   004950  C049  F002         	movff	i2getValue@value3+1,i2___wmul@multiplier+1
  5711   004954  0E00               	movlw	0
  5712   004956  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  5713   004958  0E0A               	movlw	10
  5714   00495A  6E03               	movwf	i2___wmul@multiplicand^0,c
  5715   00495C  EC8E  F02E         	call	i2___wmul	;wreg free
  5716   004960  5001               	movf	?i2___wmul^0,w,c
  5717   004962  2434               	addwf	(??i2_getValue+2)^0,w,c
  5718   004964  6E36               	movwf	(??i2_getValue+4)^0,c
  5719   004966  5002               	movf	(?i2___wmul+1)^0,w,c
  5720   004968  2035               	addwfc	(??i2_getValue+3)^0,w,c
  5721   00496A  6E37               	movwf	(??i2_getValue+5)^0,c
  5722   00496C  504A               	movf	i2getValue@value4^0,w,c
  5723   00496E  2436               	addwf	(??i2_getValue+4)^0,w,c
  5724   004970  6E42               	movwf	i2getValue@decimalValue^0,c
  5725   004972  504B               	movf	(i2getValue@value4+1)^0,w,c
  5726   004974  2037               	addwfc	(??i2_getValue+5)^0,w,c
  5727   004976  6E43               	movwf	(i2getValue@decimalValue+1)^0,c
  5728   004978                     
  5729                           ;./keypad.h: 176:     return decimalValue;
  5730   004978  C042  F030         	movff	i2getValue@decimalValue,?i2_getValue
  5731   00497C  C043  F031         	movff	i2getValue@decimalValue+1,?i2_getValue+1
  5732   004980  0012               	return		;funcret
  5733   004982                     __end_ofi2_getValue:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function i2_sprintf *****************
  5737 ;; Defined at:
  5738 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  s               1   29[COMRAM] PTR unsigned char 
  5741 ;;		 -> i2getValue@data(10), closeBox@d(10), openBox@d(10), getValue@data(10), 
  5742 ;;  fmt             2   30[COMRAM] PTR const unsigned char 
  5743 ;;		 -> STR_12(3), STR_10(3), STR_5(3), STR_4(3), 
  5744 ;;		 -> STR_3(3), STR_2(3), 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  f              12   35[COMRAM] struct _IO_FILE
  5747 ;;  ret             2    0        int 
  5748 ;;  ap              1   34[COMRAM] PTR void [1]
  5749 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  2   29[COMRAM] int 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5759 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5760 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5762 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5763 ;;Total ram usage:       18 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; Hardware stack levels required when called: 4
  5766 ;; This function calls:
  5767 ;;		i2_vfprintf
  5768 ;; This function is called by:
  5769 ;;		i2_getValue
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text35
  5774   005B88                     __ptext35:
  5775                           	callstack 0
  5776   005B88                     i2_sprintf:
  5777                           	callstack 18
  5778   005B88  0E21               	movlw	low (?i2_sprintf+3)
  5779   005B8A  6E23               	movwf	i2sprintf@ap^0,c
  5780   005B8C  C01E  F024         	movff	i2sprintf@s,i2sprintf@f
  5781   005B90  0E00               	movlw	0
  5782   005B92  6E28               	movwf	(i2sprintf@f+4)^0,c
  5783   005B94  0E00               	movlw	0
  5784   005B96  6E27               	movwf	(i2sprintf@f+3)^0,c
  5785   005B98  0E00               	movlw	0
  5786   005B9A  6E2F               	movwf	(i2sprintf@f+11)^0,c
  5787   005B9C  0E00               	movlw	0
  5788   005B9E  6E2E               	movwf	(i2sprintf@f+10)^0,c
  5789   005BA0  0E24               	movlw	low i2sprintf@f
  5790   005BA2  6E18               	movwf	i2vfprintf@fp^0,c
  5791   005BA4  C01F  F019         	movff	i2sprintf@fmt,i2vfprintf@fmt
  5792   005BA8  C020  F01A         	movff	i2sprintf@fmt+1,i2vfprintf@fmt+1
  5793   005BAC  0E23               	movlw	low i2sprintf@ap
  5794   005BAE  6E1B               	movwf	i2vfprintf@ap^0,c
  5795   005BB0  EC41  F02D         	call	i2_vfprintf	;wreg free
  5796   005BB4  501E               	movf	i2sprintf@s^0,w,c
  5797   005BB6  2427               	addwf	(i2sprintf@f+3)^0,w,c
  5798   005BB8  6ED9               	movwf	fsr2l,c
  5799   005BBA  6ADA               	clrf	fsr2h,c
  5800   005BBC  6ADF               	clrf	indf2,c
  5801   005BBE  0012               	return		;funcret
  5802   005BC0                     __end_ofi2_sprintf:
  5803                           	callstack 0
  5804                           
  5805 ;; *************** function i2_vfprintf *****************
  5806 ;; Defined at:
  5807 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  5810 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  5811 ;;  fmt             2   24[COMRAM] PTR const unsigned char 
  5812 ;;		 -> STR_12(3), STR_10(3), STR_5(3), STR_4(3), 
  5813 ;;		 -> STR_3(3), STR_2(3), 
  5814 ;;  ap              1   26[COMRAM] PTR PTR void 
  5815 ;;		 -> i2sprintf@ap(1), sprintf@ap(1), 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  cfmt            2   27[COMRAM] PTR unsigned char 
  5818 ;;		 -> STR_12(3), STR_10(3), STR_5(3), STR_4(3), 
  5819 ;;		 -> STR_3(3), STR_2(3), 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  2   23[COMRAM] int 
  5822 ;; Registers used:
  5823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5832 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5833 ;;Total ram usage:        6 bytes
  5834 ;; Hardware stack levels used: 1
  5835 ;; Hardware stack levels required when called: 3
  5836 ;; This function calls:
  5837 ;;		i2_vfpfcnvrt
  5838 ;; This function is called by:
  5839 ;;		i2_sprintf
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           	psect	text36
  5844   005A82                     __ptext36:
  5845                           	callstack 0
  5846   005A82                     i2_vfprintf:
  5847                           	callstack 18
  5848   005A82                     
  5849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5850   005A82  C019  F01C         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  5851   005A86  C01A  F01D         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  5852                           
  5853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5854   005A8A  EF4F  F02D         	goto	i2l2502
  5855   005A8E                     i2l2500:
  5856                           
  5857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5858   005A8E  C018  F00B         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  5859   005A92  0E1C               	movlw	low i2vfprintf@cfmt
  5860   005A94  6E0C               	movwf	i2vfpfcnvrt@fmt^0,c
  5861   005A96  C01B  F00D         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  5862   005A9A  ECBE  F025         	call	i2_vfpfcnvrt	;wreg free
  5863   005A9E                     i2l2502:
  5864                           
  5865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5866   005A9E  0060  F073  FFF6   	movff	i2vfprintf@cfmt,tblptrl
  5867   005AA4  0060  F077  FFF7   	movff	i2vfprintf@cfmt+1,tblptrh
  5868   005AAA                     	if	0	;tblptru may be non-zero
  5869   005AAA                     	endif
  5870   005AAA                     	if	0	;tblptru may be non-zero
  5871   005AAA                     	endif
  5872   005AAA  0008               	tblrd		*
  5873   005AAC  50F5               	movf	tablat,w,c
  5874   005AAE  0900               	iorlw	0
  5875   005AB0  A4D8               	btfss	status,2,c
  5876   005AB2  EF5D  F02D         	goto	i2u217_41
  5877   005AB6  EF5F  F02D         	goto	i2u217_40
  5878   005ABA                     i2u217_41:
  5879   005ABA  EF47  F02D         	goto	i2l2500
  5880   005ABE                     i2u217_40:
  5881   005ABE                     
  5882                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5883   005ABE  0E00               	movlw	0
  5884   005AC0  6E19               	movwf	(?i2_vfprintf+1)^0,c
  5885   005AC2  0E00               	movlw	0
  5886   005AC4  6E18               	movwf	?i2_vfprintf^0,c
  5887   005AC6  0012               	return		;funcret
  5888   005AC8                     __end_ofi2_vfprintf:
  5889                           	callstack 0
  5890                           
  5891 ;; *************** function i2_vfpfcnvrt *****************
  5892 ;; Defined at:
  5893 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  5896 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  5897 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  5898 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  5899 ;;  ap              1   12[COMRAM] PTR PTR void 
  5900 ;;		 -> i2sprintf@ap(1), sprintf@ap(1), 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;  convarg         4   18[COMRAM] struct .
  5903 ;;  cp              2   16[COMRAM] PTR unsigned char 
  5904 ;;		 -> STR_12(3), STR_10(3), STR_5(3), STR_4(3), 
  5905 ;;		 -> STR_3(3), STR_2(3), 
  5906 ;;  c               1   22[COMRAM] unsigned char 
  5907 ;;  done            1   15[COMRAM] _Bool 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5917 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5918 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5920 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5921 ;;Total ram usage:       13 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 2
  5924 ;; This function calls:
  5925 ;;		i2___awdiv
  5926 ;;		i2___awmod
  5927 ;;		i2_abs
  5928 ;;		i2_fputc
  5929 ;; This function is called by:
  5930 ;;		i2_vfprintf
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text37
  5935   004B7C                     __ptext37:
  5936                           	callstack 0
  5937   004B7C                     i2_vfpfcnvrt:
  5938                           	callstack 18
  5939   004B7C                     
  5940                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5941   004B7C  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  5942   004B7E  6ED9               	movwf	fsr2l,c
  5943   004B80  6ADA               	clrf	fsr2h,c
  5944   004B82  006F FF7B FFF6     	movff	postinc2,tblptrl
  5945   004B88  006F FF77 FFF7     	movff	postdec2,tblptrh
  5946   004B8E                     	if	0	;tblptru may be non-zero
  5947   004B8E                     	endif
  5948   004B8E                     	if	0	;tblptru may be non-zero
  5949   004B8E                     	endif
  5950   004B8E  0008               	tblrd		*
  5951   004B90  50F5               	movf	tablat,w,c
  5952   004B92  0A25               	xorlw	37
  5953   004B94  A4D8               	btfss	status,2,c
  5954   004B96  EFCF  F025         	goto	i2u200_41
  5955   004B9A  EFD1  F025         	goto	i2u200_40
  5956   004B9E                     i2u200_41:
  5957   004B9E  EFA3  F026         	goto	i2l2442
  5958   004BA2                     i2u200_40:
  5959   004BA2                     
  5960                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5961   004BA2  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  5962   004BA4  6ED9               	movwf	fsr2l,c
  5963   004BA6  6ADA               	clrf	fsr2h,c
  5964   004BA8  2ADE               	incf	postinc2,f,c
  5965   004BAA  0E00               	movlw	0
  5966   004BAC  22DD               	addwfc	postdec2,f,c
  5967   004BAE                     
  5968                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5969   004BAE  0E00               	movlw	0
  5970   004BB0  0100               	movlb	0	; () banked
  5971   004BB2  6FD4               	movwf	(_width+1)& (0+255),b
  5972   004BB4  0E00               	movlw	0
  5973   004BB6  6FD3               	movwf	_width& (0+255),b
  5974   004BB8  C0D3  F0D9         	movff	_width,_flags
  5975   004BBC                     
  5976                           ; BSR set to: 0
  5977                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5978   004BBC  69D5               	setf	_prec& (0+255),b
  5979   004BBE  69D6               	setf	(_prec+1)& (0+255),b
  5980   004BC0                     
  5981                           ; BSR set to: 0
  5982                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5983   004BC0  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  5984   004BC2  6ED9               	movwf	fsr2l,c
  5985   004BC4  6ADA               	clrf	fsr2h,c
  5986   004BC6  006F FF78  F011    	movff	postinc2,i2vfpfcnvrt@cp
  5987   004BCC  006F FF74  F012    	movff	postdec2,i2vfpfcnvrt@cp+1
  5988   004BD2                     
  5989                           ; BSR set to: 0
  5990                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5991   004BD2  0060  F047  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
  5992   004BD8  0060  F04B  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
  5993   004BDE                     	if	0	;tblptru may be non-zero
  5994   004BDE                     	endif
  5995   004BDE                     	if	0	;tblptru may be non-zero
  5996   004BDE                     	endif
  5997   004BDE  0008               	tblrd		*
  5998   004BE0  50F5               	movf	tablat,w,c
  5999   004BE2  0A64               	xorlw	100
  6000   004BE4  B4D8               	btfsc	status,2,c
  6001   004BE6  EFF7  F025         	goto	i2u201_41
  6002   004BEA  EFF9  F025         	goto	i2u201_40
  6003   004BEE                     i2u201_41:
  6004   004BEE  EF09  F026         	goto	i2l2412
  6005   004BF2                     i2u201_40:
  6006   004BF2                     
  6007                           ; BSR set to: 0
  6008   004BF2  0060  F047  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
  6009   004BF8  0060  F04B  FFF7   	movff	i2vfpfcnvrt@cp+1,tblptrh
  6010   004BFE                     	if	0	;tblptru may be non-zero
  6011   004BFE                     	endif
  6012   004BFE                     	if	0	;tblptru may be non-zero
  6013   004BFE                     	endif
  6014   004BFE  0008               	tblrd		*
  6015   004C00  50F5               	movf	tablat,w,c
  6016   004C02  0A69               	xorlw	105
  6017   004C04  A4D8               	btfss	status,2,c
  6018   004C06  EF07  F026         	goto	i2u202_41
  6019   004C0A  EF09  F026         	goto	i2u202_40
  6020   004C0E                     i2u202_41:
  6021   004C0E  EF9B  F026         	goto	i2l2438
  6022   004C12                     i2u202_40:
  6023   004C12                     i2l2412:
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6027   004C12  500D               	movf	i2vfpfcnvrt@ap^0,w,c
  6028   004C14  6ED9               	movwf	fsr2l,c
  6029   004C16  6ADA               	clrf	fsr2h,c
  6030   004C18  0E02               	movlw	2
  6031   004C1A  26DF               	addwf	indf2,f,c
  6032   004C1C  5CDF               	subwf	indf2,w,c
  6033   004C1E  6ED9               	movwf	fsr2l,c
  6034   004C20  6ADA               	clrf	fsr2h,c
  6035   004C22  006F FF78  F013    	movff	postinc2,i2vfpfcnvrt@convarg
  6036   004C28  006F FF78  F014    	movff	postinc2,i2vfpfcnvrt@convarg+1
  6037   004C2E                     
  6038                           ; BSR set to: 0
  6039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6040   004C2E  0E01               	movlw	1
  6041   004C30  2411               	addwf	i2vfpfcnvrt@cp^0,w,c
  6042   004C32  6E0E               	movwf	??i2_vfpfcnvrt^0,c
  6043   004C34  0E00               	movlw	0
  6044   004C36  2012               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  6045   004C38  6E0F               	movwf	(??i2_vfpfcnvrt+1)^0,c
  6046   004C3A  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  6047   004C3C  6ED9               	movwf	fsr2l,c
  6048   004C3E  6ADA               	clrf	fsr2h,c
  6049   004C40  0060  F03B  FFDE   	movff	??i2_vfpfcnvrt,postinc2
  6050   004C46  0060  F03F  FFDD   	movff	??i2_vfpfcnvrt+1,postdec2
  6051   004C4C                     
  6052                           ; BSR set to: 0
  6053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  6054   004C4C  0E20               	movlw	32
  6055   004C4E  6E17               	movwf	i2vfpfcnvrt@c^0,c
  6056                           
  6057                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  6058   004C50  BE14               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
  6059   004C52  EF2D  F026         	goto	i2u203_41
  6060   004C56  EF30  F026         	goto	i2u203_40
  6061   004C5A                     i2u203_41:
  6062   004C5A  0E01               	movlw	1
  6063   004C5C  EF31  F026         	goto	i2u204_40
  6064   004C60                     i2u203_40:
  6065   004C60  0E00               	movlw	0
  6066   004C62                     i2u204_40:
  6067   004C62  6E10               	movwf	i2vfpfcnvrt@done^0,c
  6068   004C64                     i2l2418:
  6069                           
  6070                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  6071   004C64  0617               	decf	i2vfpfcnvrt@c^0,f,c
  6072   004C66  5017               	movf	i2vfpfcnvrt@c^0,w,c
  6073   004C68  0FB3               	addlw	low _dbuf
  6074   004C6A  6ED9               	movwf	fsr2l,c
  6075   004C6C  6ADA               	clrf	fsr2h,c
  6076   004C6E  C013  F001         	movff	i2vfpfcnvrt@convarg,i2___awmod@dividend
  6077   004C72  C014  F002         	movff	i2vfpfcnvrt@convarg+1,i2___awmod@dividend+1
  6078   004C76  0E00               	movlw	0
  6079   004C78  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  6080   004C7A  0E0A               	movlw	10
  6081   004C7C  6E03               	movwf	i2___awmod@divisor^0,c
  6082   004C7E  EC34  F02B         	call	i2___awmod	;wreg free
  6083   004C82  C001  F007         	movff	?i2___awmod,i2abs@a
  6084   004C86  C002  F008         	movff	?i2___awmod+1,i2abs@a+1
  6085   004C8A  EC16  F02E         	call	i2_abs	;wreg free
  6086   004C8E  5007               	movf	?i2_abs^0,w,c
  6087   004C90  0F30               	addlw	48
  6088   004C92  6EDF               	movwf	indf2,c
  6089   004C94                     
  6090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  6091   004C94  C013  F001         	movff	i2vfpfcnvrt@convarg,i2___awdiv@dividend
  6092   004C98  C014  F002         	movff	i2vfpfcnvrt@convarg+1,i2___awdiv@dividend+1
  6093   004C9C  0E00               	movlw	0
  6094   004C9E  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  6095   004CA0  0E0A               	movlw	10
  6096   004CA2  6E03               	movwf	i2___awdiv@divisor^0,c
  6097   004CA4  EC79  F02A         	call	i2___awdiv	;wreg free
  6098   004CA8  C001  F013         	movff	?i2___awdiv,i2vfpfcnvrt@convarg
  6099   004CAC  C002  F014         	movff	?i2___awdiv+1,i2vfpfcnvrt@convarg+1
  6100   004CB0                     
  6101                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  6102   004CB0  5013               	movf	i2vfpfcnvrt@convarg^0,w,c
  6103   004CB2  1014               	iorwf	(i2vfpfcnvrt@convarg+1)^0,w,c
  6104   004CB4  B4D8               	btfsc	status,2,c
  6105   004CB6  EF5F  F026         	goto	i2u205_41
  6106   004CBA  EF61  F026         	goto	i2u205_40
  6107   004CBE                     i2u205_41:
  6108   004CBE  EF69  F026         	goto	i2l2426
  6109   004CC2                     i2u205_40:
  6110   004CC2  5017               	movf	i2vfpfcnvrt@c^0,w,c
  6111   004CC4  A4D8               	btfss	status,2,c
  6112   004CC6  EF67  F026         	goto	i2u206_41
  6113   004CCA  EF69  F026         	goto	i2u206_40
  6114   004CCE                     i2u206_41:
  6115   004CCE  EF32  F026         	goto	i2l2418
  6116   004CD2                     i2u206_40:
  6117   004CD2                     i2l2426:
  6118                           
  6119                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  6120   004CD2  5017               	movf	i2vfpfcnvrt@c^0,w,c
  6121   004CD4  B4D8               	btfsc	status,2,c
  6122   004CD6  EF6F  F026         	goto	i2u207_41
  6123   004CDA  EF71  F026         	goto	i2u207_40
  6124   004CDE                     i2u207_41:
  6125   004CDE  EF90  F026         	goto	i2l2436
  6126   004CE2                     i2u207_40:
  6127   004CE2  5010               	movf	i2vfpfcnvrt@done^0,w,c
  6128   004CE4  B4D8               	btfsc	status,2,c
  6129   004CE6  EF77  F026         	goto	i2u208_41
  6130   004CEA  EF79  F026         	goto	i2u208_40
  6131   004CEE                     i2u208_41:
  6132   004CEE  EF90  F026         	goto	i2l2436
  6133   004CF2                     i2u208_40:
  6134   004CF2                     
  6135                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  6136   004CF2  0617               	decf	i2vfpfcnvrt@c^0,f,c
  6137   004CF4  5017               	movf	i2vfpfcnvrt@c^0,w,c
  6138   004CF6  0FB3               	addlw	low _dbuf
  6139   004CF8  6ED9               	movwf	fsr2l,c
  6140   004CFA  6ADA               	clrf	fsr2h,c
  6141   004CFC  0E2D               	movlw	45
  6142   004CFE  6EDF               	movwf	indf2,c
  6143   004D00  EF90  F026         	goto	i2l2436
  6144   004D04                     i2l2432:
  6145                           
  6146                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  6147   004D04  5017               	movf	i2vfpfcnvrt@c^0,w,c
  6148   004D06  0FB3               	addlw	low _dbuf
  6149   004D08  6ED9               	movwf	fsr2l,c
  6150   004D0A  6ADA               	clrf	fsr2h,c
  6151   004D0C  50DF               	movf	indf2,w,c
  6152   004D0E  6E0E               	movwf	??i2_vfpfcnvrt^0,c
  6153   004D10  500E               	movf	??i2_vfpfcnvrt^0,w,c
  6154   004D12  6E01               	movwf	i2fputc@c^0,c
  6155   004D14  6A02               	clrf	(i2fputc@c+1)^0,c
  6156   004D16  C00B  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6157   004D1A  ECE3  F02B         	call	i2_fputc	;wreg free
  6158   004D1E  2A17               	incf	i2vfpfcnvrt@c^0,f,c
  6159   004D20                     i2l2436:
  6160                           
  6161                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  6162   004D20  0E20               	movlw	32
  6163   004D22  1817               	xorwf	i2vfpfcnvrt@c^0,w,c
  6164   004D24  A4D8               	btfss	status,2,c
  6165   004D26  EF97  F026         	goto	i2u209_41
  6166   004D2A  EF99  F026         	goto	i2u209_40
  6167   004D2E                     i2u209_41:
  6168   004D2E  EF82  F026         	goto	i2l2432
  6169   004D32                     i2u209_40:
  6170   004D32  EFB6  F026         	goto	i2l1060
  6171   004D36                     i2l2438:
  6172                           
  6173                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6174   004D36  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  6175   004D38  6ED9               	movwf	fsr2l,c
  6176   004D3A  6ADA               	clrf	fsr2h,c
  6177   004D3C  2ADE               	incf	postinc2,f,c
  6178   004D3E  0E00               	movlw	0
  6179   004D40  22DD               	addwfc	postdec2,f,c
  6180   004D42  EFB6  F026         	goto	i2l1060
  6181   004D46                     i2l2442:
  6182                           
  6183                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6184   004D46  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  6185   004D48  6ED9               	movwf	fsr2l,c
  6186   004D4A  6ADA               	clrf	fsr2h,c
  6187   004D4C  006F FF7B FFF6     	movff	postinc2,tblptrl
  6188   004D52  006F FF77 FFF7     	movff	postdec2,tblptrh
  6189   004D58                     	if	0	;tblptru may be non-zero
  6190   004D58                     	endif
  6191   004D58                     	if	0	;tblptru may be non-zero
  6192   004D58                     	endif
  6193   004D58  0008               	tblrd		*
  6194   004D5A  50F5               	movf	tablat,w,c
  6195   004D5C  6E01               	movwf	i2fputc@c^0,c
  6196   004D5E  6A02               	clrf	(i2fputc@c+1)^0,c
  6197   004D60  C00B  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  6198   004D64  ECE3  F02B         	call	i2_fputc	;wreg free
  6199   004D68  EF9B  F026         	goto	i2l2438
  6200   004D6C                     i2l1060:
  6201   004D6C  0012               	return		;funcret
  6202   004D6E                     __end_ofi2_vfpfcnvrt:
  6203                           	callstack 0
  6204                           
  6205 ;; *************** function i2_fputc *****************
  6206 ;; Defined at:
  6207 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  c               2    0[COMRAM] int 
  6210 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6211 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  2    0[COMRAM] int 
  6216 ;; Registers used:
  6217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6223 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6225 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6226 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6227 ;;Total ram usage:        8 bytes
  6228 ;; Hardware stack levels used: 1
  6229 ;; Hardware stack levels required when called: 1
  6230 ;; This function calls:
  6231 ;;		i2_putch
  6232 ;; This function is called by:
  6233 ;;		i2_vfpfcnvrt
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text38
  6238   0057C6                     __ptext38:
  6239                           	callstack 0
  6240   0057C6                     i2_fputc:
  6241                           	callstack 18
  6242   0057C6  5003               	movf	i2fputc@fp^0,w,c
  6243   0057C8  B4D8               	btfsc	status,2,c
  6244   0057CA  EFE9  F02B         	goto	i2u186_41
  6245   0057CE  EFEB  F02B         	goto	i2u186_40
  6246   0057D2                     i2u186_41:
  6247   0057D2  EFF3  F02B         	goto	i2l2314
  6248   0057D6                     i2u186_40:
  6249   0057D6  5003               	movf	i2fputc@fp^0,w,c
  6250   0057D8  A4D8               	btfss	status,2,c
  6251   0057DA  EFF1  F02B         	goto	i2u187_41
  6252   0057DE  EFF3  F02B         	goto	i2u187_40
  6253   0057E2                     i2u187_41:
  6254   0057E2  EFF8  F02B         	goto	i2l2316
  6255   0057E6                     i2u187_40:
  6256   0057E6                     i2l2314:
  6257   0057E6  5001               	movf	i2fputc@c^0,w,c
  6258   0057E8  EC51  F02F         	call	i2_putch
  6259   0057EC  EF38  F02C         	goto	i2l1085
  6260   0057F0                     i2l2316:
  6261   0057F0  5003               	movf	i2fputc@fp^0,w,c
  6262   0057F2  6ED9               	movwf	fsr2l,c
  6263   0057F4  6ADA               	clrf	fsr2h,c
  6264   0057F6  0E0A               	movlw	10
  6265   0057F8  26D9               	addwf	fsr2l,f,c
  6266   0057FA  50DE               	movf	postinc2,w,c
  6267   0057FC  10DE               	iorwf	postinc2,w,c
  6268   0057FE  B4D8               	btfsc	status,2,c
  6269   005800  EF04  F02C         	goto	i2u188_41
  6270   005804  EF06  F02C         	goto	i2u188_40
  6271   005808                     i2u188_41:
  6272   005808  EF1F  F02C         	goto	i2l2320
  6273   00580C                     i2u188_40:
  6274   00580C  5003               	movf	i2fputc@fp^0,w,c
  6275   00580E  6ED9               	movwf	fsr2l,c
  6276   005810  6ADA               	clrf	fsr2h,c
  6277   005812  0E0A               	movlw	10
  6278   005814  26D9               	addwf	fsr2l,f,c
  6279   005816  5003               	movf	i2fputc@fp^0,w,c
  6280   005818  6EE1               	movwf	fsr1l,c
  6281   00581A  6AE2               	clrf	fsr1h,c
  6282   00581C  0E03               	movlw	3
  6283   00581E  26E1               	addwf	fsr1l,f,c
  6284   005820  50DE               	movf	postinc2,w,c
  6285   005822  5CE6               	subwf	postinc1,w,c
  6286   005824  50E6               	movf	postinc1,w,c
  6287   005826  0A80               	xorlw	128
  6288   005828  6E08               	movwf	(??i2_fputc+4)^0,c
  6289   00582A  50DE               	movf	postinc2,w,c
  6290   00582C  0A80               	xorlw	128
  6291   00582E  5808               	subwfb	(??i2_fputc+4)^0,w,c
  6292   005830  B0D8               	btfsc	status,0,c
  6293   005832  EF1D  F02C         	goto	i2u189_41
  6294   005836  EF1F  F02C         	goto	i2u189_40
  6295   00583A                     i2u189_41:
  6296   00583A  EF38  F02C         	goto	i2l1085
  6297   00583E                     i2u189_40:
  6298   00583E                     i2l2320:
  6299   00583E  5003               	movf	i2fputc@fp^0,w,c
  6300   005840  6ED9               	movwf	fsr2l,c
  6301   005842  6ADA               	clrf	fsr2h,c
  6302   005844  0E03               	movlw	3
  6303   005846  26D9               	addwf	fsr2l,f,c
  6304   005848  50DF               	movf	indf2,w,c
  6305   00584A  6E04               	movwf	??i2_fputc^0,c
  6306   00584C  5003               	movf	i2fputc@fp^0,w,c
  6307   00584E  6ED9               	movwf	fsr2l,c
  6308   005850  6ADA               	clrf	fsr2h,c
  6309   005852  50DF               	movf	indf2,w,c
  6310   005854  2404               	addwf	??i2_fputc^0,w,c
  6311   005856  6ED9               	movwf	fsr2l,c
  6312   005858  6ADA               	clrf	fsr2h,c
  6313   00585A  0060  F007  FFDF   	movff	i2fputc@c,indf2
  6314   005860  5003               	movf	i2fputc@fp^0,w,c
  6315   005862  6ED9               	movwf	fsr2l,c
  6316   005864  6ADA               	clrf	fsr2h,c
  6317   005866  0E03               	movlw	3
  6318   005868  26D9               	addwf	fsr2l,f,c
  6319   00586A  2ADE               	incf	postinc2,f,c
  6320   00586C  0E00               	movlw	0
  6321   00586E  22DD               	addwfc	postdec2,f,c
  6322   005870                     i2l1085:
  6323   005870  0012               	return		;funcret
  6324   005872                     __end_ofi2_fputc:
  6325                           	callstack 0
  6326                           
  6327 ;; *************** function i2_putch *****************
  6328 ;; Defined at:
  6329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  c               1    wreg     unsigned char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  c               1  (no storage) unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6347 ;;Total ram usage:        0 bytes
  6348 ;; Hardware stack levels used: 1
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		i2_fputc
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text39
  6357   005EA2                     __ptext39:
  6358                           	callstack 0
  6359   005EA2                     i2_putch:
  6360                           	callstack 18
  6361   005EA2  0012               	return		;funcret
  6362   005EA4                     __end_ofi2_putch:
  6363                           	callstack 0
  6364                           
  6365 ;; *************** function i2_abs *****************
  6366 ;; Defined at:
  6367 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  a               2    6[COMRAM] int 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  2    6[COMRAM] int 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6385 ;;Total ram usage:        4 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		i2_vfpfcnvrt
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text40
  6395   005C2C                     __ptext40:
  6396                           	callstack 0
  6397   005C2C                     i2_abs:
  6398                           	callstack 19
  6399   005C2C  BE08               	btfsc	(i2abs@a+1)^0,7,c
  6400   005C2E  EF1B  F02E         	goto	i2u185_41
  6401   005C32  EF1D  F02E         	goto	i2u185_40
  6402   005C36                     i2u185_41:
  6403   005C36  EF23  F02E         	goto	i2l1070
  6404   005C3A                     i2u185_40:
  6405   005C3A  C007  F007         	movff	i2abs@a,?i2_abs
  6406   005C3E  C008  F008         	movff	i2abs@a+1,?i2_abs+1
  6407   005C42  EF2F  F02E         	goto	i2l1073
  6408   005C46                     i2l1070:
  6409   005C46  C007  F009         	movff	i2abs@a,??i2_abs
  6410   005C4A  C008  F00A         	movff	i2abs@a+1,??i2_abs+1
  6411   005C4E  1E09               	comf	??i2_abs^0,f,c
  6412   005C50  1E0A               	comf	(??i2_abs+1)^0,f,c
  6413   005C52  4A09               	infsnz	??i2_abs^0,f,c
  6414   005C54  2A0A               	incf	(??i2_abs+1)^0,f,c
  6415   005C56  C009  F007         	movff	??i2_abs,?i2_abs
  6416   005C5A  C00A  F008         	movff	??i2_abs+1,?i2_abs+1
  6417   005C5E                     i2l1073:
  6418   005C5E  0012               	return		;funcret
  6419   005C60                     __end_ofi2_abs:
  6420                           	callstack 0
  6421                           
  6422 ;; *************** function i2___awmod *****************
  6423 ;; Defined at:
  6424 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  dividend        2    0[COMRAM] int 
  6427 ;;  divisor         2    2[COMRAM] int 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  sign            1    5[COMRAM] unsigned char 
  6430 ;;  counter         1    4[COMRAM] unsigned char 
  6431 ;; Return value:  Size  Location     Type
  6432 ;;                  2    0[COMRAM] int 
  6433 ;; Registers used:
  6434 ;;		wreg, status,2, status,0
  6435 ;; Tracked objects:
  6436 ;;		On entry : 0/0
  6437 ;;		On exit  : 0/0
  6438 ;;		Unchanged: 0/0
  6439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6443 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6444 ;;Total ram usage:        6 bytes
  6445 ;; Hardware stack levels used: 1
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_INT0_ISR
  6450 ;;		i2_vfpfcnvrt
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text41
  6455   005668                     __ptext41:
  6456                           	callstack 0
  6457   005668                     i2___awmod:
  6458                           	callstack 19
  6459   005668  0E00               	movlw	0
  6460   00566A  6E06               	movwf	i2___awmod@sign^0,c
  6461   00566C  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  6462   00566E  EF3D  F02B         	goto	i2u179_40
  6463   005672  EF3B  F02B         	goto	i2u179_41
  6464   005676                     i2u179_41:
  6465   005676  EF43  F02B         	goto	i2l2278
  6466   00567A                     i2u179_40:
  6467   00567A  6C01               	negf	i2___awmod@dividend^0,c
  6468   00567C  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6469   00567E  B0D8               	btfsc	status,0,c
  6470   005680  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6471   005682  0E01               	movlw	1
  6472   005684  6E06               	movwf	i2___awmod@sign^0,c
  6473   005686                     i2l2278:
  6474   005686  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  6475   005688  EF4A  F02B         	goto	i2u180_40
  6476   00568C  EF48  F02B         	goto	i2u180_41
  6477   005690                     i2u180_41:
  6478   005690  EF4E  F02B         	goto	i2l2282
  6479   005694                     i2u180_40:
  6480   005694  6C03               	negf	i2___awmod@divisor^0,c
  6481   005696  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  6482   005698  B0D8               	btfsc	status,0,c
  6483   00569A  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  6484   00569C                     i2l2282:
  6485   00569C  5003               	movf	i2___awmod@divisor^0,w,c
  6486   00569E  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  6487   0056A0  B4D8               	btfsc	status,2,c
  6488   0056A2  EF55  F02B         	goto	i2u181_41
  6489   0056A6  EF57  F02B         	goto	i2u181_40
  6490   0056AA                     i2u181_41:
  6491   0056AA  EF7B  F02B         	goto	i2l2298
  6492   0056AE                     i2u181_40:
  6493   0056AE  0E01               	movlw	1
  6494   0056B0  6E05               	movwf	i2___awmod@counter^0,c
  6495   0056B2  EF5F  F02B         	goto	i2l2288
  6496   0056B6                     i2l2286:
  6497   0056B6  90D8               	bcf	status,0,c
  6498   0056B8  3603               	rlcf	i2___awmod@divisor^0,f,c
  6499   0056BA  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  6500   0056BC  2A05               	incf	i2___awmod@counter^0,f,c
  6501   0056BE                     i2l2288:
  6502   0056BE  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  6503   0056C0  EF64  F02B         	goto	i2u182_41
  6504   0056C4  EF66  F02B         	goto	i2u182_40
  6505   0056C8                     i2u182_41:
  6506   0056C8  EF5B  F02B         	goto	i2l2286
  6507   0056CC                     i2u182_40:
  6508   0056CC                     i2l2290:
  6509   0056CC  5003               	movf	i2___awmod@divisor^0,w,c
  6510   0056CE  5C01               	subwf	i2___awmod@dividend^0,w,c
  6511   0056D0  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6512   0056D2  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  6513   0056D4  A0D8               	btfss	status,0,c
  6514   0056D6  EF6F  F02B         	goto	i2u183_41
  6515   0056DA  EF71  F02B         	goto	i2u183_40
  6516   0056DE                     i2u183_41:
  6517   0056DE  EF75  F02B         	goto	i2l2294
  6518   0056E2                     i2u183_40:
  6519   0056E2  5003               	movf	i2___awmod@divisor^0,w,c
  6520   0056E4  5E01               	subwf	i2___awmod@dividend^0,f,c
  6521   0056E6  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  6522   0056E8  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  6523   0056EA                     i2l2294:
  6524   0056EA  90D8               	bcf	status,0,c
  6525   0056EC  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  6526   0056EE  3203               	rrcf	i2___awmod@divisor^0,f,c
  6527   0056F0  2E05               	decfsz	i2___awmod@counter^0,f,c
  6528   0056F2  EF66  F02B         	goto	i2l2290
  6529   0056F6                     i2l2298:
  6530   0056F6  5006               	movf	i2___awmod@sign^0,w,c
  6531   0056F8  B4D8               	btfsc	status,2,c
  6532   0056FA  EF81  F02B         	goto	i2u184_41
  6533   0056FE  EF83  F02B         	goto	i2u184_40
  6534   005702                     i2u184_41:
  6535   005702  EF87  F02B         	goto	i2l2302
  6536   005706                     i2u184_40:
  6537   005706  6C01               	negf	i2___awmod@dividend^0,c
  6538   005708  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  6539   00570A  B0D8               	btfsc	status,0,c
  6540   00570C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  6541   00570E                     i2l2302:
  6542   00570E  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  6543   005712  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  6544   005716  0012               	return		;funcret
  6545   005718                     __end_ofi2___awmod:
  6546                           	callstack 0
  6547                           
  6548 ;; *************** function i2___awdiv *****************
  6549 ;; Defined at:
  6550 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  dividend        2    0[COMRAM] int 
  6553 ;;  divisor         2    2[COMRAM] int 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  quotient        2    6[COMRAM] int 
  6556 ;;  sign            1    5[COMRAM] unsigned char 
  6557 ;;  counter         1    4[COMRAM] unsigned char 
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  2    0[COMRAM] int 
  6560 ;; Registers used:
  6561 ;;		wreg, status,2, status,0
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6568 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6570 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6571 ;;Total ram usage:        8 bytes
  6572 ;; Hardware stack levels used: 1
  6573 ;; This function calls:
  6574 ;;		Nothing
  6575 ;; This function is called by:
  6576 ;;		_INT0_ISR
  6577 ;;		i2_vfpfcnvrt
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           	psect	text42
  6582   0054F2                     __ptext42:
  6583                           	callstack 0
  6584   0054F2                     i2___awdiv:
  6585                           	callstack 19
  6586   0054F2  0E00               	movlw	0
  6587   0054F4  6E06               	movwf	i2___awdiv@sign^0,c
  6588   0054F6  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  6589   0054F8  EF82  F02A         	goto	i2u173_40
  6590   0054FC  EF80  F02A         	goto	i2u173_41
  6591   005500                     i2u173_41:
  6592   005500  EF88  F02A         	goto	i2l2234
  6593   005504                     i2u173_40:
  6594   005504  6C03               	negf	i2___awdiv@divisor^0,c
  6595   005506  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  6596   005508  B0D8               	btfsc	status,0,c
  6597   00550A  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  6598   00550C  0E01               	movlw	1
  6599   00550E  6E06               	movwf	i2___awdiv@sign^0,c
  6600   005510                     i2l2234:
  6601   005510  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  6602   005512  EF8F  F02A         	goto	i2u174_40
  6603   005516  EF8D  F02A         	goto	i2u174_41
  6604   00551A                     i2u174_41:
  6605   00551A  EF95  F02A         	goto	i2l2240
  6606   00551E                     i2u174_40:
  6607   00551E  6C01               	negf	i2___awdiv@dividend^0,c
  6608   005520  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  6609   005522  B0D8               	btfsc	status,0,c
  6610   005524  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  6611   005526  0E01               	movlw	1
  6612   005528  1A06               	xorwf	i2___awdiv@sign^0,f,c
  6613   00552A                     i2l2240:
  6614   00552A  0E00               	movlw	0
  6615   00552C  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  6616   00552E  0E00               	movlw	0
  6617   005530  6E07               	movwf	i2___awdiv@quotient^0,c
  6618   005532  5003               	movf	i2___awdiv@divisor^0,w,c
  6619   005534  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  6620   005536  B4D8               	btfsc	status,2,c
  6621   005538  EFA0  F02A         	goto	i2u175_41
  6622   00553C  EFA2  F02A         	goto	i2u175_40
  6623   005540                     i2u175_41:
  6624   005540  EFCA  F02A         	goto	i2l2262
  6625   005544                     i2u175_40:
  6626   005544  0E01               	movlw	1
  6627   005546  6E05               	movwf	i2___awdiv@counter^0,c
  6628   005548  EFAA  F02A         	goto	i2l2248
  6629   00554C                     i2l2246:
  6630   00554C  90D8               	bcf	status,0,c
  6631   00554E  3603               	rlcf	i2___awdiv@divisor^0,f,c
  6632   005550  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  6633   005552  2A05               	incf	i2___awdiv@counter^0,f,c
  6634   005554                     i2l2248:
  6635   005554  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  6636   005556  EFAF  F02A         	goto	i2u176_41
  6637   00555A  EFB1  F02A         	goto	i2u176_40
  6638   00555E                     i2u176_41:
  6639   00555E  EFA6  F02A         	goto	i2l2246
  6640   005562                     i2u176_40:
  6641   005562                     i2l2250:
  6642   005562  90D8               	bcf	status,0,c
  6643   005564  3607               	rlcf	i2___awdiv@quotient^0,f,c
  6644   005566  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  6645   005568  5003               	movf	i2___awdiv@divisor^0,w,c
  6646   00556A  5C01               	subwf	i2___awdiv@dividend^0,w,c
  6647   00556C  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  6648   00556E  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  6649   005570  A0D8               	btfss	status,0,c
  6650   005572  EFBD  F02A         	goto	i2u177_41
  6651   005576  EFBF  F02A         	goto	i2u177_40
  6652   00557A                     i2u177_41:
  6653   00557A  EFC4  F02A         	goto	i2l2258
  6654   00557E                     i2u177_40:
  6655   00557E  5003               	movf	i2___awdiv@divisor^0,w,c
  6656   005580  5E01               	subwf	i2___awdiv@dividend^0,f,c
  6657   005582  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  6658   005584  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  6659   005586  8007               	bsf	i2___awdiv@quotient^0,0,c
  6660   005588                     i2l2258:
  6661   005588  90D8               	bcf	status,0,c
  6662   00558A  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  6663   00558C  3203               	rrcf	i2___awdiv@divisor^0,f,c
  6664   00558E  2E05               	decfsz	i2___awdiv@counter^0,f,c
  6665   005590  EFB1  F02A         	goto	i2l2250
  6666   005594                     i2l2262:
  6667   005594  5006               	movf	i2___awdiv@sign^0,w,c
  6668   005596  B4D8               	btfsc	status,2,c
  6669   005598  EFD0  F02A         	goto	i2u178_41
  6670   00559C  EFD2  F02A         	goto	i2u178_40
  6671   0055A0                     i2u178_41:
  6672   0055A0  EFD6  F02A         	goto	i2l2266
  6673   0055A4                     i2u178_40:
  6674   0055A4  6C07               	negf	i2___awdiv@quotient^0,c
  6675   0055A6  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  6676   0055A8  B0D8               	btfsc	status,0,c
  6677   0055AA  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  6678   0055AC                     i2l2266:
  6679   0055AC  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  6680   0055B0  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  6681   0055B4  0012               	return		;funcret
  6682   0055B6                     __end_ofi2___awdiv:
  6683                           	callstack 0
  6684                           
  6685 ;; *************** function i2_getKeypad *****************
  6686 ;; Defined at:
  6687 ;;		line 38 in file "./keypad.h"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  buttonNumber    2    2[COMRAM] int 
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  2    0[COMRAM] int 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6704 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6705 ;;Total ram usage:        4 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		i2_getValue
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text43
  6715   004F50                     __ptext43:
  6716                           	callstack 0
  6717   004F50                     i2_getKeypad:
  6718                           	callstack 22
  6719   004F50                     
  6720                           ;./keypad.h: 39:     int buttonNumber = -1;
  6721   004F50  6803               	setf	i2getKeypad@buttonNumber^0,c
  6722   004F52  6804               	setf	(i2getKeypad@buttonNumber+1)^0,c
  6723                           
  6724                           ;./keypad.h: 42:     PORTAbits.RA0 = 1;
  6725   004F54  80CA               	bsf	202,0,c	;volatile
  6726                           
  6727                           ;./keypad.h: 43:     if(PORTAbits.RA4 == 1){
  6728   004F56  A8CA               	btfss	202,4,c	;volatile
  6729   004F58  EFB0  F027         	goto	i2u247_41
  6730   004F5C  EFB2  F027         	goto	i2u247_40
  6731   004F60                     i2u247_41:
  6732   004F60  EFBD  F027         	goto	i2l165
  6733   004F64                     i2u247_40:
  6734   004F64                     
  6735                           ;./keypad.h: 45:         buttonNumber = 1;
  6736   004F64  0E00               	movlw	0
  6737   004F66  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6738   004F68  0E01               	movlw	1
  6739   004F6A  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6740   004F6C                     i2l166:
  6741   004F6C  B8CA               	btfsc	202,4,c	;volatile
  6742   004F6E  EFBB  F027         	goto	i2u248_41
  6743   004F72  EFBD  F027         	goto	i2u248_40
  6744   004F76                     i2u248_41:
  6745   004F76  EFB6  F027         	goto	i2l166
  6746   004F7A                     i2u248_40:
  6747   004F7A                     i2l165:
  6748                           
  6749                           ;./keypad.h: 48:     if(PORTAbits.RA5 == 1){
  6750   004F7A  AACA               	btfss	202,5,c	;volatile
  6751   004F7C  EFC2  F027         	goto	i2u249_41
  6752   004F80  EFC4  F027         	goto	i2u249_40
  6753   004F84                     i2u249_41:
  6754   004F84  EFCF  F027         	goto	i2l169
  6755   004F88                     i2u249_40:
  6756   004F88                     
  6757                           ;./keypad.h: 50:         buttonNumber = 4;
  6758   004F88  0E00               	movlw	0
  6759   004F8A  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6760   004F8C  0E04               	movlw	4
  6761   004F8E  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6762   004F90                     i2l170:
  6763   004F90  BACA               	btfsc	202,5,c	;volatile
  6764   004F92  EFCD  F027         	goto	i2u250_41
  6765   004F96  EFCF  F027         	goto	i2u250_40
  6766   004F9A                     i2u250_41:
  6767   004F9A  EFC8  F027         	goto	i2l170
  6768   004F9E                     i2u250_40:
  6769   004F9E                     i2l169:
  6770                           
  6771                           ;./keypad.h: 53:     if(PORTAbits.RA3 == 1){
  6772   004F9E  A6CA               	btfss	202,3,c	;volatile
  6773   004FA0  EFD4  F027         	goto	i2u251_41
  6774   004FA4  EFD6  F027         	goto	i2u251_40
  6775   004FA8                     i2u251_41:
  6776   004FA8  EFE1  F027         	goto	i2l173
  6777   004FAC                     i2u251_40:
  6778   004FAC                     
  6779                           ;./keypad.h: 55:         buttonNumber = 7;
  6780   004FAC  0E00               	movlw	0
  6781   004FAE  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6782   004FB0  0E07               	movlw	7
  6783   004FB2  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6784   004FB4                     i2l174:
  6785   004FB4  B6CA               	btfsc	202,3,c	;volatile
  6786   004FB6  EFDF  F027         	goto	i2u252_41
  6787   004FBA  EFE1  F027         	goto	i2u252_40
  6788   004FBE                     i2u252_41:
  6789   004FBE  EFDA  F027         	goto	i2l174
  6790   004FC2                     i2u252_40:
  6791   004FC2                     i2l173:
  6792                           
  6793                           ;./keypad.h: 58:     if(PORTCbits.RC4 == 1){
  6794   004FC2  A8CC               	btfss	204,4,c	;volatile
  6795   004FC4  EFE6  F027         	goto	i2u253_41
  6796   004FC8  EFE8  F027         	goto	i2u253_40
  6797   004FCC                     i2u253_41:
  6798   004FCC  EFF3  F027         	goto	i2l177
  6799   004FD0                     i2u253_40:
  6800   004FD0                     
  6801                           ;./keypad.h: 60:         buttonNumber = 15;
  6802   004FD0  0E00               	movlw	0
  6803   004FD2  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6804   004FD4  0E0F               	movlw	15
  6805   004FD6  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6806   004FD8                     i2l178:
  6807   004FD8  B8CC               	btfsc	204,4,c	;volatile
  6808   004FDA  EFF1  F027         	goto	i2u254_41
  6809   004FDE  EFF3  F027         	goto	i2u254_40
  6810   004FE2                     i2u254_41:
  6811   004FE2  EFEC  F027         	goto	i2l178
  6812   004FE6                     i2u254_40:
  6813   004FE6                     i2l177:
  6814                           
  6815                           ;./keypad.h: 63:     PORTAbits.RA0 = 0;
  6816   004FE6  90CA               	bcf	202,0,c	;volatile
  6817                           
  6818                           ;./keypad.h: 66:     PORTAbits.RA1 = 1;
  6819   004FE8  82CA               	bsf	202,1,c	;volatile
  6820                           
  6821                           ;./keypad.h: 67:     if(PORTAbits.RA4 == 1){
  6822   004FEA  A8CA               	btfss	202,4,c	;volatile
  6823   004FEC  EFFA  F027         	goto	i2u255_41
  6824   004FF0  EFFC  F027         	goto	i2u255_40
  6825   004FF4                     i2u255_41:
  6826   004FF4  EF07  F028         	goto	i2l181
  6827   004FF8                     i2u255_40:
  6828   004FF8                     
  6829                           ;./keypad.h: 69:         buttonNumber = 2;
  6830   004FF8  0E00               	movlw	0
  6831   004FFA  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6832   004FFC  0E02               	movlw	2
  6833   004FFE  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6834   005000                     i2l182:
  6835   005000  B8CA               	btfsc	202,4,c	;volatile
  6836   005002  EF05  F028         	goto	i2u256_41
  6837   005006  EF07  F028         	goto	i2u256_40
  6838   00500A                     i2u256_41:
  6839   00500A  EF00  F028         	goto	i2l182
  6840   00500E                     i2u256_40:
  6841   00500E                     i2l181:
  6842                           
  6843                           ;./keypad.h: 72:     if(PORTAbits.RA5 == 1){
  6844   00500E  AACA               	btfss	202,5,c	;volatile
  6845   005010  EF0C  F028         	goto	i2u257_41
  6846   005014  EF0E  F028         	goto	i2u257_40
  6847   005018                     i2u257_41:
  6848   005018  EF19  F028         	goto	i2l185
  6849   00501C                     i2u257_40:
  6850   00501C                     
  6851                           ;./keypad.h: 74:         buttonNumber = 5;
  6852   00501C  0E00               	movlw	0
  6853   00501E  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6854   005020  0E05               	movlw	5
  6855   005022  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6856   005024                     i2l186:
  6857   005024  BACA               	btfsc	202,5,c	;volatile
  6858   005026  EF17  F028         	goto	i2u258_41
  6859   00502A  EF19  F028         	goto	i2u258_40
  6860   00502E                     i2u258_41:
  6861   00502E  EF12  F028         	goto	i2l186
  6862   005032                     i2u258_40:
  6863   005032                     i2l185:
  6864                           
  6865                           ;./keypad.h: 77:     if(PORTAbits.RA3 == 1){
  6866   005032  A6CA               	btfss	202,3,c	;volatile
  6867   005034  EF1E  F028         	goto	i2u259_41
  6868   005038  EF20  F028         	goto	i2u259_40
  6869   00503C                     i2u259_41:
  6870   00503C  EF2B  F028         	goto	i2l189
  6871   005040                     i2u259_40:
  6872   005040                     
  6873                           ;./keypad.h: 79:         buttonNumber = 8;
  6874   005040  0E00               	movlw	0
  6875   005042  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6876   005044  0E08               	movlw	8
  6877   005046  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6878   005048                     i2l190:
  6879   005048  B6CA               	btfsc	202,3,c	;volatile
  6880   00504A  EF29  F028         	goto	i2u260_41
  6881   00504E  EF2B  F028         	goto	i2u260_40
  6882   005052                     i2u260_41:
  6883   005052  EF24  F028         	goto	i2l190
  6884   005056                     i2u260_40:
  6885   005056                     i2l189:
  6886                           
  6887                           ;./keypad.h: 82:     if(PORTCbits.RC4 == 1){
  6888   005056  A8CC               	btfss	204,4,c	;volatile
  6889   005058  EF30  F028         	goto	i2u261_41
  6890   00505C  EF32  F028         	goto	i2u261_40
  6891   005060                     i2u261_41:
  6892   005060  EF3D  F028         	goto	i2l193
  6893   005064                     i2u261_40:
  6894   005064                     
  6895                           ;./keypad.h: 84:         buttonNumber = 0;
  6896   005064  0E00               	movlw	0
  6897   005066  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6898   005068  0E00               	movlw	0
  6899   00506A  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6900   00506C                     i2l194:
  6901   00506C  B8CC               	btfsc	204,4,c	;volatile
  6902   00506E  EF3B  F028         	goto	i2u262_41
  6903   005072  EF3D  F028         	goto	i2u262_40
  6904   005076                     i2u262_41:
  6905   005076  EF36  F028         	goto	i2l194
  6906   00507A                     i2u262_40:
  6907   00507A                     i2l193:
  6908                           
  6909                           ;./keypad.h: 87:     PORTAbits.RA1 = 0;
  6910   00507A  92CA               	bcf	202,1,c	;volatile
  6911                           
  6912                           ;./keypad.h: 90:     PORTAbits.RA2 = 1;
  6913   00507C  84CA               	bsf	202,2,c	;volatile
  6914                           
  6915                           ;./keypad.h: 91:     if(PORTAbits.RA4 == 1){
  6916   00507E  A8CA               	btfss	202,4,c	;volatile
  6917   005080  EF44  F028         	goto	i2u263_41
  6918   005084  EF46  F028         	goto	i2u263_40
  6919   005088                     i2u263_41:
  6920   005088  EF51  F028         	goto	i2l197
  6921   00508C                     i2u263_40:
  6922   00508C                     
  6923                           ;./keypad.h: 93:         buttonNumber = 3;
  6924   00508C  0E00               	movlw	0
  6925   00508E  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6926   005090  0E03               	movlw	3
  6927   005092  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6928   005094                     i2l198:
  6929   005094  B8CA               	btfsc	202,4,c	;volatile
  6930   005096  EF4F  F028         	goto	i2u264_41
  6931   00509A  EF51  F028         	goto	i2u264_40
  6932   00509E                     i2u264_41:
  6933   00509E  EF4A  F028         	goto	i2l198
  6934   0050A2                     i2u264_40:
  6935   0050A2                     i2l197:
  6936                           
  6937                           ;./keypad.h: 96:     if(PORTAbits.RA5 == 1){
  6938   0050A2  AACA               	btfss	202,5,c	;volatile
  6939   0050A4  EF56  F028         	goto	i2u265_41
  6940   0050A8  EF58  F028         	goto	i2u265_40
  6941   0050AC                     i2u265_41:
  6942   0050AC  EF63  F028         	goto	i2l201
  6943   0050B0                     i2u265_40:
  6944   0050B0                     
  6945                           ;./keypad.h: 98:         buttonNumber = 6;
  6946   0050B0  0E00               	movlw	0
  6947   0050B2  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6948   0050B4  0E06               	movlw	6
  6949   0050B6  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6950   0050B8                     i2l202:
  6951   0050B8  BACA               	btfsc	202,5,c	;volatile
  6952   0050BA  EF61  F028         	goto	i2u266_41
  6953   0050BE  EF63  F028         	goto	i2u266_40
  6954   0050C2                     i2u266_41:
  6955   0050C2  EF5C  F028         	goto	i2l202
  6956   0050C6                     i2u266_40:
  6957   0050C6                     i2l201:
  6958                           
  6959                           ;./keypad.h: 101:     if(PORTAbits.RA3 == 1){
  6960   0050C6  A6CA               	btfss	202,3,c	;volatile
  6961   0050C8  EF68  F028         	goto	i2u267_41
  6962   0050CC  EF6A  F028         	goto	i2u267_40
  6963   0050D0                     i2u267_41:
  6964   0050D0  EF75  F028         	goto	i2l205
  6965   0050D4                     i2u267_40:
  6966   0050D4                     
  6967                           ;./keypad.h: 103:         buttonNumber = 9;
  6968   0050D4  0E00               	movlw	0
  6969   0050D6  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6970   0050D8  0E09               	movlw	9
  6971   0050DA  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6972   0050DC                     i2l206:
  6973   0050DC  B6CA               	btfsc	202,3,c	;volatile
  6974   0050DE  EF73  F028         	goto	i2u268_41
  6975   0050E2  EF75  F028         	goto	i2u268_40
  6976   0050E6                     i2u268_41:
  6977   0050E6  EF6E  F028         	goto	i2l206
  6978   0050EA                     i2u268_40:
  6979   0050EA                     i2l205:
  6980                           
  6981                           ;./keypad.h: 106:     if(PORTCbits.RC4 == 1){
  6982   0050EA  A8CC               	btfss	204,4,c	;volatile
  6983   0050EC  EF7A  F028         	goto	i2u269_41
  6984   0050F0  EF7C  F028         	goto	i2u269_40
  6985   0050F4                     i2u269_41:
  6986   0050F4  EF87  F028         	goto	i2l209
  6987   0050F8                     i2u269_40:
  6988   0050F8                     
  6989                           ;./keypad.h: 108:         buttonNumber = 10;
  6990   0050F8  0E00               	movlw	0
  6991   0050FA  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  6992   0050FC  0E0A               	movlw	10
  6993   0050FE  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  6994   005100                     i2l210:
  6995   005100  B8CC               	btfsc	204,4,c	;volatile
  6996   005102  EF85  F028         	goto	i2u270_41
  6997   005106  EF87  F028         	goto	i2u270_40
  6998   00510A                     i2u270_41:
  6999   00510A  EF80  F028         	goto	i2l210
  7000   00510E                     i2u270_40:
  7001   00510E                     i2l209:
  7002                           
  7003                           ;./keypad.h: 111:     PORTAbits.RA2 = 0;
  7004   00510E  94CA               	bcf	202,2,c	;volatile
  7005                           
  7006                           ;./keypad.h: 138:     return buttonNumber;
  7007   005110  C003  F001         	movff	i2getKeypad@buttonNumber,?i2_getKeypad
  7008   005114  C004  F002         	movff	i2getKeypad@buttonNumber+1,?i2_getKeypad+1
  7009   005118  0012               	return		;funcret
  7010   00511A                     __end_ofi2_getKeypad:
  7011                           	callstack 0
  7012                           
  7013 ;; *************** function i2___wmul *****************
  7014 ;; Defined at:
  7015 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  multiplier      2    0[COMRAM] unsigned int 
  7018 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  product         2    4[COMRAM] unsigned int 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  2    0[COMRAM] unsigned int 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0, prodl, prodh
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7034 ;;Total ram usage:        6 bytes
  7035 ;; Hardware stack levels used: 1
  7036 ;; This function calls:
  7037 ;;		Nothing
  7038 ;; This function is called by:
  7039 ;;		i2_getValue
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           	psect	text44
  7044   005D1C                     __ptext44:
  7045                           	callstack 0
  7046   005D1C                     i2___wmul:
  7047                           	callstack 22
  7048   005D1C  5001               	movf	i2___wmul@multiplier^0,w,c
  7049   005D1E  0203               	mulwf	i2___wmul@multiplicand^0,c
  7050   005D20  006F FFCC  F005    	movff	prodl,i2___wmul@product
  7051   005D26  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
  7052   005D2C  5001               	movf	i2___wmul@multiplier^0,w,c
  7053   005D2E  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  7054   005D30  50F3               	movf	243,w,c
  7055   005D32  2606               	addwf	(i2___wmul@product+1)^0,f,c
  7056   005D34  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  7057   005D36  0203               	mulwf	i2___wmul@multiplicand^0,c
  7058   005D38  50F3               	movf	243,w,c
  7059   005D3A  2606               	addwf	(i2___wmul@product+1)^0,f,c
  7060   005D3C  C005  F001         	movff	i2___wmul@product,?i2___wmul
  7061   005D40  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  7062   005D44  0012               	return		;funcret
  7063   005D46                     __end_ofi2___wmul:
  7064                           	callstack 0
  7065                           
  7066 ;; *************** function i2_LCD_String_xy *****************
  7067 ;; Defined at:
  7068 ;;		line 63 in file "./LCD.h"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  row             1    wreg     unsigned char 
  7071 ;;  pos             1    9[COMRAM] unsigned char 
  7072 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  7073 ;;		 -> i2getValue@data(10), STR_28(2), STR_27(15), STR_26(13), 
  7074 ;;		 -> STR_25(12), STR_24(11), STR_23(9), STR_22(8), 
  7075 ;;		 -> STR_21(12), STR_20(17), STR_19(16), STR_18(17), 
  7076 ;;		 -> STR_17(16), STR_16(2), STR_15(17), STR_14(17), 
  7077 ;;		 -> STR_13(16), closeBox@d(10), STR_11(16), openBox@d(10), 
  7078 ;;		 -> STR_9(16), STR_8(17), STR_7(15), STR_6(14), 
  7079 ;;		 -> getValue@data(10), STR_1(5), 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  row             1   12[COMRAM] unsigned char 
  7082 ;;  location        1   13[COMRAM] unsigned char 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7092 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7095 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7096 ;;Total ram usage:        5 bytes
  7097 ;; Hardware stack levels used: 1
  7098 ;; Hardware stack levels required when called: 3
  7099 ;; This function calls:
  7100 ;;		i2_LCD_Command
  7101 ;;		i2_LCD_String
  7102 ;; This function is called by:
  7103 ;;		_INT0_ISR
  7104 ;;		i2_getValue
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text45
  7109   005B0C                     __ptext45:
  7110                           	callstack 0
  7111   005B0C                     i2_LCD_String_xy:
  7112                           	callstack 19
  7113                           
  7114                           ;incstack = 0
  7115                           ;i2LCD_String_xy@row stored from wreg
  7116   005B0C  6E0D               	movwf	i2LCD_String_xy@row^0,c
  7117   005B0E                     
  7118                           ;./LCD.h: 66:     if(row<=1)
  7119   005B0E  0E02               	movlw	2
  7120   005B10  600D               	cpfslt	i2LCD_String_xy@row^0,c
  7121   005B12  EF8D  F02D         	goto	i2u246_41
  7122   005B16  EF8F  F02D         	goto	i2u246_40
  7123   005B1A                     i2u246_41:
  7124   005B1A  EF98  F02D         	goto	i2l2600
  7125   005B1E                     i2u246_40:
  7126   005B1E                     
  7127                           ;./LCD.h: 67:     {;./LCD.h: 68:         location=(0x80) | ((pos) & 0x0f);
  7128   005B1E  500A               	movf	i2LCD_String_xy@pos^0,w,c
  7129   005B20  0B0F               	andlw	15
  7130   005B22  0980               	iorlw	128
  7131   005B24  6E0E               	movwf	i2LCD_String_xy@location^0,c
  7132   005B26                     
  7133                           ;./LCD.h: 69:         LCD_Command(location);
  7134   005B26  500E               	movf	i2LCD_String_xy@location^0,w,c
  7135   005B28  EC06  F02F         	call	i2_LCD_Command
  7136                           
  7137                           ;./LCD.h: 70:     }
  7138   005B2C  EF9F  F02D         	goto	i2l2604
  7139   005B30                     i2l2600:
  7140                           
  7141                           ;./LCD.h: 72:     {;./LCD.h: 73:         location=(0xC0) | ((pos) & 0x0f);
  7142   005B30  500A               	movf	i2LCD_String_xy@pos^0,w,c
  7143   005B32  0B0F               	andlw	15
  7144   005B34  09C0               	iorlw	192
  7145   005B36  6E0E               	movwf	i2LCD_String_xy@location^0,c
  7146   005B38                     
  7147                           ;./LCD.h: 74:         LCD_Command(location);
  7148   005B38  500E               	movf	i2LCD_String_xy@location^0,w,c
  7149   005B3A  EC06  F02F         	call	i2_LCD_Command
  7150   005B3E                     i2l2604:
  7151                           
  7152                           ;./LCD.h: 76:     LCD_String(msg);
  7153   005B3E  C00B  F008         	movff	i2LCD_String_xy@msg,i2LCD_String@msg
  7154   005B42  C00C  F009         	movff	i2LCD_String_xy@msg+1,i2LCD_String@msg+1
  7155   005B46  EC73  F02C         	call	i2_LCD_String	;wreg free
  7156   005B4A  0012               	return		;funcret
  7157   005B4C                     __end_ofi2_LCD_String_xy:
  7158                           	callstack 0
  7159                           
  7160 ;; *************** function i2_LCD_String *****************
  7161 ;; Defined at:
  7162 ;;		line 54 in file "./LCD.h"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  7165 ;;		 -> i2getValue@data(10), STR_28(2), STR_27(15), STR_26(13), 
  7166 ;;		 -> STR_25(12), STR_24(11), STR_23(9), STR_22(8), 
  7167 ;;		 -> STR_21(12), STR_20(17), STR_19(16), STR_18(17), 
  7168 ;;		 -> STR_17(16), STR_16(2), STR_15(17), STR_14(17), 
  7169 ;;		 -> STR_13(16), closeBox@d(10), STR_11(16), openBox@d(10), 
  7170 ;;		 -> STR_9(16), STR_8(17), STR_7(15), STR_6(14), 
  7171 ;;		 -> getValue@data(10), STR_1(5), 
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      void 
  7176 ;; Registers used:
  7177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7187 ;;Total ram usage:        2 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; Hardware stack levels required when called: 2
  7190 ;; This function calls:
  7191 ;;		i2_LCD_Char
  7192 ;; This function is called by:
  7193 ;;		i2_LCD_String_xy
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text46
  7198   0058E6                     __ptext46:
  7199                           	callstack 0
  7200   0058E6                     i2_LCD_String:
  7201                           	callstack 19
  7202   0058E6                     
  7203                           ;./LCD.h: 54: void LCD_String(const char *msg);./LCD.h: 55: {;./LCD.h: 56:     while((*m
      +                          sg)!='\0')
  7204   0058E6  EF8E  F02C         	goto	i2l2496
  7205   0058EA                     i2l2492:
  7206                           
  7207                           ;./LCD.h: 57:     {;./LCD.h: 58:       LCD_Char(*msg);
  7208   0058EA  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  7209   0058F0  0060  F027  FFF7   	movff	i2LCD_String@msg+1,tblptrh
  7210   0058F6  0E00               	movlw	low (__mediumconst shr (0+16))
  7211   0058F8  6EF8               	movwf	tblptru,c
  7212   0058FA  0E1F               	movlw	(high __ramtop+-1)
  7213   0058FC  64F7               	cpfsgt	tblptrh,c
  7214   0058FE  D003               	bra	i2u214_47
  7215   005900  0008               	tblrd		*
  7216   005902  50F5               	movf	tablat,w,c
  7217   005904  D007               	bra	i2u214_40
  7218   005906                     i2u214_47:
  7219   005906  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7220   00590C  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7221   005912  50E7               	movf	indf1,w,c
  7222   005914                     i2u214_40:
  7223   005914  ECF7  F02E         	call	i2_LCD_Char
  7224   005918                     
  7225                           ;./LCD.h: 59:       msg++;
  7226   005918  4A08               	infsnz	i2LCD_String@msg^0,f,c
  7227   00591A  2A09               	incf	(i2LCD_String@msg+1)^0,f,c
  7228   00591C                     i2l2496:
  7229                           
  7230                           ;./LCD.h: 56:     while((*msg)!='\0')
  7231   00591C  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  7232   005922  0060  F027  FFF7   	movff	i2LCD_String@msg+1,tblptrh
  7233   005928  0E00               	movlw	low (__mediumconst shr (0+16))
  7234   00592A  6EF8               	movwf	tblptru,c
  7235   00592C  0E1F               	movlw	(high __ramtop+-1)
  7236   00592E  64F7               	cpfsgt	tblptrh,c
  7237   005930  D003               	bra	i2u215_47
  7238   005932  0008               	tblrd		*
  7239   005934  50F5               	movf	tablat,w,c
  7240   005936  D007               	bra	i2u215_40
  7241   005938                     i2u215_47:
  7242   005938  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7243   00593E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7244   005944  50E7               	movf	indf1,w,c
  7245   005946                     i2u215_40:
  7246   005946  0900               	iorlw	0
  7247   005948  A4D8               	btfss	status,2,c
  7248   00594A  EFA9  F02C         	goto	i2u216_41
  7249   00594E  EFAB  F02C         	goto	i2u216_40
  7250   005952                     i2u216_41:
  7251   005952  EF75  F02C         	goto	i2l2492
  7252   005956                     i2u216_40:
  7253   005956  0012               	return		;funcret
  7254   005958                     __end_ofi2_LCD_String:
  7255                           	callstack 0
  7256                           
  7257 ;; *************** function i2_LCD_Char *****************
  7258 ;; Defined at:
  7259 ;;		line 43 in file "./LCD.h"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  dat             1    wreg     unsigned char 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;  dat             1    6[COMRAM] unsigned char 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7277 ;;Total ram usage:        1 bytes
  7278 ;; Hardware stack levels used: 1
  7279 ;; Hardware stack levels required when called: 1
  7280 ;; This function calls:
  7281 ;;		i2_MSdelay
  7282 ;; This function is called by:
  7283 ;;		i2_LCD_String
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text47
  7288   005DEE                     __ptext47:
  7289                           	callstack 0
  7290   005DEE                     i2_LCD_Char:
  7291                           	callstack 19
  7292                           
  7293                           ;incstack = 0
  7294                           ;i2LCD_Char@dat stored from wreg
  7295   005DEE  6E07               	movwf	i2LCD_Char@dat^0,c
  7296   005DF0                     
  7297                           ;./LCD.h: 43: void LCD_Char(char dat);./LCD.h: 44: {;./LCD.h: 45:     LATD= dat;
  7298   005DF0  0060  F01F  FFBD   	movff	i2LCD_Char@dat,16317	;volatile
  7299   005DF6                     
  7300                           ;./LCD.h: 46:     LATC2 = 1;
  7301   005DF6  84BC               	bsf	16316,2,c	;volatile
  7302   005DF8                     
  7303                           ;./LCD.h: 47:     LATC3=1;
  7304   005DF8  86BC               	bsf	16316,3,c	;volatile
  7305   005DFA                     
  7306                           ;./LCD.h: 48:     __nop();
  7307   005DFA  0000               	nop	
  7308   005DFC                     
  7309                           ;./LCD.h: 49:     LATC3=0;
  7310   005DFC  96BC               	bcf	16316,3,c	;volatile
  7311   005DFE                     
  7312                           ;./LCD.h: 50:     MSdelay(1);
  7313   005DFE  0E00               	movlw	0
  7314   005E00  6E02               	movwf	(i2MSdelay@val+1)^0,c
  7315   005E02  0E01               	movlw	1
  7316   005E04  6E01               	movwf	i2MSdelay@val^0,c
  7317   005E06  EC1C  F02D         	call	i2_MSdelay	;wreg free
  7318   005E0A  0012               	return		;funcret
  7319   005E0C                     __end_ofi2_LCD_Char:
  7320                           	callstack 0
  7321                           
  7322 ;; *************** function i2_LCD_Clear *****************
  7323 ;; Defined at:
  7324 ;;		line 28 in file "./LCD.h"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;		None
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7342 ;;Total ram usage:        0 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; Hardware stack levels required when called: 2
  7345 ;; This function calls:
  7346 ;;		i2_LCD_Command
  7347 ;; This function is called by:
  7348 ;;		_INT0_ISR
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text48
  7353   005E8C                     __ptext48:
  7354                           	callstack 0
  7355   005E8C                     i2_LCD_Clear:
  7356                           	callstack 21
  7357   005E8C                     
  7358                           ;./LCD.h: 30:         LCD_Command(0x01);
  7359   005E8C  0E01               	movlw	1
  7360   005E8E  EC06  F02F         	call	i2_LCD_Command
  7361   005E92  0012               	return		;funcret
  7362   005E94                     __end_ofi2_LCD_Clear:
  7363                           	callstack 0
  7364                           
  7365 ;; *************** function i2_LCD_Command *****************
  7366 ;; Defined at:
  7367 ;;		line 33 in file "./LCD.h"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  cmd             1    wreg     unsigned char 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  cmd             1    6[COMRAM] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  1    wreg      void 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7385 ;;Total ram usage:        1 bytes
  7386 ;; Hardware stack levels used: 1
  7387 ;; Hardware stack levels required when called: 1
  7388 ;; This function calls:
  7389 ;;		i2_MSdelay
  7390 ;; This function is called by:
  7391 ;;		i2_LCD_Clear
  7392 ;;		i2_LCD_String_xy
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text49
  7397   005E0C                     __ptext49:
  7398                           	callstack 0
  7399   005E0C                     i2_LCD_Command:
  7400                           	callstack 20
  7401                           
  7402                           ;incstack = 0
  7403                           ;i2LCD_Command@cmd stored from wreg
  7404   005E0C  6E07               	movwf	i2LCD_Command@cmd^0,c
  7405   005E0E                     
  7406                           ;./LCD.h: 33: void LCD_Command(char cmd );./LCD.h: 34: {;./LCD.h: 35:     LATD= cmd;
  7407   005E0E  0060  F01F  FFBD   	movff	i2LCD_Command@cmd,16317	;volatile
  7408   005E14                     
  7409                           ;./LCD.h: 36:     LATC2 = 0;
  7410   005E14  94BC               	bcf	16316,2,c	;volatile
  7411   005E16                     
  7412                           ;./LCD.h: 37:     LATC3 = 1;
  7413   005E16  86BC               	bsf	16316,3,c	;volatile
  7414   005E18                     
  7415                           ;./LCD.h: 38:     __nop();
  7416   005E18  0000               	nop	
  7417   005E1A                     
  7418                           ;./LCD.h: 39:     LATC3 = 0;
  7419   005E1A  96BC               	bcf	16316,3,c	;volatile
  7420   005E1C                     
  7421                           ;./LCD.h: 40:     MSdelay(3);
  7422   005E1C  0E00               	movlw	0
  7423   005E1E  6E02               	movwf	(i2MSdelay@val+1)^0,c
  7424   005E20  0E03               	movlw	3
  7425   005E22  6E01               	movwf	i2MSdelay@val^0,c
  7426   005E24  EC1C  F02D         	call	i2_MSdelay	;wreg free
  7427   005E28  0012               	return		;funcret
  7428   005E2A                     __end_ofi2_LCD_Command:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function i2_MSdelay *****************
  7432 ;; Defined at:
  7433 ;;		line 80 in file "./LCD.h"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  val             2    0[COMRAM] unsigned int 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  j               2    4[COMRAM] unsigned int 
  7438 ;;  i               2    2[COMRAM] unsigned int 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7449 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7452 ;;Total ram usage:        6 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; This function calls:
  7455 ;;		Nothing
  7456 ;; This function is called by:
  7457 ;;		i2_LCD_Command
  7458 ;;		i2_LCD_Char
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text50
  7463   005A38                     __ptext50:
  7464                           	callstack 0
  7465   005A38                     i2_MSdelay:
  7466                           	callstack 19
  7467   005A38                     
  7468                           ;./LCD.h: 80: void MSdelay(unsigned int val);./LCD.h: 81: {;./LCD.h: 82:      unsigned i
      +                          nt i,j;;./LCD.h: 83:         for(i=0;i<val;i++)
  7469   005A38  0E00               	movlw	0
  7470   005A3A  6E04               	movwf	(i2MSdelay@i+1)^0,c
  7471   005A3C  0E00               	movlw	0
  7472   005A3E  6E03               	movwf	i2MSdelay@i^0,c
  7473   005A40  EF35  F02D         	goto	i2l2224
  7474   005A44                     i2l2212:
  7475                           
  7476                           ;./LCD.h: 84:             for(j=0;j<165;j++);
  7477   005A44  0E00               	movlw	0
  7478   005A46  6E06               	movwf	(i2MSdelay@j+1)^0,c
  7479   005A48  0E00               	movlw	0
  7480   005A4A  6E05               	movwf	i2MSdelay@j^0,c
  7481   005A4C                     i2l2218:
  7482   005A4C  4A05               	infsnz	i2MSdelay@j^0,f,c
  7483   005A4E  2A06               	incf	(i2MSdelay@j+1)^0,f,c
  7484   005A50  5006               	movf	(i2MSdelay@j+1)^0,w,c
  7485   005A52  E109               	bnz	i2u171_40
  7486   005A54  0EA5               	movlw	165
  7487   005A56  5C05               	subwf	i2MSdelay@j^0,w,c
  7488   005A58  A0D8               	btfss	status,0,c
  7489   005A5A  EF31  F02D         	goto	i2u171_41
  7490   005A5E  EF33  F02D         	goto	i2u171_40
  7491   005A62                     i2u171_41:
  7492   005A62  EF26  F02D         	goto	i2l2218
  7493   005A66                     i2u171_40:
  7494   005A66  4A03               	infsnz	i2MSdelay@i^0,f,c
  7495   005A68  2A04               	incf	(i2MSdelay@i+1)^0,f,c
  7496   005A6A                     i2l2224:
  7497   005A6A  5001               	movf	i2MSdelay@val^0,w,c
  7498   005A6C  5C03               	subwf	i2MSdelay@i^0,w,c
  7499   005A6E  5002               	movf	(i2MSdelay@val+1)^0,w,c
  7500   005A70  5804               	subwfb	(i2MSdelay@i+1)^0,w,c
  7501   005A72  A0D8               	btfss	status,0,c
  7502   005A74  EF3E  F02D         	goto	i2u172_41
  7503   005A78  EF40  F02D         	goto	i2u172_40
  7504   005A7C                     i2u172_41:
  7505   005A7C  EF22  F02D         	goto	i2l2212
  7506   005A80                     i2u172_40:
  7507   005A80  0012               	return		;funcret
  7508   005A82                     __end_ofi2_MSdelay:
  7509                           	callstack 0
  7510                           
  7511 ;; *************** function _eepromWrite *****************
  7512 ;; Defined at:
  7513 ;;		line 75 in file "./interrupt.h"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  address         1    wreg     unsigned char 
  7516 ;;  data            1    8[COMRAM] unsigned char 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;  address         1    9[COMRAM] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7528 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7532 ;;Total ram usage:        2 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; This function calls:
  7535 ;;		Nothing
  7536 ;; This function is called by:
  7537 ;;		_INT0_ISR
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text51
  7542   005BF6                     __ptext51:
  7543                           	callstack 0
  7544   005BF6                     _eepromWrite:
  7545                           	callstack 23
  7546                           
  7547                           ;incstack = 0
  7548                           ;eepromWrite@address stored from wreg
  7549   005BF6  6E0A               	movwf	eepromWrite@address^0,c
  7550   005BF8                     
  7551                           ;./interrupt.h: 77:     NVMCON1 = 0;
  7552   005BF8  0E00               	movlw	0
  7553   005BFA  0139               	movlb	57	; () banked
  7554   005BFC  6FE5               	movwf	229,b	;volsfr
  7555   005BFE                     
  7556                           ; BSR set to: 57
  7557                           ;./interrupt.h: 80:     NVMADRL = address;
  7558   005BFE  0060  F02B  F9E0   	movff	eepromWrite@address,14816	;volatile
  7559   005C04                     
  7560                           ; BSR set to: 57
  7561                           ;./interrupt.h: 83:     NVMDAT = data;
  7562   005C04  0060  F027  F9E3   	movff	eepromWrite@data,14819	;volatile
  7563   005C0A                     
  7564                           ; BSR set to: 57
  7565                           ;./interrupt.h: 86:     NVMCON1bits.WREN = 1;
  7566   005C0A  85E5               	bsf	229,2,b	;volsfr
  7567   005C0C                     
  7568                           ; BSR set to: 57
  7569                           ;./interrupt.h: 89:     INTCON0bits.GIE = 0;
  7570   005C0C  9ED2               	bcf	210,7,c	;volatile
  7571   005C0E                     
  7572                           ; BSR set to: 57
  7573                           ;./interrupt.h: 92:     NVMCON2 = 0x55;
  7574   005C0E  0E55               	movlw	85
  7575   005C10  6FE6               	movwf	230,b	;volsfr
  7576   005C12                     
  7577                           ; BSR set to: 57
  7578                           ;./interrupt.h: 93:     NVMCON2 = 0xAA;
  7579   005C12  0EAA               	movlw	170
  7580   005C14  6FE6               	movwf	230,b	;volsfr
  7581   005C16                     
  7582                           ; BSR set to: 57
  7583                           ;./interrupt.h: 96:     NVMCON1bits.WR = 1;
  7584   005C16  83E5               	bsf	229,1,b	;volsfr
  7585   005C18                     i2l248:
  7586                           
  7587                           ; BSR set to: 57
  7588   005C18  B3E5               	btfsc	229,1,b	;volsfr
  7589   005C1A  EF11  F02E         	goto	i2u279_41
  7590   005C1E  EF13  F02E         	goto	i2u279_40
  7591   005C22                     i2u279_41:
  7592   005C22  EF0C  F02E         	goto	i2l248
  7593   005C26                     i2u279_40:
  7594   005C26                     
  7595                           ; BSR set to: 57
  7596                           ;./interrupt.h: 100:     INTCON0bits.GIE = 1;
  7597   005C26  8ED2               	bsf	210,7,c	;volatile
  7598                           
  7599                           ;./interrupt.h: 103:     NVMCON1bits.WREN = 0;
  7600   005C28  95E5               	bcf	229,2,b	;volsfr
  7601   005C2A                     
  7602                           ; BSR set to: 57
  7603   005C2A  0012               	return		;funcret
  7604   005C2C                     __end_of_eepromWrite:
  7605                           	callstack 0
  7606                           
  7607                           ;
  7608                           ; H/W Interrupt Vector Table @ 0x4008
  7609                           ;
  7610                           
  7611                           	psect	ivt0x4008
  7612   004008                     __pivt0x4008:
  7613                           	callstack 0
  7614   004008                     ivt0x4008_base:
  7615                           	callstack 0
  7616                           
  7617                           ; Vector 0 : SWINT
  7618   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  7619                           
  7620                           ; Vector 1 : HLVD
  7621   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7622                           
  7623                           ; Vector 2 : OSF
  7624   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7625                           
  7626                           ; Vector 3 : CSW
  7627   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7628                           
  7629                           ; Vector 4 : NVM
  7630   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  7631                           
  7632                           ; Vector 5 : SCAN
  7633   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  7634                           
  7635                           ; Vector 6 : CRC
  7636   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  7637                           
  7638                           ; Vector 7 : IOC
  7639   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  7640                           
  7641                           ; Vector 8 : INT0
  7642   004018  14CC               	dw	_INT0_ISR shr (0+2)
  7643                           
  7644                           ; Vector 9 : ZCD
  7645   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7646                           
  7647                           ; Vector 10 : AD
  7648   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7649                           
  7650                           ; Vector 11 : ADT
  7651   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7652                           
  7653                           ; Vector 12 : CMP1
  7654   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  7655                           
  7656                           ; Vector 13 : SMT1
  7657   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  7658                           
  7659                           ; Vector 14 : SMT1PRA
  7660   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  7661                           
  7662                           ; Vector 15 : SMT1PRW
  7663   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  7664                           
  7665                           ; Vector 16 : DMA1SCNT
  7666   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  7667                           
  7668                           ; Vector 17 : DMA1DCNT
  7669   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7670                           
  7671                           ; Vector 18 : DMA1OR
  7672   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7673                           
  7674                           ; Vector 19 : DMA1A
  7675   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7676                           
  7677                           ; Vector 20 : SPI1RX
  7678   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  7679                           
  7680                           ; Vector 21 : SPI1TX
  7681   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  7682                           
  7683                           ; Vector 22 : SPI1
  7684   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  7685                           
  7686                           ; Vector 23 : I2C1RX
  7687   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  7688                           
  7689                           ; Vector 24 : I2C1TX
  7690   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  7691                           
  7692                           ; Vector 25 : I2C1
  7693   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7694                           
  7695                           ; Vector 26 : I2C1E
  7696   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7697                           
  7698                           ; Vector 27 : U1RX
  7699   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7700                           
  7701                           ; Vector 28 : U1TX
  7702   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  7703                           
  7704                           ; Vector 29 : U1E
  7705   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  7706                           
  7707                           ; Vector 30 : U1
  7708   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  7709                           
  7710                           ; Vector 31 : TMR0
  7711   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  7712                           
  7713                           ; Vector 32 : TMR1
  7714   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  7715                           
  7716                           ; Vector 33 : TMR1G
  7717   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7718                           
  7719                           ; Vector 34 : TMR2
  7720   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7721                           
  7722                           ; Vector 35 : CCP1
  7723   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7724                           
  7725                           ; Vector 36 : Undefined
  7726   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  7727                           
  7728                           ; Vector 37 : NCO1
  7729   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  7730                           
  7731                           ; Vector 38 : CWG1
  7732   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  7733                           
  7734                           ; Vector 39 : CLC1
  7735   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  7736                           
  7737                           ; Vector 40 : INT1
  7738   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  7739                           
  7740                           ; Vector 41 : CMP2
  7741   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7742                           
  7743                           ; Vector 42 : DMA2SCNT
  7744   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7745                           
  7746                           ; Vector 43 : DMA2DCNT
  7747   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7748                           
  7749                           ; Vector 44 : DMA2OR
  7750   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  7751                           
  7752                           ; Vector 45 : DMA2A
  7753   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  7754                           
  7755                           ; Vector 46 : I2C2RX
  7756   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  7757                           
  7758                           ; Vector 47 : I2C2TX
  7759   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  7760                           
  7761                           ; Vector 48 : I2C2
  7762   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  7763                           
  7764                           ; Vector 49 : I2C2E
  7765   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7766                           
  7767                           ; Vector 50 : U2RX
  7768   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7769                           
  7770                           ; Vector 51 : U2TX
  7771   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7772                           
  7773                           ; Vector 52 : U2E
  7774   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  7775                           
  7776                           ; Vector 53 : U2
  7777   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  7778                           
  7779                           ; Vector 54 : TMR3
  7780   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  7781                           
  7782                           ; Vector 55 : TMR3G
  7783   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  7784                           
  7785                           ; Vector 56 : TMR4
  7786   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  7787                           
  7788                           ; Vector 57 : CCP2
  7789   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7790                           
  7791                           ; Vector 58 : Undefined
  7792   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7793                           
  7794                           ; Vector 59 : CWG2
  7795   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7796                           
  7797                           ; Vector 60 : CLC2
  7798   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  7799                           
  7800                           ; Vector 61 : INT2
  7801   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  7802                           
  7803                           ; Vector 62 : Undefined
  7804   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  7805                           
  7806                           ; Vector 63 : Undefined
  7807   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  7808                           
  7809                           ; Vector 64 : Undefined
  7810   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  7811                           
  7812                           ; Vector 65 : Undefined
  7813   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7814                           
  7815                           ; Vector 66 : Undefined
  7816   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7817                           
  7818                           ; Vector 67 : Undefined
  7819   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7820                           
  7821                           ; Vector 68 : Undefined
  7822   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  7823                           
  7824                           ; Vector 69 : Undefined
  7825   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  7826                           
  7827                           ; Vector 70 : TMR5
  7828   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  7829                           
  7830                           ; Vector 71 : TMR5G
  7831   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  7832                           
  7833                           ; Vector 72 : TMR6
  7834   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  7835                           
  7836                           ; Vector 73 : CCP3
  7837   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  7838                           
  7839                           ; Vector 74 : CWG3
  7840   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  7841                           
  7842                           ; Vector 75 : CLC3
  7843   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  7844                           
  7845                           ; Vector 76 : Undefined
  7846   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  7847                           
  7848                           ; Vector 77 : Undefined
  7849   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  7850                           
  7851                           ; Vector 78 : Undefined
  7852   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  7853                           
  7854                           ; Vector 79 : Undefined
  7855   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  7856                           
  7857                           ; Vector 80 : CCP4
  7858   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  7859                           
  7860                           ; Vector 81 : CLC4
  7861   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  7862   0040AC                     ivt0x4008_undefint:
  7863                           	callstack 0
  7864   0040AC  00FF               	reset	
  7865                           
  7866                           	psect	rparam
  7867   000000                     
  7868                           	psect	config
  7869                           
  7870                           ;Config register CONFIG1L @ 0x300000
  7871                           ;	External Oscillator Selection
  7872                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  7873                           ;	Reset Oscillator Selection
  7874                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  7875   300000                     	org	3145728
  7876   300000  F8                 	db	248
  7877                           
  7878                           ;Config register CONFIG1H @ 0x300001
  7879                           ;	Clock out Enable bit
  7880                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7881                           ;	PRLOCKED One-Way Set Enable bit
  7882                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  7883                           ;	Clock Switch Enable bit
  7884                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7885                           ;	Fail-Safe Clock Monitor Enable bit
  7886                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7887   300001                     	org	3145729
  7888   300001  FF                 	db	255
  7889                           
  7890                           ;Config register CONFIG2L @ 0x300002
  7891                           ;	MCLR Enable bit
  7892                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7893                           ;	Power-up timer selection bits
  7894                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  7895                           ;	Multi-vector enable bit
  7896                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  7897                           ;	IVTLOCK bit One-way set enable bit
  7898                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  7899                           ;	Low Power BOR Enable bit
  7900                           ;	LPBOREN = OFF, ULPBOR disabled
  7901                           ;	Brown-out Reset Enable bits
  7902                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7903   300002                     	org	3145730
  7904   300002  FF                 	db	255
  7905                           
  7906                           ;Config register CONFIG2H @ 0x300003
  7907                           ;	Brown-out Reset Voltage Selection bits
  7908                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  7909                           ;	ZCD Disable bit
  7910                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7911                           ;	PPSLOCK bit One-Way Set Enable bit
  7912                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7913                           ;	Stack Full/Underflow Reset Enable bit
  7914                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7915                           ;	Debugger Enable bit
  7916                           ;	DEBUG = OFF, Background debugger disabled
  7917                           ;	Extended Instruction Set Enable bit
  7918                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7919   300003                     	org	3145731
  7920   300003  FF                 	db	255
  7921                           
  7922                           ;Config register CONFIG3L @ 0x300004
  7923                           ;	WDT Period selection bits
  7924                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7925                           ;	WDT operating mode
  7926                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  7927   300004                     	org	3145732
  7928   300004  9F                 	db	159
  7929                           
  7930                           ;Config register CONFIG3H @ 0x300005
  7931                           ;	WDT Window Select bits
  7932                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7933                           ;	WDT input clock selector
  7934                           ;	WDTCCS = SC, Software Control
  7935   300005                     	org	3145733
  7936   300005  FF                 	db	255
  7937                           
  7938                           ;Config register CONFIG4L @ 0x300006
  7939                           ;	Boot Block Size selection bits
  7940                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7941                           ;	Boot Block enable bit
  7942                           ;	BBEN = OFF, Boot block disabled
  7943                           ;	Storage Area Flash enable bit
  7944                           ;	SAFEN = OFF, SAF disabled
  7945                           ;	Application Block write protection bit
  7946                           ;	WRTAPP = OFF, Application Block not write protected
  7947   300006                     	org	3145734
  7948   300006  FF                 	db	255
  7949                           
  7950                           ;Config register CONFIG4H @ 0x300007
  7951                           ;	Boot Block Write Protection bit
  7952                           ;	WRTB = OFF, Boot Block not write-protected
  7953                           ;	Configuration Register Write Protection bit
  7954                           ;	WRTC = OFF, Configuration registers not write-protected
  7955                           ;	Data EEPROM Write Protection bit
  7956                           ;	WRTD = OFF, Data EEPROM not write-protected
  7957                           ;	SAF Write protection bit
  7958                           ;	WRTSAF = OFF, SAF not Write Protected
  7959                           ;	Low Voltage Programming Enable bit
  7960                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7961   300007                     	org	3145735
  7962   300007  FF                 	db	255
  7963                           
  7964                           ;Config register CONFIG5L @ 0x300008
  7965                           ;	PFM and Data EEPROM Code Protection bit
  7966                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7967   300008                     	org	3145736
  7968   300008  FF                 	db	255
  7969                           
  7970                           ;Config register CONFIG5H @ 0x300009
  7971                           ;	unspecified, using default values
  7972   300009                     	org	3145737
  7973   300009  FF                 	db	255
  7974                           tosu	equ	0x3FFF
  7975                           tosh	equ	0x3FFE
  7976                           tosl	equ	0x3FFD
  7977                           stkptr	equ	0x3FFC
  7978                           pclatu	equ	0x3FFB
  7979                           pclath	equ	0x3FFA
  7980                           pcl	equ	0x3FF9
  7981                           tblptru	equ	0x3FF8
  7982                           tblptrh	equ	0x3FF7
  7983                           tblptrl	equ	0x3FF6
  7984                           tablat	equ	0x3FF5
  7985                           prodh	equ	0x3FF4
  7986                           prodl	equ	0x3FF3
  7987                           indf0	equ	0x3FEF
  7988                           postinc0	equ	0x3FEE
  7989                           postdec0	equ	0x3FED
  7990                           preinc0	equ	0x3FEC
  7991                           plusw0	equ	0x3FEB
  7992                           fsr0h	equ	0x3FEA
  7993                           fsr0l	equ	0x3FE9
  7994                           wreg	equ	0x3FE8
  7995                           indf1	equ	0x3FE7
  7996                           postinc1	equ	0x3FE6
  7997                           postdec1	equ	0x3FE5
  7998                           preinc1	equ	0x3FE4
  7999                           plusw1	equ	0x3FE3
  8000                           fsr1h	equ	0x3FE2
  8001                           fsr1l	equ	0x3FE1
  8002                           bsr	equ	0x3FE0
  8003                           indf2	equ	0x3FDF
  8004                           postinc2	equ	0x3FDE
  8005                           postdec2	equ	0x3FDD
  8006                           preinc2	equ	0x3FDC
  8007                           plusw2	equ	0x3FDB
  8008                           fsr2h	equ	0x3FDA
  8009                           fsr2l	equ	0x3FD9
  8010                           status	equ	0x3FD8

Data Sizes:
    Strings     270
    Constant    0
    Data        2
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     81      93
    BANK0           160     83     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    i2sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> closeBox@d(BANK0[10]), getValue@data(BANK0[10]), openBox@d(BANK0[10]), STR_1(CODE[5]), 
		 -> STR_11(CODE[16]), STR_13(CODE[16]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_16(CODE[2]), STR_17(CODE[16]), STR_18(CODE[17]), STR_19(CODE[16]), 
		 -> STR_20(CODE[17]), STR_21(CODE[12]), STR_22(CODE[8]), STR_23(CODE[9]), 
		 -> STR_24(CODE[11]), STR_25(CODE[12]), STR_26(CODE[13]), STR_27(CODE[15]), 
		 -> STR_28(CODE[2]), STR_6(CODE[14]), STR_7(CODE[15]), STR_8(CODE[17]), 
		 -> STR_9(CODE[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> closeBox@d(BANK0[10]), getValue@data(BANK0[10]), openBox@d(BANK0[10]), STR_1(CODE[5]), 
		 -> STR_11(CODE[16]), STR_13(CODE[16]), STR_14(CODE[17]), STR_15(CODE[17]), 
		 -> STR_16(CODE[2]), STR_17(CODE[16]), STR_18(CODE[17]), STR_19(CODE[16]), 
		 -> STR_20(CODE[17]), STR_21(CODE[12]), STR_22(CODE[8]), STR_23(CODE[9]), 
		 -> STR_24(CODE[11]), STR_25(CODE[12]), STR_26(CODE[13]), STR_27(CODE[15]), 
		 -> STR_28(CODE[2]), STR_6(CODE[14]), STR_7(CODE[15]), STR_8(CODE[17]), 
		 -> STR_9(CODE[16]), 

    S1293$buffer	PTR unsigned char  size(2) Largest target is 0

    S1293$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_12(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 
		 -> STR_4(CODE[3]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> closeBox@d(BANK0[10]), getValue@data(BANK0[10]), openBox@d(BANK0[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_12(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 
		 -> STR_4(CODE[3]), STR_5(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_12(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 
		 -> STR_4(CODE[3]), STR_5(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_10(CODE[3]), STR_12(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 
		 -> STR_4(CODE[3]), STR_5(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_getValue
    i2_getValue->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_abs
    i2_abs->i2___awmod
    i2_LCD_String_xy->i2_LCD_String
    i2_LCD_String->i2_LCD_Char
    i2_LCD_Char->i2_MSdelay
    i2_LCD_Clear->i2_LCD_Command
    i2_LCD_Command->i2_MSdelay
    _eepromWrite->i2___awdiv

Critical Paths under _main in BANK0

    _main->_getValue
    _openBox->_sprintf
    _getValue->_sprintf
    _closeBox->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   36991
                                             75 BANK0      8     8      0
               _INTERRUPT_Initialize
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                    _PWM2_Initialize
               _PWM_Output_D8_Enable
                    _TMR2_Initialize
                    _TMR2_StartTimer
                           _closeBox
                         _eepromRead
                           _getValue
                   _initializeKeypad
                            _openBox
 ---------------------------------------------------------------------------------
 (1) _openBox                                             19    19      0   10130
                                             47 BANK0     19    19      0
                          _LCD_Clear
                      _LCD_String_xy
                 _PWM2_LoadDutyValue
               _PWM2_OutputStatusGet
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initializeKeypad                                     0     0      0       0
                    _initializePORTA
                    _initializePORTC
 ---------------------------------------------------------------------------------
 (2) _initializePORTC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializePORTA                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getValue                                            28    26      2   10529
                                             47 BANK0     28    26      2
                      _LCD_String_xy
                             ___wmul
                          _getKeypad
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _getKeypad                                            4     2      2      35
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _eepromRead                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _closeBox                                            19    19      0   10130
                                             47 BANK0     19    19      0
                          _LCD_Clear
                      _LCD_String_xy
                 _PWM2_LoadDutyValue
               _PWM2_OutputStatusGet
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    15      5    4267
                                             29 BANK0     18    13      5
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    3147
                                             23 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2786
                                             10 BANK0     13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     552
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _PWM2_OutputStatusGet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2     242
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    5040
                                              9 BANK0      5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     463
                                              7 BANK0      2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     342
                                              6 BANK0      1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     342
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D8_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     662
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     342
                                              6 BANK0      1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2     320
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             6     6      0    6433
                                             75 COMRAM     6     6      0
                        _eepromWrite
                        i2_LCD_Clear
                    i2_LCD_String_xy
                          i2___awdiv
                          i2___awmod
                         i2_getValue
 ---------------------------------------------------------------------------------
 (8) i2_getValue                                          28    26      2    4313
                                             47 COMRAM    28    26      2
                    i2_LCD_String_xy
                           i2___wmul
                        i2_getKeypad
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (9) i2_sprintf                                           20    15      5    2445
                                             29 COMRAM    18    13      5
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (10) i2_vfprintf                                          6     2      4    2038
                                             23 COMRAM     6     2      4
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (11) i2_vfpfcnvrt                                        13    10      3    1838
                                             10 COMRAM    13    10      3
                          i2___awdiv
                          i2___awmod
                              i2_abs
                            i2_fputc
 ---------------------------------------------------------------------------------
 (12) i2_fputc                                             8     5      3     330
                                              0 COMRAM     8     5      3
                            i2_putch
 ---------------------------------------------------------------------------------
 (13) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (12) i2_abs                                               4     2      2      92
                                              6 COMRAM     4     2      2
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___awmod                                           6     2      4     400
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     404
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) i2_getKeypad                                          4     2      2      35
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     315
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2_LCD_String_xy                                      5     2      3     954
                                              9 COMRAM     5     2      3
                      i2_LCD_Command
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (10) i2_LCD_String                                        2     0      2     237
                                              7 COMRAM     2     0      2
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (11) i2_LCD_Char                                          1     1      0     166
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Clear                                          0     0      0     166
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (10) i2_LCD_Command                                       1     1      0     166
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (12) i2_MSdelay                                           6     4      2     144
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _eepromWrite                                          2     1      1     196
                                              8 COMRAM     2     1      1
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTERRUPT_Initialize
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _PWM2_Initialize
   _PWM_Output_D8_Enable
   _TMR2_Initialize
   _TMR2_StartTimer
     _TMR2_Start
   _closeBox
     _LCD_Clear
     _LCD_String_xy
     _PWM2_LoadDutyValue
     _PWM2_OutputStatusGet
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _eepromRead
   _getValue
     _LCD_String_xy
     ___wmul
     _getKeypad
     _sprintf
   _initializeKeypad
     _initializePORTA
     _initializePORTC
   _openBox
     _LCD_Clear
     _LCD_String_xy
     _PWM2_LoadDutyValue
     _PWM2_OutputStatusGet
     _sprintf

 _INT0_ISR (ROOT)
   _eepromWrite
     i2___awdiv (ARG)
     i2___awmod (ARG)
   i2_LCD_Clear
     i2_LCD_Command
       i2_MSdelay
   i2_LCD_String_xy
     i2_LCD_Command
     i2_LCD_String
       i2_LCD_Char
         i2_MSdelay
   i2___awdiv
   i2___awmod
   i2_getValue
     i2_LCD_String_xy
     i2___wmul
     i2_getKeypad
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2___awdiv
           i2___awmod
           i2_abs
             i2___awmod (ARG)
           i2_fputc
             i2_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      91        0.0%
BITBIGSFRlllhhl    49E      0       0      77        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllll    181      0       0      90        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      7C       5       77.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     51      5D       1       97.9%
BITBIGSFRlllhhl     5E      0       0      78        0.0%
BITBIGSFRllllhl     37      0       0      86        0.0%
BITBIGSFRllllhh     34      0       0      81        0.0%
BITBIGSFRlllhhl     2F      0       0      75        0.0%
BITBIGSFRhhhhh      28      0       0      69        0.0%
BITBIGSFRllllhh     24      0       0      82        0.0%
BITBIGSFRlllhhl     19      0       0      76        0.0%
BITBIGSFRlllllh      F      0       0      88        0.0%
BITBIGSFRlllllh      F      0       0      89        0.0%
BITBIGSFRlllhlh      F      0       0      79        0.0%
BITBIGSFRlllhll      F      0       0      80        0.0%
BITBIGSFRlllhhh      A      0       0      74        0.0%
BITBIGSFRhhhl        5      0       0      71        0.0%
BITBIGSFRlhl         4      0       0      73        0.0%
BITBIGSFRhl          4      0       0      72        0.0%
BITBIGSFRllllhl      2      0       0      85        0.0%
BITBIGSFRllllhl      2      0       0      84        0.0%
BITBIGSFRhhhhl       2      0       0      70        0.0%
BITBIGSFRllllhl      2      0       0      87        0.0%
BITBIGSFRllllhl      1      0       0      83        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D9      10        0.0%
DATA                 0      0      D9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun May 12 10:47:32 2024

               closeBox@i_749 009C         ?_PWM_Output_D8_Enable 0001                             _d 0052  
                ?_LCD_Command 0001                  ___awdiv@sign 0065           ___wmul@multiplicand 0062  
                 ?_LCD_String 0067       i2getKeypad@buttonNumber 0003                           l201 4EF8  
                         l210 4F36                           l202 4EEA                           l131 5DCE  
                         l140 58E4                           l125 5CC0                           l213 4F4E  
                         l205 4F1E                           l134 5D8A                           l206 4F10  
                         l311 5DAC                           l128 5E8A                           l153 59A2  
                         l305 5E44                           l145 5B0A                           l209 4F44  
                         l242 5D58                           l170 4DB2                           l162 5E78  
                         l316 5C90                           l244 5D66                           l228 4764  
                         l156 5E82                           l260 5222                           l245 5D68  
                         l181 4E36                           l173 4DE6                           l165 4D9A  
                         l341 452C                           l190 4E74                           l182 4E28  
                         l174 4DD8                           l166 4D8C                           l239 5CEE  
                         l319 5E6C                           l159 5E58                           l272 5DEC  
                         l344 5D1A                           l193 4EA8                           l185 4E5C  
                         l177 4E0C                           l169 4DC0                           l194 4E9A  
                         l186 4E4E                           l178 4DFE                           l275 5E9C  
                         l269 532C                           l197 4ED2                           l189 4E82  
                         l278 5E98                           l198 4EC4                           l575 54F0  
                         l588 5666                           _PR2 3FAB                           _abs 5BC0  
                ___awmod@sign 0065               _TMR2_Initialize 5DD0                           wreg 3FE8  
         __end_ofi2_vfpfcnvrt 4D6E                    i2_getValue 4766                   LCD_Char@dat 0066  
__end_of_PWM2_OutputStatusGet 5E6E                          l1022 5B86                          ?_abs 0066  
                        l1060 4B7A                          l2110 598C                          l1070 5BDC  
                        l2104 596E                          l2120 544C                          l2112 542C  
                        l2200 5760                          l3000 430E                          l1073 5BF4  
                        l2106 5972                          l2130 5480                          l2122 545A  
                        l2114 5432                          l2202 5792                          l1066 5A36  
                        l3010 4372                          l3002 432C                          l2108 5988  
                        l2140 54BA                          l2132 5488                          l2124 5462  
                        l2116 5440                          l3020 43DC                          l3012 437E  
                        l3004 433E                          l1085 57C4                          l2150 54E0  
                        l2142 54C2                          l2134 5490                          l2126 5466  
                        l2118 5448                          l2206 5BC0                          l3030 442E  
                        l3022 43F6                          l3014 4398                          l3006 4358  
                        l2152 54E8                          l2144 54C4                          l2136 549E  
                        l2128 546E                          l2160 55CA                          l2208 5BD0  
                        l1096 5EA0                          l3040 44A2                          l3032 4442  
                        l3024 43F8                          l3016 439C                          l3008 4360  
                        l2330 5D78                          l2146 54CA                          l2138 54A4  
                        l2170 55FE                          l2162 55D2                          l3050 44C4  
                        l3042 44A6                          l3034 445C                          l3026 43FC  
                        l3018 43B6                          l2332 5D7A                          l2324 5D6E  
                        l2148 54D0                          l2180 563A                          l2172 5606  
                        l2164 55D6                          l2156 55B6                          l2340 49B6  
                        l3060 4516                          l3052 44D6                          l3044 44BA  
                        l3028 4410                          l3036 4462                          l2334 5D7C  
                        l2326 5D74                          l2510 5ACC                          l2182 5640  
                        l2174 560E                          l2166 55E4                          l2158 55BC  
                        l2350 4A18                          l2342 49C2                          l3054 44F0  
                        l3038 4488                          l3062 451C                          l2096 5958  
                        l2328 5D76                          l2520 5AF8                          l2512 5ACC  
                        l2176 561C                          l2184 5646                          l2168 55EC  
                        l2192 5718                          l2360 4AB8                          l2352 4A34  
                        l2344 49C6                          l2336 4982                          l3056 44F6  
                        l2098 5966                          l2450 5DB8                          l2522 5AFE  
                        l2514 5ADE                          l2186 5656                          l2178 5632  
                        l2194 572A                          l2370 4B0E                          l2362 4ACC  
                        l2354 4A52                          l2346 49D8                          l2338 49AA  
                        l2530 4D84                          l3058 4512                          l2452 5DBA  
                        l2508 5E84                          l2460 5872                          l2516 5AE6  
                        l2188 565E                          l2196 573A                          l2372 4B28  
                        l2364 4ADC                          l2356 4A6A                          l2348 49F8  
                        l2380 4B54                          l2540 4E44                          l2532 4DA8  
                        l2700 4640                          l2524 5E46                          l2454 5DBC  
                        l2462 5876                          l2518 5AF0                          l2198 5744  
                        l2366 4AEC                          l2374 4B2C                          l2358 4A9C  
                        l2470 59FA                          l2550 4F06                          l2542 4E6A  
                        l2534 4DCE                          l2710 46A6                          l2702 465C  
                        l2526 5E6E                          l2456 5DBE                          l2448 5DB2  
                        l2464 58A4                          l2368 4AFC                          l2376 4B42  
                        l2472 5A0C                          l2560 5B66                          l2552 4F2C  
                        l2544 4E90                          l2536 4DF4                          l2528 4D6E  
                        l2712 46C2                          l2704 4674                          l2800 51E0  
                        l2458 5DC0                          l2650 5C92                          l2466 58AA  
                        l2570 5C78                          l2474 5A2C                          l2562 5B7A  
                        l2554 5B4C                          l2810 5236                          l2546 4EBA  
                        l2538 4E1E                          l2714 46DA                          l2706 468A  
                        l2802 51E6                          l2740 5CC6                          l2660 5CAE  
                        l2652 5CA0                          l2572 5C86                          l2580 5E5A  
                        l2468 59EE                          l2556 5B56                          l2820 5274  
                        l2812 524A                          l2548 4EE0                          l2716 46EC  
                        l2708 4696                          l2804 5202                          l2750 5CDA  
                        l2742 5CD2                          l2662 5CB4                          l2654 5CA4  
                        l2574 5C8A                          l2566 5C60                          l2558 5B5E  
                        l2830 52C6                          l2822 5286                          l2718 475C  
                        l2670 4530                          l2806 5206                          l2752 5CDE  
                        l2744 5CD4                          l2664 5CBA                          l2656 5CA6  
                        l2584 5E9A                          l2568 5C6A                          l2824 52A0  
                        l2808 5224                          l2760 5D56                          l2680 4574  
                        l2672 4542                          l2754 5CE0                          l2746 5CD6  
                        l2738 5CC2                          l2658 5CA8                          l2850 530C  
                        l2842 52D8                          l2826 52A6                          l2818 5254  
                        l2586 5CF0                          l2690 45DA                          l2682 4590  
                        l2674 4542                          l2666 5E7A                          l2762 511A  
                        l2748 5CD8                          l2860 5E2A                          l2852 5310  
                        l2844 52E0                          l2836 52D0                          l2828 52C2  
                        l2756 5D4A                          l2588 5D12                          l2692 45F6  
                        l2684 45A8                          l2676 4558                          l2668 5E7E  
                        l2780 519C                          l2772 514A                          l2764 512C  
                        l2862 5E34                          l2854 5DD0                          l2846 52EA  
                        l2758 5D50                          l2694 460E                          l2686 45BE  
                        l2678 4564                          l2790 51C6                          l2782 51B8  
                        l2774 516A                          l2766 5140                          l2950 41C2  
                        l2864 5E42                          l2856 5DE4                          l2848 52F0  
                        l2696 4624                          l2688 45CA                          l2784 51BC  
                        l2776 517C                          l2960 41D6                          l2952 41C6  
                        l2866 5D8C                          l2858 5E94                          l2698 4630  
                        l2778 5196                          l2970 4216                          l2962 41DA  
                        l2954 41CA                          l2868 5D96                          l2796 51CE  
                        l2980 426E                          l2972 4228                          l2964 41DE  
                        l2956 41CE                          l2798 51D6                          l2990 42A4  
                        l2974 423C                          l2966 41E2                          l2958 41D2  
                        l2992 42AA                          l2976 4256                          l2968 41E6  
                        l2994 42C6                          l2986 4278                          l2978 425A  
                        l2996 42CA                          l2988 428A                          l2998 42E8  
                        STR_1 41B9                          STR_2 41BE                          STR_3 41BE  
                        STR_4 41BE                          STR_5 41BE                          STR_6 4176  
                        STR_7 4167                          STR_8 40D5                          STR_9 4108  
                        u2100 58A0                          u2110 58D4                          u2120 58E4  
                        u2200 4D9A                          u3000 43B6                          u2121 58E0  
                        u2201 4D96                          u3001 43B2                          u2130 5A2C  
                        u2210 4DA8                          u3010 4512                          u2107 5892  
                        u2131 5A28                          u2211 4DA4                          u3011 450E  
                        u2300 4E5C                          u2220 4DC0                          u3020 452C  
                        u2117 58C6                          u2301 4E58                          u2221 4DBC  
                        u3021 4528                          _LATA 3FBA                          u2310 4E6A  
                        u2230 4DCE                          _LATB 3FBB                          u2311 4E66  
                        u2231 4DCA                          u1520 5988                          u1600 55CA  
                        u2400 4F1E                          u2320 4E82                          u2240 4DE6  
                        _LATD 3FBD                          u1521 5984                          u1601 55C6  
                        u2401 4F1A                          u2321 4E7E                          u2241 4DE2  
                        u1530 59A2                          u1610 55E4                          u2410 4F2C  
                        u2330 4E90                          u2250 4DF4                          u1531 599E  
                        u1611 55E0                          u2411 4F28                          u2331 4E8C  
                        u2251 4DF0                          u3107 444E                          u2180 5ADE  
                        u1540 5440                          u1620 55FE                          u1700 5BD0  
                        u2420 4F44                          u2340 4EA8                          u2260 4E0C  
                        u2181 5ADA                          u1541 543C                          u1621 55FA  
                        u1701 5BCC                          u2421 4F40                          u2341 4EA4  
                        u2261 4E08                          u3117 4494                          u3037 4248  
                        u2430 5C78                          u1550 545A                          u1630 561C  
                        u2350 4EBA                          u2270 4E1E                          u2190 4D84  
                        u2431 5C74                          u1551 5456                          u1631 5618  
                        u2351 4EB6                          u2271 4E1A                          u2191 4D80  
                        u3127 44E2                          u3047 4296                          u1560 5480  
                        u1640 5632                          u2360 4ED2                          u2280 4E36  
                        u1561 547C                          u1641 562E                          u2361 4ECE  
                        u2281 4E32                          u3137 5188                          u3057 431A  
                        u2450 5E6A                          u1570 549E                          u1650 5656  
                        u2370 4EE0                          u2290 4E44                          _T2PR 3FAB  
                        u2451 5E64                          u1571 549A                          u1651 5652  
                        u3147 5292                          u2371 4EDC                          u2291 4E40  
                        u3067 434A                          u1580 54BA                          u1660 572A  
                        u1900 49AA                          u2380 4EF8                          u2445 5C7A  
                        u1581 54B6                          u1661 5726                          u1901 49A6  
                        u2381 4EF4                          u3077 438A                          u1590 54E0  
                        u1670 573A                          u1910 49F8                          u2390 4F06  
                        u2710 4574                          u1591 54DC                          u1671 5736  
                        u1911 49F4                          u2391 4F02                          u2711 4570  
                        u3087 43E8                          u2456 5E6C                          u1680 5760  
                        u1920 4A18                          u2800 5D66                          u2720 4590  
                        u1681 575C                          u1921 4A14                          u2801 5D62  
                        u2721 458C                          u3097 441C                          u1690 5792  
                        u1930 4A66                          u2730 45DA                          u2810 51B8  
                        u1691 578E                          u1931 4A60                          u2731 45D6  
                        u2811 51B4                          u1940 4A68                          u2740 45F6  
                        u2741 45F2                          u1950 4ACC                          u2750 4640  
                        u2830 5202                          u1951 4AC8                          u2751 463C  
                        u2831 51FE                          u1960 4ADC                          u2760 465C  
                        u2840 5222                          u1961 4AD8                          u2761 4658  
                        u2841 521E                          u2825 51DE                          u1970 4AEC  
                        u2850 52C2                          u2770 46A6                          u2826 51E0  
                        u1971 4AE8                          u2851 52BE                          u2771 46A2  
                        u1980 4AFC                          u2780 46C2                          u1981 4AF8  
                        u2781 46BE                          u1990 4B3E                          u2870 530C  
                        u1991 4B3A                          u2871 5308                          u2880 532C  
                        u2881 5328                          u2865 52E8                          u2866 52EA  
                        u2980 42C6                          u2981 42C2                          u2990 42E8  
                        u2991 42E4                          _TMR2 3FAA                   ?i2_LCD_Char 0001  
                        abs@a 0066                          _dbuf 00B3                          _main 41C2  
                        _prec 00D5                          fsr1h 3FE2                          fsr2h 3FDA  
                        indf1 3FE7                          indf2 3FDF                          fsr1l 3FE1  
                        fsr2l 3FD9                          prodh 3FF4                          prodl 3FF3  
                        start 40AE               __end_of_MSdelay 59A4               __end_ofi2_fputc 5872  
               _LCD_String_xy 5AC8               __end_ofi2_putch 5EA4                  ___param_bank 0000  
                 i2_getKeypad 4F50                         ??_abs 0068              __end_of_LCD_Char 5D8C  
                  i2_vfprintf 5A82       __end_of_PWM2_Initialize 5DAE              __end_of_LCD_Init 5CC2  
            __end_of_INT0_ISR 542C                         ?_main 0001               __end_of___awdiv 54F2  
                       STR_10 41BE                         STR_11 4118                         STR_12 41BE  
                       STR_20 40C4                         STR_21 4191                         STR_13 4128  
                       STR_22 41B1                         STR_14 40B3                         STR_23 41A8  
                       STR_15 40E6                         STR_16 418F                         STR_24 419D  
                       STR_25 4191                         STR_17 4148                         STR_26 4184  
                       STR_18 40F7                         STR_27 4158                         STR_19 4138  
                       STR_28 418F               __end_of___awmod 5668               ___awdiv@divisor 0062  
                       _T2CON 3FAC                         _LATC2 1FDE2                         _LATC3 1FDE3  
                       _T2HLT 3FAD             ??_initializePORTA 0060             ??_initializePORTC 0060  
                       _T2TMR 3FAA                         _T2RST 3FAF                         i2l201 50C6  
                       i2l210 5100                         i2l202 50B8                         i2l131 5E28  
                       i2l140 5956                         i2l213 5118                         i2l205 50EA  
                       i2l134 5E0A                         i2l206 50DC                         i2l128 5E92  
                       i2l153 5A80                         i2l145 5B4A                         i2l209 510E  
                       i2l250 5C26                         i2l170 4F90                         i2l251 5C2A  
                       i2l228 4980                         i2l236 5412                         i2l181 500E  
                       i2l173 4FC2                         i2l165 4F7A                         i2l190 5048  
                       i2l182 5000                         i2l174 4FB4                         i2l166 4F6C  
                       i2l248 5C18                         i2l344 5D44                         i2l193 507A  
                       i2l185 5032                         i2l177 4FE6                         i2l169 4F9E  
                       i2l194 506C                         i2l186 5024                         i2l178 4FD8  
                       i2l197 50A2                         i2l189 5056                         i2l198 5094  
                       i2l575 55B4                         i2l588 5716               ___awdiv@counter 0064  
                vfpfcnvrt@fmt 006B                         _PORTA 3FCA                         _PORTB 3FCB  
                       _TRISA 3FC2                         _TRISB 3FC3                         _TRISD 3FC5  
                       i2_abs 5C2C                  ?i2_LCD_Clear 0001                         _flags 00D9  
                 ?_TMR2_Start 0001                         _fputc 5718                         _width 00D3  
                       _putch 5EA0                         main@i 00AF                         _pword 00D7  
             __end_of_openBox 5224                         tablat 3FF5              __end_ofi2___wmul 5D46  
                       status 3FD8               __end_of_sprintf 5B88               _TMR2_StartTimer 5E94  
              ?_LCD_String_xy 0069        ??_PWM_Output_D8_Enable 0060               __initialization 59A4  
                __end_of_main 4530       __end_of_TMR2_Initialize 5DEE                   i2_vfpfcnvrt 4B7C  
               i2vfpfcnvrt@ap 000D                 i2vfpfcnvrt@cp 0011                 i2vfpfcnvrt@fp 000B  
                      ??_main 00AB                i2getValue@data 0038             __end_of_LCD_Clear 5E8C  
               __activetblptr 0002                    i2sprintf@f 0024                    i2sprintf@s 001E  
                      ?i2_abs 0007                   ?i2_getValue 0030                        ?_fputc 0060  
                      _CCPR2H 3F79                        _CCPR2L 3F78              ___awdiv@dividend 0060  
                      _ANSELA 3A40                        ?_putch 0001                        _ANSELB 3A50  
            LCD_String_xy@msg 006A              LCD_String_xy@pos 0069              LCD_String_xy@row 006C  
                      _RB3PPS 3A0B                        i2l1022 5BBE                        i2l1060 4D6C  
                      i2l1070 5C46                     ??_MSdelay 0062                        i2l1073 5C5E  
                      i2l2210 5A38                        i2l1066 5AC6                        i2l2220 5A50  
                      i2l2212 5A44                        i2l2300 5706                        i2l1085 5870  
                      i2l2222 5A66                        i2l2230 5504                        i2l2302 570E  
                      i2l2310 57C6                        i2l2224 5A6A                        i2l2240 552A  
                      i2l2232 550C                        i2l1096 5EA2                        i2l2320 583E  
                      i2l2312 57D6                        i2l2400 4BA2                        i2l2218 5A4C  
                      i2l2250 5562                        i2l2242 5532                        i2l2234 5510  
                      i2l2226 54F2                        i2l2306 5C2C                        i2l2314 57E6  
                      i2l2410 4BF2                        i2l2402 4BAE                        i2l2260 558E  
                      i2l2252 5568                        i2l2244 5544                        i2l2236 551E  
                      i2l2228 54F6                        i2l2308 5C3A                        i2l2316 57F0  
                      i2l2420 4C94                        i2l2412 4C12                        i2l2404 4BBC  
                      i2l2500 5A8E                        i2l2254 557E                        i2l2246 554C  
                      i2l2262 5594                        i2l2238 5526                        i2l2270 5668  
                      i2l2318 580C                        i2l2430 4CF2                        i2l2422 4CB0  
                      i2l2414 4C2E                        i2l2406 4BC0                        i2l2502 5A9E  
                      i2l2600 5B30                        i2l2264 55A4                        i2l2256 5586  
                      i2l2248 5554                        i2l2280 5694                        i2l2272 566C  
                      i2l2432 4D04                        i2l2424 4CC2                        i2l2416 4C4C  
                      i2l2408 4BD2                        i2l2504 5ABE                        i2l2602 5B38  
                      i2l2610 4F88                        i2l2266 55AC                        i2l2258 5588  
                      i2l2290 56CC                        i2l2282 569C                        i2l2274 567A  
                      i2l2434 4D1E                        i2l2426 4CD2                        i2l2418 4C64  
                      i2l2442 4D46                        i2l2604 5B3E                        i2l2620 5040  
                      i2l2612 4FAC                        i2l2292 56E2                        i2l2284 56AE  
                      i2l2276 5682                        i2l2428 4CE2                        i2l2436 4D20  
                      i2l2390 5DF8                        i2l2630 50F8                        i2l2622 5064  
                      i2l2614 4FD0                        i2l2606 4F50                        i2l2294 56EA  
                      i2l2286 56B6                        i2l2278 5686                        i2l2438 4D36  
                      i2l2480 5E14                        i2l2392 5DFA                        i2l2632 5D1C  
                      i2l2624 508C                        i2l2616 4FF8                        i2l2608 4F64  
                      i2l2296 56F0                        i2l2288 56BE                        i2l2640 5B90  
                      i2l2730 5C0C                        i2l2722 5BF8                        i2l2482 5E16  
                      i2l2394 5DFC                        i2l2386 5DF0                        i2l2490 58E6  
                      i2l2634 5D3C                        i2l2626 50B0                        i2l2618 501C  
                      i2l2298 56F6                        i2l2642 5B98                        i2l2732 5C0E  
                      i2l2724 5BFE                        i2l2484 5E18                        i2l2396 5DFE  
                      i2l2388 5DF6                        i2l2492 58EA                        i2l2628 50D4  
                      i2l2644 5BA0                        i2l2900 485C                        i2l2734 5C12  
                      i2l2726 5C04                        i2l2486 5E1A                        i2l2478 5E0E  
                      i2l2494 5918                        i2l2398 4B7C                        i2l2646 5BB4  
                      i2l2638 5B88                        i2l2910 48BE                        i2l2902 486A  
                      i2l2736 5C16                        i2l2728 5C0A                        i2l2488 5E1C  
                      i2l2496 591C                        i2l2592 5B0E                        i2l2920 4978  
                      i2l2912 48CC                        i2l2904 4886                        i2l2594 5B0E  
                      i2l2498 5A82                        i2l2914 48E8                        i2l2906 489E  
                      i2l2930 536C                        i2l2596 5B1E                        i2l2916 4900  
                      i2l2908 48B2                        i2l2940 53B6                        i2l2932 5378  
                      i2l2924 5348                        i2l2870 5E8C                        i2l2598 5B26  
                      i2l2918 4910                        i2l2942 53CC                        i2l2934 538E  
                      i2l2926 5356                        i2l2880 4798                        i2l2872 4766  
                      i2l2944 53D0                        i2l2936 5392                        i2l2928 535A  
                      i2l2890 47FA                        i2l2882 47A6                        i2l2874 4776  
                      i2l2946 53EE                        i2l2938 53A4                        i2l2892 4808  
                      i2l2884 47C2                        i2l2876 4776                        i2l2948 540E  
                      i2l2894 4824                        i2l2886 47DA                        i2l2878 478C  
                      i2l2896 483C                        i2l2888 47EE                        i2l2898 4850  
                   ??i2_fputc 0004             ?_initializeKeypad 0001                        _OSCFRQ 39DF  
               vfpfcnvrt@done 006F                        _NVMDAT 39E3                     ??i2_putch 0001  
                      i2abs@a 0007            ??_initializeKeypad 0060              __end_of_getValue 4766  
            __end_of_closeBox 532E             __end_ofi2_MSdelay 5A82                  _CCPTMRS0bits 3F5E  
                vfprintf@cfmt 007B             closeBox@pwmStatus 009B                 i2vfprintf@fmt 0019  
                      ___wmul 5CF0                     ??___awdiv 0064                     ??___awmod 0064  
                 ?i2_vfprintf 0018              ?_PWM2_Initialize 0001          _PWM2_OutputStatusGet 5E5A  
                      clear_0 59C6                        clear_1 59D2               eepromWrite@data 0009  
            ___awdiv@quotient 0066               ___awmod@divisor 0062                 ?i2_LCD_String 0008  
                      isa$std 0001               ___awmod@counter 0064                i2___awdiv@sign 0006  
                      fputc@c 0060             __end_ofi2___awdiv 55B6             __end_ofi2___awmod 5718  
                   ??_openBox 008F                  __mediumconst 40B2                        tblptrh 3FF7  
                      tblptrl 3FF6                        tblptru 3FF8                        putch@c 0001  
            __end_of_vfprintf 5A38                i2___awmod@sign 0006             ??i2_LCD_String_xy 000D  
     __end_of_TMR2_StartTimer 5E9A                     ??_sprintf 0082                     ?_LCD_Char 0001  
                  __accesstop 0060       __end_of__initialization 59E4                     ?_LCD_Init 0001  
                   ?_INT0_ISR 0001               ??_LCD_String_xy 006C    __end_of_PWM2_LoadDutyValue 5C92  
               ___rparam_used 0001             __end_ofi2_sprintf 5BC0                 __end_ofi2_abs 5C60  
              __pcstackCOMRAM 0001                  __pidataBANK0 5E9E                 __end_of_fputc 57C6  
       ?_PWM2_OutputStatusGet 0001                 __end_of_putch 5EA2                ??i2_LCD_String 000A  
            ?_TMR2_Initialize 0001                  ??_LCD_String 0069                     ?i2___wmul 0001  
            i2LCD_Command@cmd 0007             eepromRead@address 0060                       ??i2_abs 0009  
              i2vfpfcnvrt@fmt 000C                       ??_fputc 0063                       ??_putch 0060  
                  __pbssBANK0 00B3                   i2sprintf@ap 0023                  ??i2_LCD_Char 0007  
                  ??_LCD_Char 0066                    ??_LCD_Init 0067                    ??_INT0_ISR 004C  
          __end_of_LCD_String 58E6                       IVTBASEH 3FD6                       IVTBASEL 3FD5  
                     IVTBASEU 3FD7               _initializePORTA 5E46               _initializePORTC 5E6E  
                     ?___wmul 0060                  ?i2_getKeypad 0001                       _CCP2CON 3F7A  
               i2_LCD_Command 5E0C                    ??i2___wmul 0005            __end_ofi2_LCD_Char 5E0C  
                  _eepromRead 5D46                       _NVMADRL 39E0                       _NVMCON1 39E5  
                     _NVMCON2 39E6                       _PPSLOCK 3ABF                  ??_TMR2_Start 0060  
                   ?_getValue 008F                     ?_closeBox 0001              ?_TMR2_StartTimer 0001  
                     _MSdelay 5958                       i2_fputc 57C6                       i2_putch 5EA2  
               LCD_String@msg 0067             __end_of_getKeypad 4F50                       __Hparam 0000  
                     __Lparam 0000        ??_PWM2_OutputStatusGet 0060                       ___awdiv 542C  
                     ___awmod 55B6                     ?_vfprintf 0077                i2vfprintf@cfmt 001C  
              ?i2_LCD_Command 0001            __end_of_TMR2_Start 5E9E                  ?i2_vfpfcnvrt 000B  
                     __pcinit 59A4                       __ramtop 2000                 ivt0x4008_base 4008  
                     __ptext0 41C2                       __ptext1 511A                       __ptext2 5E7A  
                     __ptext3 5E6E                       __ptext4 5E46                       __ptext5 4530  
                     __ptext6 4D6E                       __ptext7 5CF0                       __ptext8 5D46  
                     __ptext9 5224                     _T2CONbits 3FAC              ___awmod@dividend 0060  
                     _openBox 511A                     _LCD_Clear 5E84                  ??i2_getValue 0032  
                  ??_getValue 0091                    ??_closeBox 008F                       _sprintf 5B4C  
        end_of_initialization 59E4          __end_ofi2_LCD_String 5958       __end_of_initializePORTA 5E5A  
     __end_of_initializePORTC 5E7A                       fputc@fp 0062                LCD_Command@cmd 0066  
               __Lmediumconst 40B2           i2___wmul@multiplier 0001        i2getValue@decimalValue 0042  
           __end_of_vfpfcnvrt 4B7C                       postdec2 3FDD                       postinc0 3FEE  
                     postinc1 3FE6                       postinc2 3FDE              vfpfcnvrt@convarg 0072  
                ??i2_vfprintf 001C                    ??_vfprintf 007B            __end_ofi2_getValue 4982  
                   i2_MSdelay 5A38               i2_LCD_String_xy 5B0C                     _PORTAbits 3FCA  
                   _PORTBbits 3FCB                     _PORTCbits 3FCC                   ?_eepromRead 0001  
                   _TRISBbits 3FC3                     _TRISCbits 3FC4                    ?_LCD_Clear 0001  
                   i2___awdiv 54F2                     i2___awmod 5668            __end_ofi2_vfprintf 5AC8  
               ??_eepromWrite 000A                   _CCP2CONbits 3F7A            i2___awdiv@dividend 0001  
          i2LCD_String_xy@msg 000B            i2LCD_String_xy@pos 000A            i2LCD_String_xy@row 000D  
             ??i2_LCD_Command 0007                     i2_sprintf 5B88  __end_of_INTERRUPT_Initialize 5CF0  
               ??_LCD_Command 0066                   vfpfcnvrt@ap 006C                   vfpfcnvrt@cp 0070  
                 vfpfcnvrt@fp 006A                __end_of___wmul 5D1C                    ?i2_MSdelay 0001  
          _PWM2_LoadDutyValue 5C60                     i2fputc@fp 0003              i2___wmul@product 0005  
         start_initialization 59A4            i2___awdiv@quotient 0007           ?_PWM2_LoadDutyValue 0060  
                 __end_of_abs 5BF6                    ?i2___awdiv 0001                    ?i2___awmod 0001  
                i2vfpfcnvrt@c 0017              ?_initializePORTA 0001              ?_initializePORTC 0001  
       __end_of_LCD_String_xy 5B0C          ??_PWM2_LoadDutyValue 0062       __end_ofi2_LCD_String_xy 5B4C  
                 vfprintf@fmt 0078                  i2vfprintf@ap 001B               i2vfpfcnvrt@done 0010  
                i2vfprintf@fp 0018   PWM2_LoadDutyValue@dutyValue 0060           __end_of_eepromWrite 5C2C  
                    ??___wmul 0064                    ?i2_sprintf 001E                   __pdataBANK0 00DA  
            i2getValue@value1 0044              i2getValue@value2 0046              i2getValue@value3 0048  
            i2getValue@value4 004A           __end_of_LCD_Command 5DD0                  i2sprintf@fmt 001F  
                 __pbssCOMRAM 0052                 __pcstackBANK0 0060                 ??i2_LCD_Clear 0008  
                 ??_LCD_Clear 0067                 i2LCD_Char@dat 0007                      ?_MSdelay 0060  
                    ?i2_fputc 0001                      ?i2_putch 0001                   __pivt0x4008 4008  
                i2MSdelay@val 0001                  openBox@i_741 009C                 __pmediumconst 40B2  
                   _getKeypad 4D6E                      ?___awdiv 0060                      ?___awmod 0060  
            _initializeKeypad 5E7A                   ??i2_MSdelay 0003                  i2_LCD_String 58E6  
                    ?_openBox 0001         LCD_String_xy@location 006D                   ??i2___awdiv 0005  
                 ??i2___awmod 0005                      ?_sprintf 007D                      _T2CLKCON 3FAE  
        _INTERRUPT_Initialize 5CC2            eepromWrite@address 000A                      MSdelay@i 0062  
                    MSdelay@j 0064                      _LCD_Char 5D6A             ??_PWM2_Initialize 0060  
         __end_ofi2_LCD_Clear 5E94                      _LCD_Init 5C92                      _INT0_ISR 5330  
              ___wmul@product 0064                      _LATCbits 3FBC                   _eepromWrite 5BF6  
                    _IPR1bits 3981                      _PIE1bits 3991                      _IVTBASEH 3FD6  
                    _IVTBASEL 3FD5                      _IVTBASEU 3FD7                      i2u200_40 4BA2  
                    i2u200_41 4B9E                      i2u201_40 4BF2                      i2u201_41 4BEE  
                    i2u202_40 4C12                      i2u202_41 4C0E                      i2u203_40 4C60  
                    i2u203_41 4C5A                      i2u204_40 4C62                      i2u205_40 4CC2  
                    i2u205_41 4CBE                      i2u214_40 5914                      i2u206_40 4CD2  
                    i2u206_41 4CCE                      i2u214_47 5906                      i2u215_40 5946  
                    i2u207_40 4CE2                      i2u207_41 4CDE                      i2u215_47 5938  
                    i2u216_40 5956                      i2u208_40 4CF2                      i2u216_41 5952  
                    i2u208_41 4CEE                      i2u209_40 4D32                      i2u217_40 5ABE  
                    i2u209_41 4D2E                      i2u217_41 5ABA                      i2u250_40 4F9E  
                    i2u250_41 4F9A                      i2u171_40 5A66                      i2u251_40 4FAC  
                    i2u171_41 5A62                      i2u251_41 4FA8                      i2u315_47 5382  
                    i2u172_40 5A80                      i2u260_40 5056                      i2u252_40 4FC2  
                    i2u180_40 5694                      i2u172_41 5A7C                      i2u260_41 5052  
                    i2u252_41 4FBE                      i2u180_41 5690                      i2u316_47 53C0  
                    i2u261_40 5064                      i2u253_40 4FD0                      i2u173_40 5504  
                    i2u181_40 56AE                      i2u261_41 5060                      i2u253_41 4FCC  
                    i2u173_41 5500                      i2u181_41 56AA                      i2u246_40 5B1E  
                    i2u270_40 510E                      i2u262_40 507A                      i2u254_40 4FE6  
                    i2u174_40 551E                      i2u182_40 56CC                      i2u246_41 5B1A  
                    i2u270_41 510A                      i2u262_41 5076                      i2u254_41 4FE2  
                    i2u174_41 551A                      i2u182_41 56C8                      i2u263_40 508C  
                    i2u255_40 4FF8                      i2u247_40 4F64                      i2u175_40 5544  
                    i2u183_40 56E2                      i2u263_41 5088                      i2u255_41 4FF4  
                    i2u247_41 4F60                      i2u175_41 5540                      i2u183_41 56DE  
                    i2u264_40 50A2                      i2u256_40 500E                      i2u248_40 4F7A  
                    i2u176_40 5562                      i2u184_40 5706                      i2u264_41 509E  
                    i2u256_41 500A                      i2u248_41 4F76                      i2u176_41 555E  
                    i2u184_41 5702                      i2u265_40 50B0                      i2u257_40 501C  
                    i2u249_40 4F88                      i2u177_40 557E                      i2u185_40 5C3A  
                    i2u265_41 50AC                      i2u257_41 5018                      i2u249_41 4F84  
                    i2u177_41 557A                      i2u185_41 5C36                      _PIR1bits 39A1  
                    i2u266_40 50C6                      i2u258_40 5032                      i2u178_40 55A4  
                    i2u186_40 57D6                      i2u290_40 47C2                      i2u266_41 50C2  
                    i2u258_41 502E                      i2u178_41 55A0                      i2u186_41 57D2  
                    i2u290_41 47BE                      i2u267_40 50D4                      i2u259_40 5040  
                    i2u179_40 567A                      i2u187_40 57E6                      i2u291_40 4808  
                    i2u267_41 50D0                      i2u259_41 503C                      i2u179_41 5676  
                    i2u187_41 57E2                      i2u291_41 4804                      i2u268_40 50EA  
                    i2u188_40 580C                      i2u292_40 4824                      i2u268_41 50E6  
                    i2u188_41 5808                      i2u292_41 4820                      i2u269_40 50F8  
                    i2u189_40 583E                      i2u293_40 486A                      i2u269_41 50F4  
                    i2u189_41 583A                      i2u293_41 4866                      i2u294_40 4886  
                    i2u294_41 4882                      i2u279_40 5C26                      i2u295_40 48CC  
                    i2u279_41 5C22                      i2u295_41 48C8                      _PIR4bits 39A4  
                    i2u296_40 48E8                      i2u296_41 48E4                      i2u289_40 47A6  
                    i2u297_40 5356                      i2u289_41 47A2                      i2u297_41 5352  
            ?i2_LCD_String_xy 000A             ivt0x4008_undefint 40AC                    ?_getKeypad 0060  
                 ??i2_sprintf 0023                   _LCD_Command 5DAE                     _vfpfcnvrt 4982  
                   closeBox@d 0091                     closeBox@i 00A0                     closeBox@j 009E  
                   main@i_854 00B1             ___wmul@multiplier 0060                      i2___wmul 5D1C  
                   _userGuess 00DA                  ??_eepromRead 0060             i2___awdiv@divisor 0003  
           i2___awdiv@counter 0005  __end_of_PWM_Output_D8_Enable 5E46                    vfpfcnvrt@c 0076  
                 _INTCON0bits 3FD2                      i2fputc@c 0001         ?_INTERRUPT_Initialize 0001  
          i2___awmod@dividend 0001             ??_TMR2_Initialize 0060                getValue@value1 00A3  
              getValue@value2 00A5                getValue@value3 00A7                getValue@value4 00A9  
                    __Hrparam 0000                    vfprintf@ap 007A                      __Lrparam 0000  
                  vfprintf@fp 0077            __end_of_eepromRead 5D6A               i2LCD_String@msg 0008  
       i2___wmul@multiplicand 0003                    ?_vfpfcnvrt 006A                    _ANSELCbits 3A60  
          i2vfpfcnvrt@convarg 0013         getKeypad@buttonNumber 0062                    sprintf@fmt 007E  
                 i2_LCD_Clear 5E8C                      __ptext10 5B4C                      __ptext11 59EE  
                    __ptext20 5AC8                      __ptext12 4982                      __ptext21 5872  
                    __ptext13 5718                      __ptext30 5DAE                      __ptext22 5D6A  
                    __ptext14 5EA0                      __ptext31 5958                      __ptext23 5E84  
                    __ptext15 5BC0                      __ptext40 5C2C                      __ptext32 5CC2  
                    __ptext24 5E94                      __ptext16 55B6                      __ptext41 5668  
                    __ptext33 5330                      __ptext25 5E9A                      __ptext17 542C  
                    __ptext50 5A38                      __ptext42 54F2                      __ptext34 4766  
                    __ptext26 5DD0                      __ptext18 5E5A                      __ptext51 5BF6  
                    __ptext43 4F50                      __ptext35 5B88                      __ptext27 5E2A  
                    __ptext19 5C60                      __ptext44 5D1C                      __ptext36 5A82  
                    __ptext28 5D8C                      __ptext45 5B0C                      __ptext37 4B7C  
                    __ptext29 5C92                      __ptext46 58E6                      __ptext38 57C6  
                    __ptext47 5DEE                      __ptext39 5EA2                      __ptext48 5E8C  
                    __ptext49 5E0C                      _getValue 4530                      _closeBox 5224  
                    _password 005C                    MSdelay@val 0060                      isa$xinst 0000  
        getValue@decimalValue 00A1                 ??i2_getKeypad 0003                   ??_getKeypad 0062  
                    _vfprintf 59EE             ??_TMR2_StartTimer 0060         __end_ofi2_LCD_Command 5E2A  
                  _LCD_String 5872                   _OSCSTATbits 39DC             i2___awmod@divisor 0003  
           i2___awmod@counter 0005                   _NVMCON1bits 39E5       i2LCD_String_xy@location 000E  
      ??_INTERRUPT_Initialize 0060                      intlevel2 0000                     sprintf@ap 0082  
    __end_of_initializeKeypad 5E84                    i2MSdelay@i 0003                    i2MSdelay@j 0005  
            openBox@pwmStatus 009B                      openBox@d 0091                      openBox@i 00A0  
                    openBox@j 009E                    i2_LCD_Char 5DEE                   _PPSLOCKbits 3ABF  
        _PWM_Output_D8_Enable 5E2A                  getValue@data 0097                 ??i2_vfpfcnvrt 000E  
                 ??_vfpfcnvrt 006D           __end_ofi2_getKeypad 511A                      sprintf@f 0083  
                    sprintf@s 007D               _PWM2_Initialize 5D8C                    _TMR2_Start 5E9A  
                ?_eepromWrite 0009  
