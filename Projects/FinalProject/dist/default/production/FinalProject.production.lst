

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 11 10:51:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 12/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F47K42 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     _PORTAbits	set	16330
    70   000000                     _LATCbits	set	16316
    71   000000                     _LATC3	set	130531
    72   000000                     _ANSELA	set	14912
    73   000000                     _LATA	set	16314
    74   000000                     _LATD	set	16317
    75   000000                     _TRISCbits	set	16324
    76   000000                     _TRISD	set	16325
    77   000000                     _LATC2	set	130530
    78   000000                     _PORTA	set	16330
    79   000000                     _TRISA	set	16322
    80   000000                     _PORTCbits	set	16332
    81   000000                     _ANSELCbits	set	14944
    82                           
    83                           	psect	smallconst
    84   002000                     __psmallconst:
    85                           	callstack 0
    86   002000  00                 	db	0
    87   002001                     STR_6:
    88   002001  54                 	db	84	;'T'
    89   002002  65                 	db	101	;'e'
    90   002003  73                 	db	115	;'s'
    91   002004  74                 	db	116	;'t'
    92   002005  69                 	db	105	;'i'
    93   002006  6E                 	db	110	;'n'
    94   002007  67                 	db	103	;'g'
    95   002008  20                 	db	32
    96   002009  4B                 	db	75	;'K'
    97   00200A  65                 	db	101	;'e'
    98   00200B  79                 	db	121	;'y'
    99   00200C  70                 	db	112	;'p'
   100   00200D  61                 	db	97	;'a'
   101   00200E  64                 	db	100	;'d'
   102   00200F  3A                 	db	58	;':'
   103   002010  20                 	db	32
   104   002011  00                 	db	0
   105   002012                     STR_1:
   106   002012  5F                 	db	95	;'_'
   107   002013  5F                 	db	95	;'_'
   108   002014  5F                 	db	95	;'_'
   109   002015  5F                 	db	95	;'_'
   110   002016  00                 	db	0
   111   002017                     STR_2:
   112   002017  25                 	db	37
   113   002018  64                 	db	100	;'d'
   114   002019  00                 	db	0
   115   00201A  00                 	db	0	; dummy byte at the end
   116   000000                     
   117                           ; #config settings
   118                           
   119                           	psect	cinit
   120   002A08                     __pcinit:
   121                           	callstack 0
   122   002A08                     start_initialization:
   123                           	callstack 0
   124   002A08                     __initialization:
   125                           	callstack 0
   126                           
   127                           ; Clear objects allocated to BANK0 (32 bytes)
   128   002A08  EE00  F060         	lfsr	0,__pbssBANK0
   129   002A0C  0E20               	movlw	32
   130   002A0E                     clear_0:
   131   002A0E  6AEE               	clrf	postinc0,c
   132   002A10  06E8               	decf	wreg,f,c
   133   002A12  E1FD               	bnz	clear_0
   134                           
   135                           ; Clear objects allocated to COMRAM (9 bytes)
   136   002A14  EE00  F047         	lfsr	0,__pbssCOMRAM
   137   002A18  0E09               	movlw	9
   138   002A1A                     clear_1:
   139   002A1A  6AEE               	clrf	postinc0,c
   140   002A1C  06E8               	decf	wreg,f,c
   141   002A1E  E1FD               	bnz	clear_1
   142   002A20                     end_of_initialization:
   143                           	callstack 0
   144   002A20                     __end_of__initialization:
   145                           	callstack 0
   146   002A20  0E00               	movlw	low (__Lmediumconst shr (0+16))
   147   002A22  6EF8               	movwf	tblptru,c
   148   002A24  0100               	movlb	0
   149   002A26  EFBF  F014         	goto	_main	;jump to C main() function
   150                           
   151                           	psect	bssCOMRAM
   152   000047                     __pbssCOMRAM:
   153                           	callstack 0
   154   000047                     _width:
   155                           	callstack 0
   156   000047                     	ds	2
   157   000049                     _prec:
   158                           	callstack 0
   159   000049                     	ds	2
   160   00004B                     _password:
   161                           	callstack 0
   162   00004B                     	ds	2
   163   00004D                     _userGuess:
   164                           	callstack 0
   165   00004D                     	ds	2
   166   00004F                     _flags:
   167                           	callstack 0
   168   00004F                     	ds	1
   169                           
   170                           	psect	bssBANK0
   171   000060                     __pbssBANK0:
   172                           	callstack 0
   173   000060                     _dbuf:
   174                           	callstack 0
   175   000060                     	ds	32
   176                           
   177                           	psect	cstackCOMRAM
   178   000001                     __pcstackCOMRAM:
   179                           	callstack 0
   180   000001                     ?_getKeypad:
   181                           	callstack 0
   182   000001                     ?___wmul:
   183                           	callstack 0
   184   000001                     ?___awdiv:
   185                           	callstack 0
   186   000001                     ?___awmod:
   187                           	callstack 0
   188   000001                     MSdelay@val:
   189                           	callstack 0
   190   000001                     ___wmul@multiplier:
   191                           	callstack 0
   192   000001                     ___awdiv@dividend:
   193                           	callstack 0
   194   000001                     ___awmod@dividend:
   195                           	callstack 0
   196   000001                     fputc@c:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x0
   200   000001                     	ds	2
   201   000003                     fputc@fp:
   202                           	callstack 0
   203   000003                     MSdelay@i:
   204                           	callstack 0
   205   000003                     getKeypad@buttonNumber:
   206                           	callstack 0
   207   000003                     ___wmul@multiplicand:
   208                           	callstack 0
   209   000003                     ___awdiv@divisor:
   210                           	callstack 0
   211   000003                     ___awmod@divisor:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x2
   215   000003                     	ds	1
   216   000004                     ??_fputc:
   217                           
   218                           ; 1 bytes @ 0x3
   219   000004                     	ds	1
   220   000005                     ___awdiv@counter:
   221                           	callstack 0
   222   000005                     ___awmod@counter:
   223                           	callstack 0
   224   000005                     MSdelay@j:
   225                           	callstack 0
   226   000005                     ___wmul@product:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x4
   230   000005                     	ds	1
   231   000006                     ___awdiv@sign:
   232                           	callstack 0
   233   000006                     ___awmod@sign:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x5
   237   000006                     	ds	1
   238   000007                     ?_abs:
   239                           	callstack 0
   240   000007                     LCD_Command@cmd:
   241                           	callstack 0
   242   000007                     LCD_Char@dat:
   243                           	callstack 0
   244   000007                     ___awdiv@quotient:
   245                           	callstack 0
   246   000007                     abs@a:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x6
   250   000007                     	ds	1
   251   000008                     LCD_String@msg:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x7
   255   000008                     	ds	1
   256   000009                     ??_abs:
   257                           
   258                           ; 1 bytes @ 0x8
   259   000009                     	ds	1
   260   00000A                     LCD_String_xy@pos:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x9
   264   00000A                     	ds	1
   265   00000B                     vfpfcnvrt@fp:
   266                           	callstack 0
   267   00000B                     LCD_String_xy@msg:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0xA
   271   00000B                     	ds	1
   272   00000C                     vfpfcnvrt@fmt:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0xB
   276   00000C                     	ds	1
   277   00000D                     LCD_String_xy@row:
   278                           	callstack 0
   279   00000D                     vfpfcnvrt@ap:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0xC
   283   00000D                     	ds	1
   284   00000E                     ??_vfpfcnvrt:
   285   00000E                     LCD_String_xy@location:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0xD
   289   00000E                     	ds	1
   290   00000F                     vfpfcnvrt@done:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0xE
   294   00000F                     	ds	1
   295   000010                     vfpfcnvrt@cp:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0xF
   299   000010                     	ds	1
   300   000011                     vfpfcnvrt@convarg:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x10
   304   000011                     	ds	4
   305   000015                     vfpfcnvrt@c:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x14
   309   000015                     	ds	1
   310   000016                     ?_vfprintf:
   311                           	callstack 0
   312   000016                     vfprintf@fp:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x15
   316   000016                     	ds	1
   317   000017                     vfprintf@fmt:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x16
   321   000017                     	ds	1
   322   000018                     vfprintf@ap:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x17
   326   000018                     	ds	1
   327   000019                     vfprintf@cfmt:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x18
   331   000019                     	ds	1
   332   00001A                     ?_sprintf:
   333                           	callstack 0
   334   00001A                     sprintf@s:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x19
   338   00001A                     	ds	1
   339   00001B                     sprintf@fmt:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x1A
   343   00001B                     	ds	3
   344   00001E                     sprintf@ap:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x1D
   348   00001E                     	ds	1
   349   00001F                     sprintf@f:
   350                           	callstack 0
   351                           
   352                           ; 12 bytes @ 0x1E
   353   00001F                     	ds	12
   354   00002B                     ?_getValue:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x2A
   358   00002B                     	ds	2
   359   00002D                     ??_getValue:
   360                           
   361                           ; 1 bytes @ 0x2C
   362   00002D                     	ds	6
   363   000033                     getValue@data:
   364                           	callstack 0
   365                           
   366                           ; 10 bytes @ 0x32
   367   000033                     	ds	10
   368   00003D                     getValue@decimalValue:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x3C
   372   00003D                     	ds	2
   373   00003F                     getValue@value1:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x3E
   377   00003F                     	ds	2
   378   000041                     getValue@value2:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x40
   382   000041                     	ds	2
   383   000043                     getValue@value3:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x42
   387   000043                     	ds	2
   388   000045                     getValue@value4:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x44
   392   000045                     	ds	2
   393   000047                     
   394                           ; 1 bytes @ 0x46
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 13 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   418 ;;Total ram usage:        0 bytes
   419 ;; Hardware stack levels required when called: 6
   420 ;; This function calls:
   421 ;;		_LCD_Init
   422 ;;		_LCD_String_xy
   423 ;;		_getValue
   424 ;;		_initializeKeypad
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text0
   431   00297E                     __ptext0:
   432                           	callstack 0
   433   00297E                     _main:
   434                           	callstack 25
   435   00297E                     
   436                           ;main.c: 14:     initializeKeypad();
   437   00297E  EC43  F015         	call	_initializeKeypad	;wreg free
   438   002982                     
   439                           ;main.c: 15:     LCD_Init();
   440   002982  ECD8  F014         	call	_LCD_Init	;wreg free
   441   002986                     
   442                           ;main.c: 18:     LCD_String_xy(1,0,"Testing Keypad: ");
   443   002986  0E00               	movlw	0
   444   002988  6E0A               	movwf	LCD_String_xy@pos^0,c
   445   00298A  0E01               	movlw	low STR_6
   446   00298C  6E0B               	movwf	LCD_String_xy@msg^0,c
   447   00298E  500B               	movf	LCD_String_xy@msg^0,w,c
   448   002990  A4D8               	btfss	status,2,c
   449   002992  0E20               	movlw	high __smallconst
   450   002994  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   451   002996  0E01               	movlw	1
   452   002998  EC6B  F014         	call	_LCD_String_xy
   453   00299C                     
   454                           ;main.c: 19:     userGuess = getValue();
   455   00299C  EC0E  F010         	call	_getValue	;wreg free
   456   0029A0  C02B  F04D         	movff	?_getValue,_userGuess
   457   0029A4  C02C  F04E         	movff	?_getValue+1,_userGuess+1
   458   0029A8                     l153:
   459   0029A8  EFD4  F014         	goto	l153
   460   0029AC  EFFE  F0FF         	goto	start
   461   0029B0                     __end_of_main:
   462                           	callstack 0
   463                           
   464 ;; *************** function _initializeKeypad *****************
   465 ;; Defined at:
   466 ;;		line 18 in file "./keypad.h"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; Hardware stack levels required when called: 1
   487 ;; This function calls:
   488 ;;		_initializePORTA
   489 ;;		_initializePORTC
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text1
   496   002A86                     __ptext1:
   497                           	callstack 0
   498   002A86                     _initializeKeypad:
   499                           	callstack 29
   500   002A86                     
   501                           ;./keypad.h: 19:     initializePORTA();
   502   002A86  EC33  F015         	call	_initializePORTA	;wreg free
   503   002A8A                     
   504                           ;./keypad.h: 20:     initializePORTC();
   505   002A8A  EC3D  F015         	call	_initializePORTC	;wreg free
   506   002A8E  0012               	return		;funcret
   507   002A90                     __end_of_initializeKeypad:
   508                           	callstack 0
   509                           
   510 ;; *************** function _initializePORTC *****************
   511 ;; Defined at:
   512 ;;		line 28 in file "./keypad.h"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		None
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_initializeKeypad
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text2
   540   002A7A                     __ptext2:
   541                           	callstack 0
   542   002A7A                     _initializePORTC:
   543                           	callstack 29
   544   002A7A                     
   545                           ;./keypad.h: 30:     PORTCbits.RC4 = 0;
   546   002A7A  98CC               	bcf	204,4,c	;volatile
   547                           
   548                           ;./keypad.h: 31:     LATCbits.LATC4 = 0;
   549   002A7C  98BC               	bcf	188,4,c	;volatile
   550                           
   551                           ;./keypad.h: 32:     ANSELCbits.ANSELC4 = 0;
   552   002A7E  013A               	movlb	58	; () banked
   553   002A80  9960               	bcf	96,4,b	;volatile
   554                           
   555                           ;./keypad.h: 33:     TRISCbits.TRISC4 = 1;
   556   002A82  88C4               	bsf	196,4,c	;volatile
   557   002A84                     
   558                           ; BSR set to: 58
   559   002A84  0012               	return		;funcret
   560   002A86                     __end_of_initializePORTC:
   561                           	callstack 0
   562                           
   563 ;; *************** function _initializePORTA *****************
   564 ;; Defined at:
   565 ;;		line 22 in file "./keypad.h"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used: 1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_initializeKeypad
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text3
   593   002A66                     __ptext3:
   594                           	callstack 0
   595   002A66                     _initializePORTA:
   596                           	callstack 29
   597   002A66                     
   598                           ;./keypad.h: 23:     PORTA = 0;
   599   002A66  0E00               	movlw	0
   600   002A68  6ECA               	movwf	202,c	;volatile
   601                           
   602                           ;./keypad.h: 24:     LATA = 0;
   603   002A6A  0E00               	movlw	0
   604   002A6C  6EBA               	movwf	186,c	;volatile
   605                           
   606                           ;./keypad.h: 25:     ANSELA = 0;
   607   002A6E  0E00               	movlw	0
   608   002A70  013A               	movlb	58	; () banked
   609   002A72  6F40               	movwf	64,b	;volatile
   610                           
   611                           ;./keypad.h: 26:     TRISA = 0b11111000;
   612   002A74  0EF8               	movlw	248
   613   002A76  6EC2               	movwf	194,c	;volatile
   614   002A78                     
   615                           ; BSR set to: 58
   616   002A78  0012               	return		;funcret
   617   002A7A                     __end_of_initializePORTA:
   618                           	callstack 0
   619                           
   620 ;; *************** function _getValue *****************
   621 ;; Defined at:
   622 ;;		line 141 in file "./keypad.h"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  data           10   50[COMRAM] unsigned char [10]
   627 ;;  value4          2   68[COMRAM] int 
   628 ;;  value3          2   66[COMRAM] int 
   629 ;;  value2          2   64[COMRAM] int 
   630 ;;  value1          2   62[COMRAM] int 
   631 ;;  decimalValue    2   60[COMRAM] int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  2   42[COMRAM] int 
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   642 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   643 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   644 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   645 ;;Total ram usage:       28 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 5
   648 ;; This function calls:
   649 ;;		_LCD_String_xy
   650 ;;		___wmul
   651 ;;		_getKeypad
   652 ;;		_sprintf
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text4
   659   00201C                     __ptext4:
   660                           	callstack 0
   661   00201C                     _getValue:
   662                           	callstack 25
   663   00201C                     
   664                           ;./keypad.h: 142:     int value1 = -1;
   665   00201C  683F               	setf	getValue@value1^0,c
   666   00201E  6840               	setf	(getValue@value1+1)^0,c
   667                           
   668                           ;./keypad.h: 143:     int value2 = -1;
   669   002020  6841               	setf	getValue@value2^0,c
   670   002022  6842               	setf	(getValue@value2+1)^0,c
   671                           
   672                           ;./keypad.h: 144:     int value3 = -1;
   673   002024  6843               	setf	getValue@value3^0,c
   674   002026  6844               	setf	(getValue@value3+1)^0,c
   675                           
   676                           ;./keypad.h: 145:     int value4 = -1;
   677   002028  6845               	setf	getValue@value4^0,c
   678   00202A  6846               	setf	(getValue@value4+1)^0,c
   679   00202C                     
   680                           ;./keypad.h: 147:     char data[10];;./keypad.h: 149:     LCD_String_xy(2,0,"____");
   681   00202C  0E00               	movlw	0
   682   00202E  6E0A               	movwf	LCD_String_xy@pos^0,c
   683   002030  0E12               	movlw	low STR_1
   684   002032  6E0B               	movwf	LCD_String_xy@msg^0,c
   685   002034  500B               	movf	LCD_String_xy@msg^0,w,c
   686   002036  A4D8               	btfss	status,2,c
   687   002038  0E20               	movlw	high __smallconst
   688   00203A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   689   00203C  0E02               	movlw	2
   690   00203E  EC6B  F014         	call	_LCD_String_xy
   691                           
   692                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
   693   002042  EF29  F010         	goto	l1551
   694   002046                     l1549:
   695                           
   696                           ;./keypad.h: 152:             value1 = getKeypad();
   697   002046  EC16  F011         	call	_getKeypad	;wreg free
   698   00204A  C001  F03F         	movff	?_getKeypad,getValue@value1
   699   00204E  C002  F040         	movff	?_getKeypad+1,getValue@value1+1
   700   002052                     l1551:
   701                           
   702                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
   703   002052  BE40               	btfsc	(getValue@value1+1)^0,7,c
   704   002054  EF2E  F010         	goto	u1251
   705   002058  EF30  F010         	goto	u1250
   706   00205C                     u1251:
   707   00205C  EF23  F010         	goto	l1549
   708   002060                     u1250:
   709   002060  BE40               	btfsc	(getValue@value1+1)^0,7,c
   710   002062  EF3E  F010         	goto	u1260
   711   002066  5040               	movf	(getValue@value1+1)^0,w,c
   712   002068  E107               	bnz	u1261
   713   00206A  0E0A               	movlw	10
   714   00206C  5C3F               	subwf	getValue@value1^0,w,c
   715   00206E  B0D8               	btfsc	status,0,c
   716   002070  EF3C  F010         	goto	u1261
   717   002074  EF3E  F010         	goto	u1260
   718   002078                     u1261:
   719   002078  EF23  F010         	goto	l1549
   720   00207C                     u1260:
   721   00207C                     
   722                           ;./keypad.h: 154:     sprintf(data,"%d",value1);
   723   00207C  0E33               	movlw	low getValue@data
   724   00207E  6E1A               	movwf	sprintf@s^0,c
   725   002080  0E17               	movlw	low STR_2
   726   002082  6E1B               	movwf	sprintf@fmt^0,c
   727   002084  C03F  F01C         	movff	getValue@value1,?_sprintf+2
   728   002088  C040  F01D         	movff	getValue@value1+1,?_sprintf+3
   729   00208C  EC8B  F014         	call	_sprintf	;wreg free
   730   002090                     
   731                           ;./keypad.h: 155:     LCD_String_xy(2,0,data);
   732   002090  0E00               	movlw	0
   733   002092  6E0A               	movwf	LCD_String_xy@pos^0,c
   734   002094  0E33               	movlw	low getValue@data
   735   002096  6E0B               	movwf	LCD_String_xy@msg^0,c
   736   002098  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
   737   00209A  0E02               	movlw	2
   738   00209C  EC6B  F014         	call	_LCD_String_xy
   739                           
   740                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
   741   0020A0  EF58  F010         	goto	l1561
   742   0020A4                     l1559:
   743                           
   744                           ;./keypad.h: 158:         value2 = getKeypad();
   745   0020A4  EC16  F011         	call	_getKeypad	;wreg free
   746   0020A8  C001  F041         	movff	?_getKeypad,getValue@value2
   747   0020AC  C002  F042         	movff	?_getKeypad+1,getValue@value2+1
   748   0020B0                     l1561:
   749                           
   750                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
   751   0020B0  BE42               	btfsc	(getValue@value2+1)^0,7,c
   752   0020B2  EF5D  F010         	goto	u1271
   753   0020B6  EF5F  F010         	goto	u1270
   754   0020BA                     u1271:
   755   0020BA  EF52  F010         	goto	l1559
   756   0020BE                     u1270:
   757   0020BE  BE42               	btfsc	(getValue@value2+1)^0,7,c
   758   0020C0  EF6D  F010         	goto	u1280
   759   0020C4  5042               	movf	(getValue@value2+1)^0,w,c
   760   0020C6  E107               	bnz	u1281
   761   0020C8  0E0A               	movlw	10
   762   0020CA  5C41               	subwf	getValue@value2^0,w,c
   763   0020CC  B0D8               	btfsc	status,0,c
   764   0020CE  EF6B  F010         	goto	u1281
   765   0020D2  EF6D  F010         	goto	u1280
   766   0020D6                     u1281:
   767   0020D6  EF52  F010         	goto	l1559
   768   0020DA                     u1280:
   769   0020DA                     
   770                           ;./keypad.h: 160:     sprintf(data,"%d",value2);
   771   0020DA  0E33               	movlw	low getValue@data
   772   0020DC  6E1A               	movwf	sprintf@s^0,c
   773   0020DE  0E17               	movlw	low STR_2
   774   0020E0  6E1B               	movwf	sprintf@fmt^0,c
   775   0020E2  C041  F01C         	movff	getValue@value2,?_sprintf+2
   776   0020E6  C042  F01D         	movff	getValue@value2+1,?_sprintf+3
   777   0020EA  EC8B  F014         	call	_sprintf	;wreg free
   778   0020EE                     
   779                           ;./keypad.h: 161:     LCD_String_xy(2,1,data);
   780   0020EE  0E01               	movlw	1
   781   0020F0  6E0A               	movwf	LCD_String_xy@pos^0,c
   782   0020F2  0E33               	movlw	low getValue@data
   783   0020F4  6E0B               	movwf	LCD_String_xy@msg^0,c
   784   0020F6  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
   785   0020F8  0E02               	movlw	2
   786   0020FA  EC6B  F014         	call	_LCD_String_xy
   787                           
   788                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
   789   0020FE  EF87  F010         	goto	l1571
   790   002102                     l1569:
   791                           
   792                           ;./keypad.h: 164:         value3 = getKeypad();
   793   002102  EC16  F011         	call	_getKeypad	;wreg free
   794   002106  C001  F043         	movff	?_getKeypad,getValue@value3
   795   00210A  C002  F044         	movff	?_getKeypad+1,getValue@value3+1
   796   00210E                     l1571:
   797                           
   798                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
   799   00210E  BE44               	btfsc	(getValue@value3+1)^0,7,c
   800   002110  EF8C  F010         	goto	u1291
   801   002114  EF8E  F010         	goto	u1290
   802   002118                     u1291:
   803   002118  EF81  F010         	goto	l1569
   804   00211C                     u1290:
   805   00211C  BE44               	btfsc	(getValue@value3+1)^0,7,c
   806   00211E  EF9C  F010         	goto	u1300
   807   002122  5044               	movf	(getValue@value3+1)^0,w,c
   808   002124  E107               	bnz	u1301
   809   002126  0E0A               	movlw	10
   810   002128  5C43               	subwf	getValue@value3^0,w,c
   811   00212A  B0D8               	btfsc	status,0,c
   812   00212C  EF9A  F010         	goto	u1301
   813   002130  EF9C  F010         	goto	u1300
   814   002134                     u1301:
   815   002134  EF81  F010         	goto	l1569
   816   002138                     u1300:
   817   002138                     
   818                           ;./keypad.h: 166:     sprintf(data,"%d",value3);
   819   002138  0E33               	movlw	low getValue@data
   820   00213A  6E1A               	movwf	sprintf@s^0,c
   821   00213C  0E17               	movlw	low STR_2
   822   00213E  6E1B               	movwf	sprintf@fmt^0,c
   823   002140  C043  F01C         	movff	getValue@value3,?_sprintf+2
   824   002144  C044  F01D         	movff	getValue@value3+1,?_sprintf+3
   825   002148  EC8B  F014         	call	_sprintf	;wreg free
   826   00214C                     
   827                           ;./keypad.h: 167:     LCD_String_xy(2,2,data);
   828   00214C  0E02               	movlw	2
   829   00214E  6E0A               	movwf	LCD_String_xy@pos^0,c
   830   002150  0E33               	movlw	low getValue@data
   831   002152  6E0B               	movwf	LCD_String_xy@msg^0,c
   832   002154  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
   833   002156  0E02               	movlw	2
   834   002158  EC6B  F014         	call	_LCD_String_xy
   835                           
   836                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
   837   00215C  EFB6  F010         	goto	l1581
   838   002160                     l1579:
   839                           
   840                           ;./keypad.h: 170:         value4 = getKeypad();
   841   002160  EC16  F011         	call	_getKeypad	;wreg free
   842   002164  C001  F045         	movff	?_getKeypad,getValue@value4
   843   002168  C002  F046         	movff	?_getKeypad+1,getValue@value4+1
   844   00216C                     l1581:
   845                           
   846                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
   847   00216C  BE46               	btfsc	(getValue@value4+1)^0,7,c
   848   00216E  EFBB  F010         	goto	u1311
   849   002172  EFBD  F010         	goto	u1310
   850   002176                     u1311:
   851   002176  EFB0  F010         	goto	l1579
   852   00217A                     u1310:
   853   00217A  BE46               	btfsc	(getValue@value4+1)^0,7,c
   854   00217C  EFCB  F010         	goto	u1320
   855   002180  5046               	movf	(getValue@value4+1)^0,w,c
   856   002182  E107               	bnz	u1321
   857   002184  0E0A               	movlw	10
   858   002186  5C45               	subwf	getValue@value4^0,w,c
   859   002188  B0D8               	btfsc	status,0,c
   860   00218A  EFC9  F010         	goto	u1321
   861   00218E  EFCB  F010         	goto	u1320
   862   002192                     u1321:
   863   002192  EFB0  F010         	goto	l1579
   864   002196                     u1320:
   865   002196                     
   866                           ;./keypad.h: 172:     sprintf(data,"%d",value4);
   867   002196  0E33               	movlw	low getValue@data
   868   002198  6E1A               	movwf	sprintf@s^0,c
   869   00219A  0E17               	movlw	low STR_2
   870   00219C  6E1B               	movwf	sprintf@fmt^0,c
   871   00219E  C045  F01C         	movff	getValue@value4,?_sprintf+2
   872   0021A2  C046  F01D         	movff	getValue@value4+1,?_sprintf+3
   873   0021A6  EC8B  F014         	call	_sprintf	;wreg free
   874   0021AA                     
   875                           ;./keypad.h: 173:     LCD_String_xy(2,3,data);
   876   0021AA  0E03               	movlw	3
   877   0021AC  6E0A               	movwf	LCD_String_xy@pos^0,c
   878   0021AE  0E33               	movlw	low getValue@data
   879   0021B0  6E0B               	movwf	LCD_String_xy@msg^0,c
   880   0021B2  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
   881   0021B4  0E02               	movlw	2
   882   0021B6  EC6B  F014         	call	_LCD_String_xy
   883   0021BA                     
   884                           ;./keypad.h: 175:     decimalValue = (value1 * 1000)+(value2 * 100)+(value3 * 10) + (val
      +                          ue4);
   885   0021BA  C03F  F001         	movff	getValue@value1,___wmul@multiplier
   886   0021BE  C040  F002         	movff	getValue@value1+1,___wmul@multiplier+1
   887   0021C2  0E03               	movlw	3
   888   0021C4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   889   0021C6  0EE8               	movlw	232
   890   0021C8  6E03               	movwf	___wmul@multiplicand^0,c
   891   0021CA  ECEF  F014         	call	___wmul	;wreg free
   892   0021CE  C001  F02D         	movff	?___wmul,??_getValue
   893   0021D2  C002  F02E         	movff	?___wmul+1,??_getValue+1
   894   0021D6  C041  F001         	movff	getValue@value2,___wmul@multiplier
   895   0021DA  C042  F002         	movff	getValue@value2+1,___wmul@multiplier+1
   896   0021DE  0E00               	movlw	0
   897   0021E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   898   0021E2  0E64               	movlw	100
   899   0021E4  6E03               	movwf	___wmul@multiplicand^0,c
   900   0021E6  ECEF  F014         	call	___wmul	;wreg free
   901   0021EA  5001               	movf	?___wmul^0,w,c
   902   0021EC  242D               	addwf	??_getValue^0,w,c
   903   0021EE  6E2F               	movwf	(??_getValue+2)^0,c
   904   0021F0  5002               	movf	(?___wmul+1)^0,w,c
   905   0021F2  202E               	addwfc	(??_getValue+1)^0,w,c
   906   0021F4  6E30               	movwf	(??_getValue+3)^0,c
   907   0021F6  C043  F001         	movff	getValue@value3,___wmul@multiplier
   908   0021FA  C044  F002         	movff	getValue@value3+1,___wmul@multiplier+1
   909   0021FE  0E00               	movlw	0
   910   002200  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   911   002202  0E0A               	movlw	10
   912   002204  6E03               	movwf	___wmul@multiplicand^0,c
   913   002206  ECEF  F014         	call	___wmul	;wreg free
   914   00220A  5001               	movf	?___wmul^0,w,c
   915   00220C  242F               	addwf	(??_getValue+2)^0,w,c
   916   00220E  6E31               	movwf	(??_getValue+4)^0,c
   917   002210  5002               	movf	(?___wmul+1)^0,w,c
   918   002212  2030               	addwfc	(??_getValue+3)^0,w,c
   919   002214  6E32               	movwf	(??_getValue+5)^0,c
   920   002216  5045               	movf	getValue@value4^0,w,c
   921   002218  2431               	addwf	(??_getValue+4)^0,w,c
   922   00221A  6E3D               	movwf	getValue@decimalValue^0,c
   923   00221C  5046               	movf	(getValue@value4+1)^0,w,c
   924   00221E  2032               	addwfc	(??_getValue+5)^0,w,c
   925   002220  6E3E               	movwf	(getValue@decimalValue+1)^0,c
   926   002222                     
   927                           ;./keypad.h: 176:     return decimalValue;
   928   002222  C03D  F02B         	movff	getValue@decimalValue,?_getValue
   929   002226  C03E  F02C         	movff	getValue@decimalValue+1,?_getValue+1
   930   00222A  0012               	return		;funcret
   931   00222C                     __end_of_getValue:
   932                           	callstack 0
   933                           
   934 ;; *************** function _sprintf *****************
   935 ;; Defined at:
   936 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  s               1   25[COMRAM] PTR unsigned char 
   939 ;;		 -> getValue@data(10), 
   940 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
   941 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  f              12   30[COMRAM] struct _IO_FILE
   944 ;;  ret             2    0        int 
   945 ;;  ap              1   29[COMRAM] PTR void [1]
   946 ;;		 -> ?_sprintf(2), 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  2   25[COMRAM] int 
   949 ;; Registers used:
   950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   957 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   959 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   960 ;;Total ram usage:       17 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 4
   963 ;; This function calls:
   964 ;;		_vfprintf
   965 ;; This function is called by:
   966 ;;		_getValue
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           	psect	text5
   971   002916                     __ptext5:
   972                           	callstack 0
   973   002916                     _sprintf:
   974                           	callstack 25
   975   002916  0E1C               	movlw	low (?_sprintf+2)
   976   002918  6E1E               	movwf	sprintf@ap^0,c
   977   00291A  C01A  F01F         	movff	sprintf@s,sprintf@f
   978   00291E  0E00               	movlw	0
   979   002920  6E23               	movwf	(sprintf@f+4)^0,c
   980   002922  0E00               	movlw	0
   981   002924  6E22               	movwf	(sprintf@f+3)^0,c
   982   002926  0E00               	movlw	0
   983   002928  6E2A               	movwf	(sprintf@f+11)^0,c
   984   00292A  0E00               	movlw	0
   985   00292C  6E29               	movwf	(sprintf@f+10)^0,c
   986   00292E  0E1F               	movlw	low sprintf@f
   987   002930  6E16               	movwf	vfprintf@fp^0,c
   988   002932  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
   989   002936  0E1E               	movlw	low sprintf@ap
   990   002938  6E18               	movwf	vfprintf@ap^0,c
   991   00293A  EC4B  F014         	call	_vfprintf	;wreg free
   992   00293E  501A               	movf	sprintf@s^0,w,c
   993   002940  2422               	addwf	(sprintf@f+3)^0,w,c
   994   002942  6ED9               	movwf	fsr2l,c
   995   002944  6ADA               	clrf	fsr2h,c
   996   002946  6ADF               	clrf	indf2,c
   997   002948  0012               	return		;funcret
   998   00294A                     __end_of_sprintf:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _vfprintf *****************
  1002 ;; Defined at:
  1003 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1006 ;;		 -> sprintf@f(12), 
  1007 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  1008 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1009 ;;  ap              1   23[COMRAM] PTR PTR void 
  1010 ;;		 -> sprintf@ap(1), 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  1013 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2   21[COMRAM] int 
  1016 ;; Registers used:
  1017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1023 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1026 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1027 ;;Total ram usage:        4 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; Hardware stack levels required when called: 3
  1030 ;; This function calls:
  1031 ;;		_vfpfcnvrt
  1032 ;; This function is called by:
  1033 ;;		_sprintf
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text6
  1038   002896                     __ptext6:
  1039                           	callstack 0
  1040   002896                     _vfprintf:
  1041                           	callstack 25
  1042   002896                     
  1043                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1044   002896  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  1045                           
  1046                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1047   00289A  EF57  F014         	goto	l1463
  1048   00289E                     l1461:
  1049                           
  1050                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1051   00289E  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1052   0028A2  0E19               	movlw	low vfprintf@cfmt
  1053   0028A4  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1054   0028A6  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1055   0028AA  ECFB  F011         	call	_vfpfcnvrt	;wreg free
  1056   0028AE                     l1463:
  1057                           
  1058                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1059   0028AE  0060  F067  FFF6   	movff	vfprintf@cfmt,tblptrl
  1060   0028B4                     	if	1	;There is more than 1 active tblptr byte
  1061   0028B4  0E20               	movlw	high __smallconst
  1062   0028B6  6EF7               	movwf	tblptrh,c
  1063   0028B8                     	endif
  1064   0028B8                     	if	0	;tblptru may be non-zero
  1065   0028B8                     	endif
  1066   0028B8                     	if	0	;tblptru may be non-zero
  1067   0028B8                     	endif
  1068   0028B8  0008               	tblrd		*
  1069   0028BA  50F5               	movf	tablat,w,c
  1070   0028BC  0900               	iorlw	0
  1071   0028BE  A4D8               	btfss	status,2,c
  1072   0028C0  EF64  F014         	goto	u991
  1073   0028C4  EF66  F014         	goto	u990
  1074   0028C8                     u991:
  1075   0028C8  EF4F  F014         	goto	l1461
  1076   0028CC                     u990:
  1077   0028CC                     
  1078                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1079   0028CC  0E00               	movlw	0
  1080   0028CE  6E17               	movwf	(?_vfprintf+1)^0,c
  1081   0028D0  0E00               	movlw	0
  1082   0028D2  6E16               	movwf	?_vfprintf^0,c
  1083   0028D4  0012               	return		;funcret
  1084   0028D6                     __end_of_vfprintf:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _vfpfcnvrt *****************
  1088 ;; Defined at:
  1089 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1092 ;;		 -> sprintf@f(12), 
  1093 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1094 ;;		 -> vfprintf@cfmt(1), 
  1095 ;;  ap              1   12[COMRAM] PTR PTR void 
  1096 ;;		 -> sprintf@ap(1), 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  convarg         4   16[COMRAM] struct .
  1099 ;;  c               1   20[COMRAM] unsigned char 
  1100 ;;  cp              1   15[COMRAM] PTR unsigned char 
  1101 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1102 ;;  done            1   14[COMRAM] _Bool 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1112 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1113 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1115 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1116 ;;Total ram usage:       11 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 2
  1119 ;; This function calls:
  1120 ;;		___awdiv
  1121 ;;		___awmod
  1122 ;;		_abs
  1123 ;;		_fputc
  1124 ;; This function is called by:
  1125 ;;		_vfprintf
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text7
  1130   0023F6                     __ptext7:
  1131                           	callstack 0
  1132   0023F6                     _vfpfcnvrt:
  1133                           	callstack 25
  1134   0023F6                     
  1135                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1136   0023F6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1137   0023F8  6ED9               	movwf	fsr2l,c
  1138   0023FA  6ADA               	clrf	fsr2h,c
  1139   0023FC  006F FF7F FFF6     	movff	indf2,tblptrl
  1140   002402                     	if	1	;There is more than 1 active tblptr byte
  1141   002402  0E20               	movlw	high __smallconst
  1142   002404  6EF7               	movwf	tblptrh,c
  1143   002406                     	endif
  1144   002406                     	if	0	;tblptru may be non-zero
  1145   002406                     	endif
  1146   002406                     	if	0	;tblptru may be non-zero
  1147   002406                     	endif
  1148   002406  0008               	tblrd		*
  1149   002408  50F5               	movf	tablat,w,c
  1150   00240A  0A25               	xorlw	37
  1151   00240C  A4D8               	btfss	status,2,c
  1152   00240E  EF0B  F012         	goto	u861
  1153   002412  EF0D  F012         	goto	u860
  1154   002416                     u861:
  1155   002416  EFCA  F012         	goto	l1433
  1156   00241A                     u860:
  1157   00241A                     
  1158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1159   00241A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1160   00241C  6ED9               	movwf	fsr2l,c
  1161   00241E  6ADA               	clrf	fsr2h,c
  1162   002420  2ADF               	incf	indf2,f,c
  1163   002422                     
  1164                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1165   002422  0E00               	movlw	0
  1166   002424  6E48               	movwf	(_width+1)^0,c
  1167   002426  0E00               	movlw	0
  1168   002428  6E47               	movwf	_width^0,c
  1169   00242A  C047  F04F         	movff	_width,_flags
  1170   00242E                     
  1171                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1172   00242E  6849               	setf	_prec^0,c
  1173   002430  684A               	setf	(_prec+1)^0,c
  1174   002432                     
  1175                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1176   002432  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1177   002434  6ED9               	movwf	fsr2l,c
  1178   002436  6ADA               	clrf	fsr2h,c
  1179   002438  50DF               	movf	indf2,w,c
  1180   00243A  6E10               	movwf	vfpfcnvrt@cp^0,c
  1181   00243C                     
  1182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1183   00243C  0060  F043  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1184   002442                     	if	1	;There is more than 1 active tblptr byte
  1185   002442  0E20               	movlw	high __smallconst
  1186   002444  6EF7               	movwf	tblptrh,c
  1187   002446                     	endif
  1188   002446                     	if	0	;tblptru may be non-zero
  1189   002446                     	endif
  1190   002446                     	if	0	;tblptru may be non-zero
  1191   002446                     	endif
  1192   002446  0008               	tblrd		*
  1193   002448  50F5               	movf	tablat,w,c
  1194   00244A  0A64               	xorlw	100
  1195   00244C  B4D8               	btfsc	status,2,c
  1196   00244E  EF2B  F012         	goto	u871
  1197   002452  EF2D  F012         	goto	u870
  1198   002456                     u871:
  1199   002456  EF3C  F012         	goto	l1403
  1200   00245A                     u870:
  1201   00245A  0060  F043  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1202   002460                     	if	1	;There is more than 1 active tblptr byte
  1203   002460  0E20               	movlw	high __smallconst
  1204   002462  6EF7               	movwf	tblptrh,c
  1205   002464                     	endif
  1206   002464                     	if	0	;tblptru may be non-zero
  1207   002464                     	endif
  1208   002464                     	if	0	;tblptru may be non-zero
  1209   002464                     	endif
  1210   002464  0008               	tblrd		*
  1211   002466  50F5               	movf	tablat,w,c
  1212   002468  0A69               	xorlw	105
  1213   00246A  A4D8               	btfss	status,2,c
  1214   00246C  EF3A  F012         	goto	u881
  1215   002470  EF3C  F012         	goto	u880
  1216   002474                     u881:
  1217   002474  EFC4  F012         	goto	l1429
  1218   002478                     u880:
  1219   002478                     l1403:
  1220                           
  1221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1222   002478  500D               	movf	vfpfcnvrt@ap^0,w,c
  1223   00247A  6ED9               	movwf	fsr2l,c
  1224   00247C  6ADA               	clrf	fsr2h,c
  1225   00247E  0E02               	movlw	2
  1226   002480  26DF               	addwf	indf2,f,c
  1227   002482  5CDF               	subwf	indf2,w,c
  1228   002484  6ED9               	movwf	fsr2l,c
  1229   002486  6ADA               	clrf	fsr2h,c
  1230   002488  006F FF78  F011    	movff	postinc2,vfpfcnvrt@convarg
  1231   00248E  006F FF78  F012    	movff	postinc2,vfpfcnvrt@convarg+1
  1232   002494                     
  1233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1234   002494  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1235   002496  6ED9               	movwf	fsr2l,c
  1236   002498  6ADA               	clrf	fsr2h,c
  1237   00249A  2810               	incf	vfpfcnvrt@cp^0,w,c
  1238   00249C  6EDF               	movwf	indf2,c
  1239   00249E                     
  1240                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1241   00249E  0E20               	movlw	32
  1242   0024A0  6E15               	movwf	vfpfcnvrt@c^0,c
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1245   0024A2  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1246   0024A4  EF56  F012         	goto	u891
  1247   0024A8  EF59  F012         	goto	u890
  1248   0024AC                     u891:
  1249   0024AC  0E01               	movlw	1
  1250   0024AE  EF5A  F012         	goto	u900
  1251   0024B2                     u890:
  1252   0024B2  0E00               	movlw	0
  1253   0024B4                     u900:
  1254   0024B4  6E0F               	movwf	vfpfcnvrt@done^0,c
  1255   0024B6                     l1409:
  1256                           
  1257                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1258   0024B6  0615               	decf	vfpfcnvrt@c^0,f,c
  1259   0024B8  5015               	movf	vfpfcnvrt@c^0,w,c
  1260   0024BA  0F60               	addlw	low _dbuf
  1261   0024BC  6ED9               	movwf	fsr2l,c
  1262   0024BE  6ADA               	clrf	fsr2h,c
  1263   0024C0  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1264   0024C4  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1265   0024C8  0E00               	movlw	0
  1266   0024CA  6E04               	movwf	(___awmod@divisor+1)^0,c
  1267   0024CC  0E0A               	movlw	10
  1268   0024CE  6E03               	movwf	___awmod@divisor^0,c
  1269   0024D0  EC3F  F013         	call	___awmod	;wreg free
  1270   0024D4  C001  F007         	movff	?___awmod,abs@a
  1271   0024D8  C002  F008         	movff	?___awmod+1,abs@a+1
  1272   0024DC  ECA5  F014         	call	_abs	;wreg free
  1273   0024E0  5007               	movf	?_abs^0,w,c
  1274   0024E2  0F30               	addlw	48
  1275   0024E4  6EDF               	movwf	indf2,c
  1276   0024E6                     
  1277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1278   0024E6  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1279   0024EA  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1280   0024EE  0E00               	movlw	0
  1281   0024F0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1282   0024F2  0E0A               	movlw	10
  1283   0024F4  6E03               	movwf	___awdiv@divisor^0,c
  1284   0024F6  ECDD  F012         	call	___awdiv	;wreg free
  1285   0024FA  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1286   0024FE  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1287   002502                     
  1288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1289   002502  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1290   002504  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1291   002506  B4D8               	btfsc	status,2,c
  1292   002508  EF88  F012         	goto	u911
  1293   00250C  EF8A  F012         	goto	u910
  1294   002510                     u911:
  1295   002510  EF92  F012         	goto	l1417
  1296   002514                     u910:
  1297   002514  5015               	movf	vfpfcnvrt@c^0,w,c
  1298   002516  A4D8               	btfss	status,2,c
  1299   002518  EF90  F012         	goto	u921
  1300   00251C  EF92  F012         	goto	u920
  1301   002520                     u921:
  1302   002520  EF5B  F012         	goto	l1409
  1303   002524                     u920:
  1304   002524                     l1417:
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1307   002524  5015               	movf	vfpfcnvrt@c^0,w,c
  1308   002526  B4D8               	btfsc	status,2,c
  1309   002528  EF98  F012         	goto	u931
  1310   00252C  EF9A  F012         	goto	u930
  1311   002530                     u931:
  1312   002530  EFB9  F012         	goto	l1427
  1313   002534                     u930:
  1314   002534  500F               	movf	vfpfcnvrt@done^0,w,c
  1315   002536  B4D8               	btfsc	status,2,c
  1316   002538  EFA0  F012         	goto	u941
  1317   00253C  EFA2  F012         	goto	u940
  1318   002540                     u941:
  1319   002540  EFB9  F012         	goto	l1427
  1320   002544                     u940:
  1321   002544                     
  1322                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1323   002544  0615               	decf	vfpfcnvrt@c^0,f,c
  1324   002546  5015               	movf	vfpfcnvrt@c^0,w,c
  1325   002548  0F60               	addlw	low _dbuf
  1326   00254A  6ED9               	movwf	fsr2l,c
  1327   00254C  6ADA               	clrf	fsr2h,c
  1328   00254E  0E2D               	movlw	45
  1329   002550  6EDF               	movwf	indf2,c
  1330   002552  EFB9  F012         	goto	l1427
  1331   002556                     l1423:
  1332                           
  1333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1334   002556  5015               	movf	vfpfcnvrt@c^0,w,c
  1335   002558  0F60               	addlw	low _dbuf
  1336   00255A  6ED9               	movwf	fsr2l,c
  1337   00255C  6ADA               	clrf	fsr2h,c
  1338   00255E  50DF               	movf	indf2,w,c
  1339   002560  6E0E               	movwf	??_vfpfcnvrt^0,c
  1340   002562  500E               	movf	??_vfpfcnvrt^0,w,c
  1341   002564  6E01               	movwf	fputc@c^0,c
  1342   002566  6A02               	clrf	(fputc@c+1)^0,c
  1343   002568  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1344   00256C  EC97  F013         	call	_fputc	;wreg free
  1345   002570  2A15               	incf	vfpfcnvrt@c^0,f,c
  1346   002572                     l1427:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1349   002572  0E20               	movlw	32
  1350   002574  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1351   002576  A4D8               	btfss	status,2,c
  1352   002578  EFC0  F012         	goto	u951
  1353   00257C  EFC2  F012         	goto	u950
  1354   002580                     u951:
  1355   002580  EFAB  F012         	goto	l1423
  1356   002584                     u950:
  1357   002584  EFDC  F012         	goto	l875
  1358   002588                     l1429:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1361   002588  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1362   00258A  6ED9               	movwf	fsr2l,c
  1363   00258C  6ADA               	clrf	fsr2h,c
  1364   00258E  2ADF               	incf	indf2,f,c
  1365   002590  EFDC  F012         	goto	l875
  1366   002594                     l1433:
  1367                           
  1368                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1369   002594  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1370   002596  6ED9               	movwf	fsr2l,c
  1371   002598  6ADA               	clrf	fsr2h,c
  1372   00259A  006F FF7F FFF6     	movff	indf2,tblptrl
  1373   0025A0                     	if	1	;There is more than 1 active tblptr byte
  1374   0025A0  0E20               	movlw	high __smallconst
  1375   0025A2  6EF7               	movwf	tblptrh,c
  1376   0025A4                     	endif
  1377   0025A4                     	if	0	;tblptru may be non-zero
  1378   0025A4                     	endif
  1379   0025A4                     	if	0	;tblptru may be non-zero
  1380   0025A4                     	endif
  1381   0025A4  0008               	tblrd		*
  1382   0025A6  50F5               	movf	tablat,w,c
  1383   0025A8  6E01               	movwf	fputc@c^0,c
  1384   0025AA  6A02               	clrf	(fputc@c+1)^0,c
  1385   0025AC  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1386   0025B0  EC97  F013         	call	_fputc	;wreg free
  1387   0025B4  EFC4  F012         	goto	l1429
  1388   0025B8                     l875:
  1389   0025B8  0012               	return		;funcret
  1390   0025BA                     __end_of_vfpfcnvrt:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _fputc *****************
  1394 ;; Defined at:
  1395 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  c               2    0[COMRAM] int 
  1398 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1399 ;;		 -> sprintf@f(12), 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  2    0[COMRAM] int 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1411 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1413 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1415 ;;Total ram usage:        8 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 1
  1418 ;; This function calls:
  1419 ;;		_putch
  1420 ;; This function is called by:
  1421 ;;		_vfpfcnvrt
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text8
  1426   00272E                     __ptext8:
  1427                           	callstack 0
  1428   00272E                     _fputc:
  1429                           	callstack 25
  1430   00272E  5003               	movf	fputc@fp^0,w,c
  1431   002730  B4D8               	btfsc	status,2,c
  1432   002732  EF9D  F013         	goto	u811
  1433   002736  EF9F  F013         	goto	u810
  1434   00273A                     u811:
  1435   00273A  EFA7  F013         	goto	l1363
  1436   00273E                     u810:
  1437   00273E  5003               	movf	fputc@fp^0,w,c
  1438   002740  A4D8               	btfss	status,2,c
  1439   002742  EFA5  F013         	goto	u821
  1440   002746  EFA7  F013         	goto	u820
  1441   00274A                     u821:
  1442   00274A  EFAC  F013         	goto	l1365
  1443   00274E                     u820:
  1444   00274E                     l1363:
  1445   00274E  5001               	movf	fputc@c^0,w,c
  1446   002750  EC48  F015         	call	_putch
  1447   002754  EFEC  F013         	goto	l900
  1448   002758                     l1365:
  1449   002758  5003               	movf	fputc@fp^0,w,c
  1450   00275A  6ED9               	movwf	fsr2l,c
  1451   00275C  6ADA               	clrf	fsr2h,c
  1452   00275E  0E0A               	movlw	10
  1453   002760  26D9               	addwf	fsr2l,f,c
  1454   002762  50DE               	movf	postinc2,w,c
  1455   002764  10DE               	iorwf	postinc2,w,c
  1456   002766  B4D8               	btfsc	status,2,c
  1457   002768  EFB8  F013         	goto	u831
  1458   00276C  EFBA  F013         	goto	u830
  1459   002770                     u831:
  1460   002770  EFD3  F013         	goto	l1369
  1461   002774                     u830:
  1462   002774  5003               	movf	fputc@fp^0,w,c
  1463   002776  6ED9               	movwf	fsr2l,c
  1464   002778  6ADA               	clrf	fsr2h,c
  1465   00277A  0E0A               	movlw	10
  1466   00277C  26D9               	addwf	fsr2l,f,c
  1467   00277E  5003               	movf	fputc@fp^0,w,c
  1468   002780  6EE1               	movwf	fsr1l,c
  1469   002782  6AE2               	clrf	fsr1h,c
  1470   002784  0E03               	movlw	3
  1471   002786  26E1               	addwf	fsr1l,f,c
  1472   002788  50DE               	movf	postinc2,w,c
  1473   00278A  5CE6               	subwf	postinc1,w,c
  1474   00278C  50E6               	movf	postinc1,w,c
  1475   00278E  0A80               	xorlw	128
  1476   002790  6E08               	movwf	(??_fputc+4)^0,c
  1477   002792  50DE               	movf	postinc2,w,c
  1478   002794  0A80               	xorlw	128
  1479   002796  5808               	subwfb	(??_fputc+4)^0,w,c
  1480   002798  B0D8               	btfsc	status,0,c
  1481   00279A  EFD1  F013         	goto	u841
  1482   00279E  EFD3  F013         	goto	u840
  1483   0027A2                     u841:
  1484   0027A2  EFEC  F013         	goto	l900
  1485   0027A6                     u840:
  1486   0027A6                     l1369:
  1487   0027A6  5003               	movf	fputc@fp^0,w,c
  1488   0027A8  6ED9               	movwf	fsr2l,c
  1489   0027AA  6ADA               	clrf	fsr2h,c
  1490   0027AC  0E03               	movlw	3
  1491   0027AE  26D9               	addwf	fsr2l,f,c
  1492   0027B0  50DF               	movf	indf2,w,c
  1493   0027B2  6E04               	movwf	??_fputc^0,c
  1494   0027B4  5003               	movf	fputc@fp^0,w,c
  1495   0027B6  6ED9               	movwf	fsr2l,c
  1496   0027B8  6ADA               	clrf	fsr2h,c
  1497   0027BA  50DF               	movf	indf2,w,c
  1498   0027BC  2404               	addwf	??_fputc^0,w,c
  1499   0027BE  6ED9               	movwf	fsr2l,c
  1500   0027C0  6ADA               	clrf	fsr2h,c
  1501   0027C2  0060  F007  FFDF   	movff	fputc@c,indf2
  1502   0027C8  5003               	movf	fputc@fp^0,w,c
  1503   0027CA  6ED9               	movwf	fsr2l,c
  1504   0027CC  6ADA               	clrf	fsr2h,c
  1505   0027CE  0E03               	movlw	3
  1506   0027D0  26D9               	addwf	fsr2l,f,c
  1507   0027D2  2ADE               	incf	postinc2,f,c
  1508   0027D4  0E00               	movlw	0
  1509   0027D6  22DD               	addwfc	postdec2,f,c
  1510   0027D8                     l900:
  1511   0027D8  0012               	return		;funcret
  1512   0027DA                     __end_of_fputc:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _putch *****************
  1516 ;; Defined at:
  1517 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  c               1    wreg     unsigned char 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  c               1    0[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1535 ;;Total ram usage:        0 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_fputc
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text9
  1545   002A90                     __ptext9:
  1546                           	callstack 0
  1547   002A90                     _putch:
  1548                           	callstack 25
  1549   002A90  0012               	return		;funcret
  1550   002A92                     __end_of_putch:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function _abs *****************
  1554 ;; Defined at:
  1555 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  a               2    6[COMRAM] int 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2    6[COMRAM] int 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1569 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1572 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1573 ;;Total ram usage:        4 bytes
  1574 ;; Hardware stack levels used: 1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_vfpfcnvrt
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text10
  1583   00294A                     __ptext10:
  1584                           	callstack 0
  1585   00294A                     _abs:
  1586                           	callstack 26
  1587   00294A  BE08               	btfsc	(abs@a+1)^0,7,c
  1588   00294C  EFAA  F014         	goto	u851
  1589   002950  EFAC  F014         	goto	u850
  1590   002954                     u851:
  1591   002954  EFB2  F014         	goto	l885
  1592   002958                     u850:
  1593   002958  C007  F007         	movff	abs@a,?_abs
  1594   00295C  C008  F008         	movff	abs@a+1,?_abs+1
  1595   002960  EFBE  F014         	goto	l888
  1596   002964                     l885:
  1597   002964  C007  F009         	movff	abs@a,??_abs
  1598   002968  C008  F00A         	movff	abs@a+1,??_abs+1
  1599   00296C  1E09               	comf	??_abs^0,f,c
  1600   00296E  1E0A               	comf	(??_abs+1)^0,f,c
  1601   002970  4A09               	infsnz	??_abs^0,f,c
  1602   002972  2A0A               	incf	(??_abs+1)^0,f,c
  1603   002974  C009  F007         	movff	??_abs,?_abs
  1604   002978  C00A  F008         	movff	??_abs+1,?_abs+1
  1605   00297C                     l888:
  1606   00297C  0012               	return		;funcret
  1607   00297E                     __end_of_abs:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function ___awmod *****************
  1611 ;; Defined at:
  1612 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  dividend        2    0[COMRAM] int 
  1615 ;;  divisor         2    2[COMRAM] int 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  sign            1    5[COMRAM] unsigned char 
  1618 ;;  counter         1    4[COMRAM] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2    0[COMRAM] int 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1629 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1631 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1632 ;;Total ram usage:        6 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_vfpfcnvrt
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text11
  1642   00267E                     __ptext11:
  1643                           	callstack 0
  1644   00267E                     ___awmod:
  1645                           	callstack 26
  1646   00267E  0E00               	movlw	0
  1647   002680  6E06               	movwf	___awmod@sign^0,c
  1648   002682  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1649   002684  EF48  F013         	goto	u750
  1650   002688  EF46  F013         	goto	u751
  1651   00268C                     u751:
  1652   00268C  EF4E  F013         	goto	l1331
  1653   002690                     u750:
  1654   002690  6C01               	negf	___awmod@dividend^0,c
  1655   002692  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1656   002694  B0D8               	btfsc	status,0,c
  1657   002696  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1658   002698  0E01               	movlw	1
  1659   00269A  6E06               	movwf	___awmod@sign^0,c
  1660   00269C                     l1331:
  1661   00269C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1662   00269E  EF55  F013         	goto	u760
  1663   0026A2  EF53  F013         	goto	u761
  1664   0026A6                     u761:
  1665   0026A6  EF59  F013         	goto	l1335
  1666   0026AA                     u760:
  1667   0026AA  6C03               	negf	___awmod@divisor^0,c
  1668   0026AC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1669   0026AE  B0D8               	btfsc	status,0,c
  1670   0026B0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1671   0026B2                     l1335:
  1672   0026B2  5003               	movf	___awmod@divisor^0,w,c
  1673   0026B4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1674   0026B6  B4D8               	btfsc	status,2,c
  1675   0026B8  EF60  F013         	goto	u771
  1676   0026BC  EF62  F013         	goto	u770
  1677   0026C0                     u771:
  1678   0026C0  EF86  F013         	goto	l1351
  1679   0026C4                     u770:
  1680   0026C4  0E01               	movlw	1
  1681   0026C6  6E05               	movwf	___awmod@counter^0,c
  1682   0026C8  EF6A  F013         	goto	l1341
  1683   0026CC                     l1339:
  1684   0026CC  90D8               	bcf	status,0,c
  1685   0026CE  3603               	rlcf	___awmod@divisor^0,f,c
  1686   0026D0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1687   0026D2  2A05               	incf	___awmod@counter^0,f,c
  1688   0026D4                     l1341:
  1689   0026D4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1690   0026D6  EF6F  F013         	goto	u781
  1691   0026DA  EF71  F013         	goto	u780
  1692   0026DE                     u781:
  1693   0026DE  EF66  F013         	goto	l1339
  1694   0026E2                     u780:
  1695   0026E2                     l1343:
  1696   0026E2  5003               	movf	___awmod@divisor^0,w,c
  1697   0026E4  5C01               	subwf	___awmod@dividend^0,w,c
  1698   0026E6  5004               	movf	(___awmod@divisor+1)^0,w,c
  1699   0026E8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1700   0026EA  A0D8               	btfss	status,0,c
  1701   0026EC  EF7A  F013         	goto	u791
  1702   0026F0  EF7C  F013         	goto	u790
  1703   0026F4                     u791:
  1704   0026F4  EF80  F013         	goto	l1347
  1705   0026F8                     u790:
  1706   0026F8  5003               	movf	___awmod@divisor^0,w,c
  1707   0026FA  5E01               	subwf	___awmod@dividend^0,f,c
  1708   0026FC  5004               	movf	(___awmod@divisor+1)^0,w,c
  1709   0026FE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1710   002700                     l1347:
  1711   002700  90D8               	bcf	status,0,c
  1712   002702  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1713   002704  3203               	rrcf	___awmod@divisor^0,f,c
  1714   002706  2E05               	decfsz	___awmod@counter^0,f,c
  1715   002708  EF71  F013         	goto	l1343
  1716   00270C                     l1351:
  1717   00270C  5006               	movf	___awmod@sign^0,w,c
  1718   00270E  B4D8               	btfsc	status,2,c
  1719   002710  EF8C  F013         	goto	u801
  1720   002714  EF8E  F013         	goto	u800
  1721   002718                     u801:
  1722   002718  EF92  F013         	goto	l1355
  1723   00271C                     u800:
  1724   00271C  6C01               	negf	___awmod@dividend^0,c
  1725   00271E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1726   002720  B0D8               	btfsc	status,0,c
  1727   002722  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1728   002724                     l1355:
  1729   002724  C001  F001         	movff	___awmod@dividend,?___awmod
  1730   002728  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1731   00272C  0012               	return		;funcret
  1732   00272E                     __end_of___awmod:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function ___awdiv *****************
  1736 ;; Defined at:
  1737 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  dividend        2    0[COMRAM] int 
  1740 ;;  divisor         2    2[COMRAM] int 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  quotient        2    6[COMRAM] int 
  1743 ;;  sign            1    5[COMRAM] unsigned char 
  1744 ;;  counter         1    4[COMRAM] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  2    0[COMRAM] int 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1755 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1757 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1758 ;;Total ram usage:        8 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_vfpfcnvrt
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           	psect	text12
  1768   0025BA                     __ptext12:
  1769                           	callstack 0
  1770   0025BA                     ___awdiv:
  1771                           	callstack 26
  1772   0025BA  0E00               	movlw	0
  1773   0025BC  6E06               	movwf	___awdiv@sign^0,c
  1774   0025BE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1775   0025C0  EFE6  F012         	goto	u690
  1776   0025C4  EFE4  F012         	goto	u691
  1777   0025C8                     u691:
  1778   0025C8  EFEC  F012         	goto	l1287
  1779   0025CC                     u690:
  1780   0025CC  6C03               	negf	___awdiv@divisor^0,c
  1781   0025CE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1782   0025D0  B0D8               	btfsc	status,0,c
  1783   0025D2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1784   0025D4  0E01               	movlw	1
  1785   0025D6  6E06               	movwf	___awdiv@sign^0,c
  1786   0025D8                     l1287:
  1787   0025D8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1788   0025DA  EFF3  F012         	goto	u700
  1789   0025DE  EFF1  F012         	goto	u701
  1790   0025E2                     u701:
  1791   0025E2  EFF9  F012         	goto	l1293
  1792   0025E6                     u700:
  1793   0025E6  6C01               	negf	___awdiv@dividend^0,c
  1794   0025E8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1795   0025EA  B0D8               	btfsc	status,0,c
  1796   0025EC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1797   0025EE  0E01               	movlw	1
  1798   0025F0  1A06               	xorwf	___awdiv@sign^0,f,c
  1799   0025F2                     l1293:
  1800   0025F2  0E00               	movlw	0
  1801   0025F4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1802   0025F6  0E00               	movlw	0
  1803   0025F8  6E07               	movwf	___awdiv@quotient^0,c
  1804   0025FA  5003               	movf	___awdiv@divisor^0,w,c
  1805   0025FC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1806   0025FE  B4D8               	btfsc	status,2,c
  1807   002600  EF04  F013         	goto	u711
  1808   002604  EF06  F013         	goto	u710
  1809   002608                     u711:
  1810   002608  EF2E  F013         	goto	l1315
  1811   00260C                     u710:
  1812   00260C  0E01               	movlw	1
  1813   00260E  6E05               	movwf	___awdiv@counter^0,c
  1814   002610  EF0E  F013         	goto	l1301
  1815   002614                     l1299:
  1816   002614  90D8               	bcf	status,0,c
  1817   002616  3603               	rlcf	___awdiv@divisor^0,f,c
  1818   002618  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1819   00261A  2A05               	incf	___awdiv@counter^0,f,c
  1820   00261C                     l1301:
  1821   00261C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1822   00261E  EF13  F013         	goto	u721
  1823   002622  EF15  F013         	goto	u720
  1824   002626                     u721:
  1825   002626  EF0A  F013         	goto	l1299
  1826   00262A                     u720:
  1827   00262A                     l1303:
  1828   00262A  90D8               	bcf	status,0,c
  1829   00262C  3607               	rlcf	___awdiv@quotient^0,f,c
  1830   00262E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1831   002630  5003               	movf	___awdiv@divisor^0,w,c
  1832   002632  5C01               	subwf	___awdiv@dividend^0,w,c
  1833   002634  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1834   002636  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1835   002638  A0D8               	btfss	status,0,c
  1836   00263A  EF21  F013         	goto	u731
  1837   00263E  EF23  F013         	goto	u730
  1838   002642                     u731:
  1839   002642  EF28  F013         	goto	l1311
  1840   002646                     u730:
  1841   002646  5003               	movf	___awdiv@divisor^0,w,c
  1842   002648  5E01               	subwf	___awdiv@dividend^0,f,c
  1843   00264A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1844   00264C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1845   00264E  8007               	bsf	___awdiv@quotient^0,0,c
  1846   002650                     l1311:
  1847   002650  90D8               	bcf	status,0,c
  1848   002652  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1849   002654  3203               	rrcf	___awdiv@divisor^0,f,c
  1850   002656  2E05               	decfsz	___awdiv@counter^0,f,c
  1851   002658  EF15  F013         	goto	l1303
  1852   00265C                     l1315:
  1853   00265C  5006               	movf	___awdiv@sign^0,w,c
  1854   00265E  B4D8               	btfsc	status,2,c
  1855   002660  EF34  F013         	goto	u741
  1856   002664  EF36  F013         	goto	u740
  1857   002668                     u741:
  1858   002668  EF3A  F013         	goto	l1319
  1859   00266C                     u740:
  1860   00266C  6C07               	negf	___awdiv@quotient^0,c
  1861   00266E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1862   002670  B0D8               	btfsc	status,0,c
  1863   002672  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1864   002674                     l1319:
  1865   002674  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1866   002678  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1867   00267C  0012               	return		;funcret
  1868   00267E                     __end_of___awdiv:
  1869                           	callstack 0
  1870                           
  1871 ;; *************** function _getKeypad *****************
  1872 ;; Defined at:
  1873 ;;		line 38 in file "./keypad.h"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  buttonNumber    2    2[COMRAM] int 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2    0[COMRAM] int 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1890 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1891 ;;Total ram usage:        4 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_getValue
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text13
  1901   00222C                     __ptext13:
  1902                           	callstack 0
  1903   00222C                     _getKeypad:
  1904                           	callstack 29
  1905   00222C                     
  1906                           ;./keypad.h: 39:     int buttonNumber = -1;
  1907   00222C  6803               	setf	getKeypad@buttonNumber^0,c
  1908   00222E  6804               	setf	(getKeypad@buttonNumber+1)^0,c
  1909                           
  1910                           ;./keypad.h: 42:     PORTAbits.RA0 = 1;
  1911   002230  80CA               	bsf	202,0,c	;volatile
  1912                           
  1913                           ;./keypad.h: 43:     if(PORTAbits.RA4 == 1){
  1914   002232  A8CA               	btfss	202,4,c	;volatile
  1915   002234  EF1E  F011         	goto	u1011
  1916   002238  EF20  F011         	goto	u1010
  1917   00223C                     u1011:
  1918   00223C  EF2B  F011         	goto	l81
  1919   002240                     u1010:
  1920   002240                     
  1921                           ;./keypad.h: 45:         buttonNumber = 1;
  1922   002240  0E00               	movlw	0
  1923   002242  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1924   002244  0E01               	movlw	1
  1925   002246  6E03               	movwf	getKeypad@buttonNumber^0,c
  1926   002248                     l82:
  1927   002248  B8CA               	btfsc	202,4,c	;volatile
  1928   00224A  EF29  F011         	goto	u1021
  1929   00224E  EF2B  F011         	goto	u1020
  1930   002252                     u1021:
  1931   002252  EF24  F011         	goto	l82
  1932   002256                     u1020:
  1933   002256                     l81:
  1934                           
  1935                           ;./keypad.h: 48:     if(PORTAbits.RA5 == 1){
  1936   002256  AACA               	btfss	202,5,c	;volatile
  1937   002258  EF30  F011         	goto	u1031
  1938   00225C  EF32  F011         	goto	u1030
  1939   002260                     u1031:
  1940   002260  EF3D  F011         	goto	l85
  1941   002264                     u1030:
  1942   002264                     
  1943                           ;./keypad.h: 50:         buttonNumber = 4;
  1944   002264  0E00               	movlw	0
  1945   002266  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1946   002268  0E04               	movlw	4
  1947   00226A  6E03               	movwf	getKeypad@buttonNumber^0,c
  1948   00226C                     l86:
  1949   00226C  BACA               	btfsc	202,5,c	;volatile
  1950   00226E  EF3B  F011         	goto	u1041
  1951   002272  EF3D  F011         	goto	u1040
  1952   002276                     u1041:
  1953   002276  EF36  F011         	goto	l86
  1954   00227A                     u1040:
  1955   00227A                     l85:
  1956                           
  1957                           ;./keypad.h: 53:     if(PORTAbits.RA3 == 1){
  1958   00227A  A6CA               	btfss	202,3,c	;volatile
  1959   00227C  EF42  F011         	goto	u1051
  1960   002280  EF44  F011         	goto	u1050
  1961   002284                     u1051:
  1962   002284  EF4F  F011         	goto	l89
  1963   002288                     u1050:
  1964   002288                     
  1965                           ;./keypad.h: 55:         buttonNumber = 7;
  1966   002288  0E00               	movlw	0
  1967   00228A  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1968   00228C  0E07               	movlw	7
  1969   00228E  6E03               	movwf	getKeypad@buttonNumber^0,c
  1970   002290                     l90:
  1971   002290  B6CA               	btfsc	202,3,c	;volatile
  1972   002292  EF4D  F011         	goto	u1061
  1973   002296  EF4F  F011         	goto	u1060
  1974   00229A                     u1061:
  1975   00229A  EF48  F011         	goto	l90
  1976   00229E                     u1060:
  1977   00229E                     l89:
  1978                           
  1979                           ;./keypad.h: 58:     if(PORTCbits.RC4 == 1){
  1980   00229E  A8CC               	btfss	204,4,c	;volatile
  1981   0022A0  EF54  F011         	goto	u1071
  1982   0022A4  EF56  F011         	goto	u1070
  1983   0022A8                     u1071:
  1984   0022A8  EF61  F011         	goto	l93
  1985   0022AC                     u1070:
  1986   0022AC                     
  1987                           ;./keypad.h: 60:         buttonNumber = 15;
  1988   0022AC  0E00               	movlw	0
  1989   0022AE  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  1990   0022B0  0E0F               	movlw	15
  1991   0022B2  6E03               	movwf	getKeypad@buttonNumber^0,c
  1992   0022B4                     l94:
  1993   0022B4  B8CC               	btfsc	204,4,c	;volatile
  1994   0022B6  EF5F  F011         	goto	u1081
  1995   0022BA  EF61  F011         	goto	u1080
  1996   0022BE                     u1081:
  1997   0022BE  EF5A  F011         	goto	l94
  1998   0022C2                     u1080:
  1999   0022C2                     l93:
  2000                           
  2001                           ;./keypad.h: 63:     PORTAbits.RA0 = 0;
  2002   0022C2  90CA               	bcf	202,0,c	;volatile
  2003                           
  2004                           ;./keypad.h: 66:     PORTAbits.RA1 = 1;
  2005   0022C4  82CA               	bsf	202,1,c	;volatile
  2006                           
  2007                           ;./keypad.h: 67:     if(PORTAbits.RA4 == 1){
  2008   0022C6  A8CA               	btfss	202,4,c	;volatile
  2009   0022C8  EF68  F011         	goto	u1091
  2010   0022CC  EF6A  F011         	goto	u1090
  2011   0022D0                     u1091:
  2012   0022D0  EF75  F011         	goto	l97
  2013   0022D4                     u1090:
  2014   0022D4                     
  2015                           ;./keypad.h: 69:         buttonNumber = 2;
  2016   0022D4  0E00               	movlw	0
  2017   0022D6  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  2018   0022D8  0E02               	movlw	2
  2019   0022DA  6E03               	movwf	getKeypad@buttonNumber^0,c
  2020   0022DC                     l98:
  2021   0022DC  B8CA               	btfsc	202,4,c	;volatile
  2022   0022DE  EF73  F011         	goto	u1101
  2023   0022E2  EF75  F011         	goto	u1100
  2024   0022E6                     u1101:
  2025   0022E6  EF6E  F011         	goto	l98
  2026   0022EA                     u1100:
  2027   0022EA                     l97:
  2028                           
  2029                           ;./keypad.h: 72:     if(PORTAbits.RA5 == 1){
  2030   0022EA  AACA               	btfss	202,5,c	;volatile
  2031   0022EC  EF7A  F011         	goto	u1111
  2032   0022F0  EF7C  F011         	goto	u1110
  2033   0022F4                     u1111:
  2034   0022F4  EF87  F011         	goto	l101
  2035   0022F8                     u1110:
  2036   0022F8                     
  2037                           ;./keypad.h: 74:         buttonNumber = 5;
  2038   0022F8  0E00               	movlw	0
  2039   0022FA  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  2040   0022FC  0E05               	movlw	5
  2041   0022FE  6E03               	movwf	getKeypad@buttonNumber^0,c
  2042   002300                     l102:
  2043   002300  BACA               	btfsc	202,5,c	;volatile
  2044   002302  EF85  F011         	goto	u1121
  2045   002306  EF87  F011         	goto	u1120
  2046   00230A                     u1121:
  2047   00230A  EF80  F011         	goto	l102
  2048   00230E                     u1120:
  2049   00230E                     l101:
  2050                           
  2051                           ;./keypad.h: 77:     if(PORTAbits.RA3 == 1){
  2052   00230E  A6CA               	btfss	202,3,c	;volatile
  2053   002310  EF8C  F011         	goto	u1131
  2054   002314  EF8E  F011         	goto	u1130
  2055   002318                     u1131:
  2056   002318  EF99  F011         	goto	l105
  2057   00231C                     u1130:
  2058   00231C                     
  2059                           ;./keypad.h: 79:         buttonNumber = 8;
  2060   00231C  0E00               	movlw	0
  2061   00231E  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  2062   002320  0E08               	movlw	8
  2063   002322  6E03               	movwf	getKeypad@buttonNumber^0,c
  2064   002324                     l106:
  2065   002324  B6CA               	btfsc	202,3,c	;volatile
  2066   002326  EF97  F011         	goto	u1141
  2067   00232A  EF99  F011         	goto	u1140
  2068   00232E                     u1141:
  2069   00232E  EF92  F011         	goto	l106
  2070   002332                     u1140:
  2071   002332                     l105:
  2072                           
  2073                           ;./keypad.h: 82:     if(PORTCbits.RC4 == 1){
  2074   002332  A8CC               	btfss	204,4,c	;volatile
  2075   002334  EF9E  F011         	goto	u1151
  2076   002338  EFA0  F011         	goto	u1150
  2077   00233C                     u1151:
  2078   00233C  EFAB  F011         	goto	l109
  2079   002340                     u1150:
  2080   002340                     
  2081                           ;./keypad.h: 84:         buttonNumber = 0;
  2082   002340  0E00               	movlw	0
  2083   002342  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  2084   002344  0E00               	movlw	0
  2085   002346  6E03               	movwf	getKeypad@buttonNumber^0,c
  2086   002348                     l110:
  2087   002348  B8CC               	btfsc	204,4,c	;volatile
  2088   00234A  EFA9  F011         	goto	u1161
  2089   00234E  EFAB  F011         	goto	u1160
  2090   002352                     u1161:
  2091   002352  EFA4  F011         	goto	l110
  2092   002356                     u1160:
  2093   002356                     l109:
  2094                           
  2095                           ;./keypad.h: 87:     PORTAbits.RA1 = 0;
  2096   002356  92CA               	bcf	202,1,c	;volatile
  2097                           
  2098                           ;./keypad.h: 90:     PORTAbits.RA2 = 1;
  2099   002358  84CA               	bsf	202,2,c	;volatile
  2100                           
  2101                           ;./keypad.h: 91:     if(PORTAbits.RA4 == 1){
  2102   00235A  A8CA               	btfss	202,4,c	;volatile
  2103   00235C  EFB2  F011         	goto	u1171
  2104   002360  EFB4  F011         	goto	u1170
  2105   002364                     u1171:
  2106   002364  EFBF  F011         	goto	l113
  2107   002368                     u1170:
  2108   002368                     
  2109                           ;./keypad.h: 93:         buttonNumber = 3;
  2110   002368  0E00               	movlw	0
  2111   00236A  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  2112   00236C  0E03               	movlw	3
  2113   00236E  6E03               	movwf	getKeypad@buttonNumber^0,c
  2114   002370                     l114:
  2115   002370  B8CA               	btfsc	202,4,c	;volatile
  2116   002372  EFBD  F011         	goto	u1181
  2117   002376  EFBF  F011         	goto	u1180
  2118   00237A                     u1181:
  2119   00237A  EFB8  F011         	goto	l114
  2120   00237E                     u1180:
  2121   00237E                     l113:
  2122                           
  2123                           ;./keypad.h: 96:     if(PORTAbits.RA5 == 1){
  2124   00237E  AACA               	btfss	202,5,c	;volatile
  2125   002380  EFC4  F011         	goto	u1191
  2126   002384  EFC6  F011         	goto	u1190
  2127   002388                     u1191:
  2128   002388  EFD1  F011         	goto	l117
  2129   00238C                     u1190:
  2130   00238C                     
  2131                           ;./keypad.h: 98:         buttonNumber = 6;
  2132   00238C  0E00               	movlw	0
  2133   00238E  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  2134   002390  0E06               	movlw	6
  2135   002392  6E03               	movwf	getKeypad@buttonNumber^0,c
  2136   002394                     l118:
  2137   002394  BACA               	btfsc	202,5,c	;volatile
  2138   002396  EFCF  F011         	goto	u1201
  2139   00239A  EFD1  F011         	goto	u1200
  2140   00239E                     u1201:
  2141   00239E  EFCA  F011         	goto	l118
  2142   0023A2                     u1200:
  2143   0023A2                     l117:
  2144                           
  2145                           ;./keypad.h: 101:     if(PORTAbits.RA3 == 1){
  2146   0023A2  A6CA               	btfss	202,3,c	;volatile
  2147   0023A4  EFD6  F011         	goto	u1211
  2148   0023A8  EFD8  F011         	goto	u1210
  2149   0023AC                     u1211:
  2150   0023AC  EFE3  F011         	goto	l121
  2151   0023B0                     u1210:
  2152   0023B0                     
  2153                           ;./keypad.h: 103:         buttonNumber = 9;
  2154   0023B0  0E00               	movlw	0
  2155   0023B2  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  2156   0023B4  0E09               	movlw	9
  2157   0023B6  6E03               	movwf	getKeypad@buttonNumber^0,c
  2158   0023B8                     l122:
  2159   0023B8  B6CA               	btfsc	202,3,c	;volatile
  2160   0023BA  EFE1  F011         	goto	u1221
  2161   0023BE  EFE3  F011         	goto	u1220
  2162   0023C2                     u1221:
  2163   0023C2  EFDC  F011         	goto	l122
  2164   0023C6                     u1220:
  2165   0023C6                     l121:
  2166                           
  2167                           ;./keypad.h: 106:     if(PORTCbits.RC4 == 1){
  2168   0023C6  A8CC               	btfss	204,4,c	;volatile
  2169   0023C8  EFE8  F011         	goto	u1231
  2170   0023CC  EFEA  F011         	goto	u1230
  2171   0023D0                     u1231:
  2172   0023D0  EFF5  F011         	goto	l125
  2173   0023D4                     u1230:
  2174   0023D4                     
  2175                           ;./keypad.h: 108:         buttonNumber = 10;
  2176   0023D4  0E00               	movlw	0
  2177   0023D6  6E04               	movwf	(getKeypad@buttonNumber+1)^0,c
  2178   0023D8  0E0A               	movlw	10
  2179   0023DA  6E03               	movwf	getKeypad@buttonNumber^0,c
  2180   0023DC                     l126:
  2181   0023DC  B8CC               	btfsc	204,4,c	;volatile
  2182   0023DE  EFF3  F011         	goto	u1241
  2183   0023E2  EFF5  F011         	goto	u1240
  2184   0023E6                     u1241:
  2185   0023E6  EFEE  F011         	goto	l126
  2186   0023EA                     u1240:
  2187   0023EA                     l125:
  2188                           
  2189                           ;./keypad.h: 111:     PORTAbits.RA2 = 0;
  2190   0023EA  94CA               	bcf	202,2,c	;volatile
  2191                           
  2192                           ;./keypad.h: 138:     return buttonNumber;
  2193   0023EC  C003  F001         	movff	getKeypad@buttonNumber,?_getKeypad
  2194   0023F0  C004  F002         	movff	getKeypad@buttonNumber+1,?_getKeypad+1
  2195   0023F4  0012               	return		;funcret
  2196   0023F6                     __end_of_getKeypad:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function ___wmul *****************
  2200 ;; Defined at:
  2201 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  multiplier      2    0[COMRAM] unsigned int 
  2204 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  product         2    4[COMRAM] unsigned int 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  2    0[COMRAM] unsigned int 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, prodl, prodh
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2219 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2220 ;;Total ram usage:        6 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_getValue
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text14
  2230   0029DE                     __ptext14:
  2231                           	callstack 0
  2232   0029DE                     ___wmul:
  2233                           	callstack 29
  2234   0029DE  5001               	movf	___wmul@multiplier^0,w,c
  2235   0029E0  0203               	mulwf	___wmul@multiplicand^0,c
  2236   0029E2  006F FFCC  F005    	movff	prodl,___wmul@product
  2237   0029E8  006F FFD0  F006    	movff	prodh,___wmul@product+1
  2238   0029EE  5001               	movf	___wmul@multiplier^0,w,c
  2239   0029F0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2240   0029F2  50F3               	movf	243,w,c
  2241   0029F4  2606               	addwf	(___wmul@product+1)^0,f,c
  2242   0029F6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2243   0029F8  0203               	mulwf	___wmul@multiplicand^0,c
  2244   0029FA  50F3               	movf	243,w,c
  2245   0029FC  2606               	addwf	(___wmul@product+1)^0,f,c
  2246   0029FE  C005  F001         	movff	___wmul@product,?___wmul
  2247   002A02  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2248   002A06  0012               	return		;funcret
  2249   002A08                     __end_of___wmul:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _LCD_String_xy *****************
  2253 ;; Defined at:
  2254 ;;		line 63 in file "./LCD.h"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  row             1    wreg     unsigned char 
  2257 ;;  pos             1    9[COMRAM] unsigned char 
  2258 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  2259 ;;		 -> STR_6(17), getValue@data(10), STR_1(5), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  row             1   12[COMRAM] unsigned char 
  2262 ;;  location        1   13[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2272 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2275 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2276 ;;Total ram usage:        5 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 3
  2279 ;; This function calls:
  2280 ;;		_LCD_Command
  2281 ;;		_LCD_String
  2282 ;; This function is called by:
  2283 ;;		_getValue
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text15
  2289   0028D6                     __ptext15:
  2290                           	callstack 0
  2291   0028D6                     _LCD_String_xy:
  2292                           	callstack 26
  2293                           
  2294                           ;incstack = 0
  2295                           ;LCD_String_xy@row stored from wreg
  2296   0028D6  6E0D               	movwf	LCD_String_xy@row^0,c
  2297   0028D8                     
  2298                           ;./LCD.h: 66:     if(row<=1)
  2299   0028D8  0E02               	movlw	2
  2300   0028DA  600D               	cpfslt	LCD_String_xy@row^0,c
  2301   0028DC  EF72  F014         	goto	u1001
  2302   0028E0  EF74  F014         	goto	u1000
  2303   0028E4                     u1001:
  2304   0028E4  EF7D  F014         	goto	l1477
  2305   0028E8                     u1000:
  2306   0028E8                     
  2307                           ;./LCD.h: 67:     {;./LCD.h: 68:         location=(0x80) | ((pos) & 0x0f);
  2308   0028E8  500A               	movf	LCD_String_xy@pos^0,w,c
  2309   0028EA  0B0F               	andlw	15
  2310   0028EC  0980               	iorlw	128
  2311   0028EE  6E0E               	movwf	LCD_String_xy@location^0,c
  2312   0028F0                     
  2313                           ;./LCD.h: 69:         LCD_Command(location);
  2314   0028F0  500E               	movf	LCD_String_xy@location^0,w,c
  2315   0028F2  EC24  F015         	call	_LCD_Command
  2316                           
  2317                           ;./LCD.h: 70:     }
  2318   0028F6  EF84  F014         	goto	l1481
  2319   0028FA                     l1477:
  2320                           
  2321                           ;./LCD.h: 72:     {;./LCD.h: 73:         location=(0xC0) | ((pos) & 0x0f);
  2322   0028FA  500A               	movf	LCD_String_xy@pos^0,w,c
  2323   0028FC  0B0F               	andlw	15
  2324   0028FE  09C0               	iorlw	192
  2325   002900  6E0E               	movwf	LCD_String_xy@location^0,c
  2326   002902                     
  2327                           ;./LCD.h: 74:         LCD_Command(location);
  2328   002902  500E               	movf	LCD_String_xy@location^0,w,c
  2329   002904  EC24  F015         	call	_LCD_Command
  2330   002908                     l1481:
  2331                           
  2332                           ;./LCD.h: 76:     LCD_String(msg);
  2333   002908  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  2334   00290C  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  2335   002910  ECED  F013         	call	_LCD_String	;wreg free
  2336   002914  0012               	return		;funcret
  2337   002916                     __end_of_LCD_String_xy:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _LCD_String *****************
  2341 ;; Defined at:
  2342 ;;		line 54 in file "./LCD.h"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  2345 ;;		 -> STR_6(17), getValue@data(10), STR_1(5), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 2
  2364 ;; This function calls:
  2365 ;;		_LCD_Char
  2366 ;; This function is called by:
  2367 ;;		_LCD_String_xy
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text16
  2372   0027DA                     __ptext16:
  2373                           	callstack 0
  2374   0027DA                     _LCD_String:
  2375                           	callstack 26
  2376   0027DA                     
  2377                           ;./LCD.h: 54: void LCD_String(const char *msg);./LCD.h: 55: {;./LCD.h: 56:     while((*m
      +                          sg)!='\0')
  2378   0027DA  EF08  F014         	goto	l1457
  2379   0027DE                     l1453:
  2380                           
  2381                           ;./LCD.h: 57:     {;./LCD.h: 58:       LCD_Char(*msg);
  2382   0027DE  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
  2383   0027E4  0060  F027  FFF7   	movff	LCD_String@msg+1,tblptrh
  2384   0027EA  0E00               	movlw	low (__smallconst shr (0+16))
  2385   0027EC  6EF8               	movwf	tblptru,c
  2386   0027EE  0E1F               	movlw	(high __ramtop+-1)
  2387   0027F0  64F7               	cpfsgt	tblptrh,c
  2388   0027F2  D003               	bra	u967
  2389   0027F4  0008               	tblrd		*
  2390   0027F6  50F5               	movf	tablat,w,c
  2391   0027F8  D007               	bra	u960
  2392   0027FA                     u967:
  2393   0027FA  006F FFDB FFE1     	movff	tblptrl,fsr1l
  2394   002800  006F FFDF FFE2     	movff	tblptrh,fsr1h
  2395   002806  50E7               	movf	indf1,w,c
  2396   002808                     u960:
  2397   002808  EC15  F015         	call	_LCD_Char
  2398   00280C                     
  2399                           ;./LCD.h: 59:       msg++;
  2400   00280C  4A08               	infsnz	LCD_String@msg^0,f,c
  2401   00280E  2A09               	incf	(LCD_String@msg+1)^0,f,c
  2402   002810                     l1457:
  2403                           
  2404                           ;./LCD.h: 56:     while((*msg)!='\0')
  2405   002810  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
  2406   002816  0060  F027  FFF7   	movff	LCD_String@msg+1,tblptrh
  2407   00281C  0E00               	movlw	low (__smallconst shr (0+16))
  2408   00281E  6EF8               	movwf	tblptru,c
  2409   002820  0E1F               	movlw	(high __ramtop+-1)
  2410   002822  64F7               	cpfsgt	tblptrh,c
  2411   002824  D003               	bra	u977
  2412   002826  0008               	tblrd		*
  2413   002828  50F5               	movf	tablat,w,c
  2414   00282A  D007               	bra	u970
  2415   00282C                     u977:
  2416   00282C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  2417   002832  006F FFDF FFE2     	movff	tblptrh,fsr1h
  2418   002838  50E7               	movf	indf1,w,c
  2419   00283A                     u970:
  2420   00283A  0900               	iorlw	0
  2421   00283C  A4D8               	btfss	status,2,c
  2422   00283E  EF23  F014         	goto	u981
  2423   002842  EF25  F014         	goto	u980
  2424   002846                     u981:
  2425   002846  EFEF  F013         	goto	l1453
  2426   00284A                     u980:
  2427   00284A  0012               	return		;funcret
  2428   00284C                     __end_of_LCD_String:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _LCD_Char *****************
  2432 ;; Defined at:
  2433 ;;		line 43 in file "./LCD.h"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  dat             1    wreg     unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  dat             1    6[COMRAM] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2451 ;;Total ram usage:        1 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 1
  2454 ;; This function calls:
  2455 ;;		_MSdelay
  2456 ;; This function is called by:
  2457 ;;		_LCD_String
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text17
  2462   002A2A                     __ptext17:
  2463                           	callstack 0
  2464   002A2A                     _LCD_Char:
  2465                           	callstack 26
  2466                           
  2467                           ;incstack = 0
  2468                           ;LCD_Char@dat stored from wreg
  2469   002A2A  6E07               	movwf	LCD_Char@dat^0,c
  2470   002A2C                     
  2471                           ;./LCD.h: 43: void LCD_Char(char dat);./LCD.h: 44: {;./LCD.h: 45:     LATD= dat;
  2472   002A2C  0060  F01F  FFBD   	movff	LCD_Char@dat,16317	;volatile
  2473   002A32                     
  2474                           ;./LCD.h: 46:     LATC2 = 1;
  2475   002A32  84BC               	bsf	16316,2,c	;volatile
  2476   002A34                     
  2477                           ;./LCD.h: 47:     LATC3=1;
  2478   002A34  86BC               	bsf	16316,3,c	;volatile
  2479   002A36                     
  2480                           ;./LCD.h: 48:     __nop();
  2481   002A36  0000               	nop	
  2482   002A38                     
  2483                           ;./LCD.h: 49:     LATC3=0;
  2484   002A38  96BC               	bcf	16316,3,c	;volatile
  2485   002A3A                     
  2486                           ;./LCD.h: 50:     MSdelay(1);
  2487   002A3A  0E00               	movlw	0
  2488   002A3C  6E02               	movwf	(MSdelay@val+1)^0,c
  2489   002A3E  0E01               	movlw	1
  2490   002A40  6E01               	movwf	MSdelay@val^0,c
  2491   002A42  EC26  F014         	call	_MSdelay	;wreg free
  2492   002A46  0012               	return		;funcret
  2493   002A48                     __end_of_LCD_Char:
  2494                           	callstack 0
  2495                           
  2496 ;; *************** function _LCD_Init *****************
  2497 ;; Defined at:
  2498 ;;		line 15 in file "./LCD.h"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 2
  2519 ;; This function calls:
  2520 ;;		_LCD_Command
  2521 ;;		_MSdelay
  2522 ;; This function is called by:
  2523 ;;		_main
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text18
  2528   0029B0                     __ptext18:
  2529                           	callstack 0
  2530   0029B0                     _LCD_Init:
  2531                           	callstack 28
  2532   0029B0                     
  2533                           ;./LCD.h: 17:     MSdelay(15);
  2534   0029B0  0E00               	movlw	0
  2535   0029B2  6E02               	movwf	(MSdelay@val+1)^0,c
  2536   0029B4  0E0F               	movlw	15
  2537   0029B6  6E01               	movwf	MSdelay@val^0,c
  2538   0029B8  EC26  F014         	call	_MSdelay	;wreg free
  2539   0029BC                     
  2540                           ;./LCD.h: 18:     TRISD = 0x00;
  2541   0029BC  0E00               	movlw	0
  2542   0029BE  6EC5               	movwf	197,c	;volatile
  2543   0029C0                     
  2544                           ;./LCD.h: 20:     TRISCbits.TRISC2 = 0;
  2545   0029C0  94C4               	bcf	196,2,c	;volatile
  2546   0029C2                     
  2547                           ;./LCD.h: 21:     TRISCbits.TRISC3 = 0;
  2548   0029C2  96C4               	bcf	196,3,c	;volatile
  2549   0029C4                     
  2550                           ;./LCD.h: 22:     LCD_Command(0x01);
  2551   0029C4  0E01               	movlw	1
  2552   0029C6  EC24  F015         	call	_LCD_Command
  2553   0029CA                     
  2554                           ;./LCD.h: 23:     LCD_Command(0x38);
  2555   0029CA  0E38               	movlw	56
  2556   0029CC  EC24  F015         	call	_LCD_Command
  2557   0029D0                     
  2558                           ;./LCD.h: 24:     LCD_Command(0x0c);
  2559   0029D0  0E0C               	movlw	12
  2560   0029D2  EC24  F015         	call	_LCD_Command
  2561   0029D6                     
  2562                           ;./LCD.h: 25:     LCD_Command(0x06);
  2563   0029D6  0E06               	movlw	6
  2564   0029D8  EC24  F015         	call	_LCD_Command
  2565   0029DC  0012               	return		;funcret
  2566   0029DE                     __end_of_LCD_Init:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function _LCD_Command *****************
  2570 ;; Defined at:
  2571 ;;		line 33 in file "./LCD.h"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  cmd             1    wreg     unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  cmd             1    6[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2589 ;;Total ram usage:        1 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 1
  2592 ;; This function calls:
  2593 ;;		_MSdelay
  2594 ;; This function is called by:
  2595 ;;		_LCD_Init
  2596 ;;		_LCD_String_xy
  2597 ;;		_LCD_Clear
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text19
  2602   002A48                     __ptext19:
  2603                           	callstack 0
  2604   002A48                     _LCD_Command:
  2605                           	callstack 27
  2606                           
  2607                           ;incstack = 0
  2608                           ;LCD_Command@cmd stored from wreg
  2609   002A48  6E07               	movwf	LCD_Command@cmd^0,c
  2610   002A4A                     
  2611                           ;./LCD.h: 33: void LCD_Command(char cmd );./LCD.h: 34: {;./LCD.h: 35:     LATD= cmd;
  2612   002A4A  0060  F01F  FFBD   	movff	LCD_Command@cmd,16317	;volatile
  2613   002A50                     
  2614                           ;./LCD.h: 36:     LATC2 = 0;
  2615   002A50  94BC               	bcf	16316,2,c	;volatile
  2616   002A52                     
  2617                           ;./LCD.h: 37:     LATC3 = 1;
  2618   002A52  86BC               	bsf	16316,3,c	;volatile
  2619   002A54                     
  2620                           ;./LCD.h: 38:     __nop();
  2621   002A54  0000               	nop	
  2622   002A56                     
  2623                           ;./LCD.h: 39:     LATC3 = 0;
  2624   002A56  96BC               	bcf	16316,3,c	;volatile
  2625   002A58                     
  2626                           ;./LCD.h: 40:     MSdelay(3);
  2627   002A58  0E00               	movlw	0
  2628   002A5A  6E02               	movwf	(MSdelay@val+1)^0,c
  2629   002A5C  0E03               	movlw	3
  2630   002A5E  6E01               	movwf	MSdelay@val^0,c
  2631   002A60  EC26  F014         	call	_MSdelay	;wreg free
  2632   002A64  0012               	return		;funcret
  2633   002A66                     __end_of_LCD_Command:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function _MSdelay *****************
  2637 ;; Defined at:
  2638 ;;		line 80 in file "./LCD.h"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  val             2    0[COMRAM] unsigned int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  j               2    4[COMRAM] unsigned int 
  2643 ;;  i               2    2[COMRAM] unsigned int 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2654 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2657 ;;Total ram usage:        6 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_LCD_Init
  2663 ;;		_LCD_Command
  2664 ;;		_LCD_Char
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text20
  2669   00284C                     __ptext20:
  2670                           	callstack 0
  2671   00284C                     _MSdelay:
  2672                           	callstack 26
  2673   00284C                     
  2674                           ;./LCD.h: 80: void MSdelay(unsigned int val);./LCD.h: 81: {;./LCD.h: 82:      unsigned i
      +                          nt i,j;;./LCD.h: 83:         for(i=0;i<val;i++)
  2675   00284C  0E00               	movlw	0
  2676   00284E  6E04               	movwf	(MSdelay@i+1)^0,c
  2677   002850  0E00               	movlw	0
  2678   002852  6E03               	movwf	MSdelay@i^0,c
  2679   002854  EF3F  F014         	goto	l1277
  2680   002858                     l1265:
  2681                           
  2682                           ;./LCD.h: 84:             for(j=0;j<165;j++);
  2683   002858  0E00               	movlw	0
  2684   00285A  6E06               	movwf	(MSdelay@j+1)^0,c
  2685   00285C  0E00               	movlw	0
  2686   00285E  6E05               	movwf	MSdelay@j^0,c
  2687   002860                     l1271:
  2688   002860  4A05               	infsnz	MSdelay@j^0,f,c
  2689   002862  2A06               	incf	(MSdelay@j+1)^0,f,c
  2690   002864  5006               	movf	(MSdelay@j+1)^0,w,c
  2691   002866  E109               	bnz	u670
  2692   002868  0EA5               	movlw	165
  2693   00286A  5C05               	subwf	MSdelay@j^0,w,c
  2694   00286C  A0D8               	btfss	status,0,c
  2695   00286E  EF3B  F014         	goto	u671
  2696   002872  EF3D  F014         	goto	u670
  2697   002876                     u671:
  2698   002876  EF30  F014         	goto	l1271
  2699   00287A                     u670:
  2700   00287A  4A03               	infsnz	MSdelay@i^0,f,c
  2701   00287C  2A04               	incf	(MSdelay@i+1)^0,f,c
  2702   00287E                     l1277:
  2703   00287E  5001               	movf	MSdelay@val^0,w,c
  2704   002880  5C03               	subwf	MSdelay@i^0,w,c
  2705   002882  5002               	movf	(MSdelay@val+1)^0,w,c
  2706   002884  5804               	subwfb	(MSdelay@i+1)^0,w,c
  2707   002886  A0D8               	btfss	status,0,c
  2708   002888  EF48  F014         	goto	u681
  2709   00288C  EF4A  F014         	goto	u680
  2710   002890                     u681:
  2711   002890  EF2C  F014         	goto	l1265
  2712   002894                     u680:
  2713   002894  0012               	return		;funcret
  2714   002896                     __end_of_MSdelay:
  2715                           	callstack 0
  2716                           
  2717                           	psect	rparam
  2718   000000                     
  2719                           	psect	config
  2720                           
  2721                           ;Config register CONFIG1L @ 0x300000
  2722                           ;	External Oscillator Selection
  2723                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2724                           ;	Reset Oscillator Selection
  2725                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2726   300000                     	org	3145728
  2727   300000  F8                 	db	248
  2728                           
  2729                           ;Config register CONFIG1H @ 0x300001
  2730                           ;	Clock out Enable bit
  2731                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2732                           ;	PRLOCKED One-Way Set Enable bit
  2733                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2734                           ;	Clock Switch Enable bit
  2735                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2736                           ;	Fail-Safe Clock Monitor Enable bit
  2737                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2738   300001                     	org	3145729
  2739   300001  FF                 	db	255
  2740                           
  2741                           ;Config register CONFIG2L @ 0x300002
  2742                           ;	MCLR Enable bit
  2743                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2744                           ;	Power-up timer selection bits
  2745                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2746                           ;	Multi-vector enable bit
  2747                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2748                           ;	IVTLOCK bit One-way set enable bit
  2749                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2750                           ;	Low Power BOR Enable bit
  2751                           ;	LPBOREN = OFF, ULPBOR disabled
  2752                           ;	Brown-out Reset Enable bits
  2753                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2754   300002                     	org	3145730
  2755   300002  FF                 	db	255
  2756                           
  2757                           ;Config register CONFIG2H @ 0x300003
  2758                           ;	Brown-out Reset Voltage Selection bits
  2759                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2760                           ;	ZCD Disable bit
  2761                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2762                           ;	PPSLOCK bit One-Way Set Enable bit
  2763                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2764                           ;	Stack Full/Underflow Reset Enable bit
  2765                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2766                           ;	Debugger Enable bit
  2767                           ;	DEBUG = OFF, Background debugger disabled
  2768                           ;	Extended Instruction Set Enable bit
  2769                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2770   300003                     	org	3145731
  2771   300003  FF                 	db	255
  2772                           
  2773                           ;Config register CONFIG3L @ 0x300004
  2774                           ;	WDT Period selection bits
  2775                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2776                           ;	WDT operating mode
  2777                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2778   300004                     	org	3145732
  2779   300004  9F                 	db	159
  2780                           
  2781                           ;Config register CONFIG3H @ 0x300005
  2782                           ;	WDT Window Select bits
  2783                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2784                           ;	WDT input clock selector
  2785                           ;	WDTCCS = SC, Software Control
  2786   300005                     	org	3145733
  2787   300005  FF                 	db	255
  2788                           
  2789                           ;Config register CONFIG4L @ 0x300006
  2790                           ;	Boot Block Size selection bits
  2791                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2792                           ;	Boot Block enable bit
  2793                           ;	BBEN = OFF, Boot block disabled
  2794                           ;	Storage Area Flash enable bit
  2795                           ;	SAFEN = OFF, SAF disabled
  2796                           ;	Application Block write protection bit
  2797                           ;	WRTAPP = OFF, Application Block not write protected
  2798   300006                     	org	3145734
  2799   300006  FF                 	db	255
  2800                           
  2801                           ;Config register CONFIG4H @ 0x300007
  2802                           ;	Boot Block Write Protection bit
  2803                           ;	WRTB = OFF, Boot Block not write-protected
  2804                           ;	Configuration Register Write Protection bit
  2805                           ;	WRTC = OFF, Configuration registers not write-protected
  2806                           ;	Data EEPROM Write Protection bit
  2807                           ;	WRTD = OFF, Data EEPROM not write-protected
  2808                           ;	SAF Write protection bit
  2809                           ;	WRTSAF = OFF, SAF not Write Protected
  2810                           ;	Low Voltage Programming Enable bit
  2811                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2812   300007                     	org	3145735
  2813   300007  FF                 	db	255
  2814                           
  2815                           ;Config register CONFIG5L @ 0x300008
  2816                           ;	PFM and Data EEPROM Code Protection bit
  2817                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2818   300008                     	org	3145736
  2819   300008  FF                 	db	255
  2820                           
  2821                           ;Config register CONFIG5H @ 0x300009
  2822                           ;	unspecified, using default values
  2823   300009                     	org	3145737
  2824   300009  FF                 	db	255
  2825                           tosu	equ	0x3FFF
  2826                           tosh	equ	0x3FFE
  2827                           tosl	equ	0x3FFD
  2828                           stkptr	equ	0x3FFC
  2829                           pclatu	equ	0x3FFB
  2830                           pclath	equ	0x3FFA
  2831                           pcl	equ	0x3FF9
  2832                           tblptru	equ	0x3FF8
  2833                           tblptrh	equ	0x3FF7
  2834                           tblptrl	equ	0x3FF6
  2835                           tablat	equ	0x3FF5
  2836                           prodh	equ	0x3FF4
  2837                           prodl	equ	0x3FF3
  2838                           indf0	equ	0x3FEF
  2839                           postinc0	equ	0x3FEE
  2840                           postdec0	equ	0x3FED
  2841                           preinc0	equ	0x3FEC
  2842                           plusw0	equ	0x3FEB
  2843                           fsr0h	equ	0x3FEA
  2844                           fsr0l	equ	0x3FE9
  2845                           wreg	equ	0x3FE8
  2846                           indf1	equ	0x3FE7
  2847                           postinc1	equ	0x3FE6
  2848                           postdec1	equ	0x3FE5
  2849                           preinc1	equ	0x3FE4
  2850                           plusw1	equ	0x3FE3
  2851                           fsr1h	equ	0x3FE2
  2852                           fsr1l	equ	0x3FE1
  2853                           bsr	equ	0x3FE0
  2854                           indf2	equ	0x3FDF
  2855                           postinc2	equ	0x3FDE
  2856                           postdec2	equ	0x3FDD
  2857                           preinc2	equ	0x3FDC
  2858                           plusw2	equ	0x3FDB
  2859                           fsr2h	equ	0x3FDA
  2860                           fsr2l	equ	0x3FD9
  2861                           status	equ	0x3FD8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     70      79
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> getValue@data(COMRAM[10]), STR_1(CODE[5]), STR_6(CODE[17]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> getValue@data(COMRAM[10]), STR_1(CODE[5]), STR_6(CODE[17]), 

    S710$buffer	PTR unsigned char  size(2) Largest target is 0

    S710$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> getValue@data(COMRAM[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_getValue
    _getValue->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9325
                           _LCD_Init
                      _LCD_String_xy
                           _getValue
                   _initializeKeypad
 ---------------------------------------------------------------------------------
 (1) _initializeKeypad                                     0     0      0       0
                    _initializePORTA
                    _initializePORTC
 ---------------------------------------------------------------------------------
 (2) _initializePORTC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializePORTA                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getValue                                            28    26      2    6811
                                             42 COMRAM    28    26      2
                      _LCD_String_xy
                             ___wmul
                          _getKeypad
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3743
                                             25 COMRAM    17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2936
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _getKeypad                                            4     2      2      35
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    1852
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     463
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     342
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     662
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     342
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2     320
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _getValue
     _LCD_String_xy
     ___wmul
     _getKeypad
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _initializeKeypad
     _initializePORTA
     _initializePORTC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      78        0.0%
BITBIGSFRlllhh     559      0       0      75        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      240      0       0      77        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     46      4F       1       83.2%
BITBIGSFRhhh        33      0       0      69        0.0%
BITBIGSFRlllhl      1F      0       0      76        0.0%
BITBIGSFRlhl         4      0       0      73        0.0%
BITBIGSFRhl          4      0       0      71        0.0%
BITBIGSFRlhh         1      0       0      72        0.0%
BITBIGSFRllh         1      0       0      74        0.0%
BITBIGSFRhhl         1      0       0      70        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      16        0.0%
DATA                 0      0      6F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 11 10:51:41 2024

            ?_LCD_Command 0001                        l41 29DC                        l50 2A46  
                      l61 2914                        l47 2A64                        l56 284A  
                      l72 2A8E                        l81 2256                        l90 2290  
                      l82 2248                        l75 2A78                        l69 2894  
                      l93 22C2                        l85 227A                        l94 22B4  
                      l86 226C                        l78 2A84                        l97 22EA  
                      l89 229E                        l98 22DC              ___awdiv@sign 0006  
     ___wmul@multiplicand 0003               ?_LCD_String 0008                       l101 230E  
                     l110 2348                       l102 2300                       l121 23C6  
                     l113 237E                       l105 2332                       l122 23B8  
                     l114 2370                       l106 2324                       l125 23EA  
                     l117 23A2                       l109 2356                       l126 23DC  
                     l118 2394                       l144 222A                       l129 23F4  
                     l153 29A8                       l154 29A8                       l403 272C  
                     l159 2A06                       l390 267C                       l900 27D8  
                     l911 2A90                       l837 2948                       l881 28D4  
                     l875 25B8                       l885 2964                       l888 297C  
                     u700 25E6                       u701 25E2                       u710 260C  
                     u711 2608                       u720 262A                       u800 271C  
                     u721 2626                       u801 2718                       u730 2646  
                     u810 273E                       u731 2642                       u811 273A  
                     u740 266C                       u820 274E                       u900 24B4  
                     u741 2668                       u821 274A                       u670 287A  
                     u750 2690                       u830 2774                       u910 2514  
                     u671 2876                       u751 268C                       u831 2770  
                     u911 2510                       u680 2894                       u760 26AA  
                     u840 27A6                       u920 2524                       u681 2890  
                     u761 26A6                       u841 27A2                       u921 2520  
                     u690 25CC                       u770 26C4                       u850 2958  
                     u930 2534                       u691 25C8                       u771 26C0  
                     u851 2954                       u931 2530                       u780 26E2  
                     u940 2544                       u860 241A                       u781 26DE  
                     u941 2540                       u861 2416                       u790 26F8  
                     u950 2584                       u870 245A                       u791 26F4  
                     u951 2580                       u871 2456                       u960 2808  
                     u880 2478                       u881 2474                       u970 283A  
                     u890 24B2                       u891 24AC                       u980 284A  
                     u981 2846                       u990 28CC                       u967 27FA  
                     u991 28C8                       u977 282C                       _abs 294A  
            ___awmod@sign 0006                       wreg 3FE8               LCD_Char@dat 0007  
                    ?_abs 0007                      l1301 261C                      l1133 2A66  
                    l1311 2650                      l1303 262A                      l1135 2A7A  
                    l1313 2656                      l1305 2630                      l1401 245A  
                    l1307 2646                      l1315 265C                      l1331 269C  
                    l1323 267E                      l1411 24E6                      l1403 2478  
                    l1501 2368                      l1317 266C                      l1309 264E  
                    l1341 26D4                      l1333 26AA                      l1325 2682  
                    l1421 2544                      l1413 2502                      l1405 2494  
                    l1271 2860                      l1263 284C                      l1503 238C  
                    l1319 2674                      l1343 26E2                      l1351 270C  
                    l1335 26B2                      l1327 2690                      l1423 2556  
                    l1415 2514                      l1407 249E                      l1511 291E  
                    l1273 2864                      l1265 2858                      l1441 2A50  
                    l1521 29DE                      l1505 23B0                      l1281 25BE  
                    l1353 271C                      l1345 26F8                      l1337 26C4  
                    l1329 2698                      l1361 273E                      l1425 2570  
                    l1417 2524                      l1409 24B6                      l1433 2594  
                    l1513 2926                      l1601 2986                      l1275 287A  
                    l1443 2A52                      l1531 29C0                      l1451 27DA  
                    l1523 29FE                      l1507 23D4                      l1291 25EE  
                    l1283 25CC                      l1355 2724                      l1347 2700  
                    l1339 26CC                      l1363 274E                      l1419 2534  
                    l1427 2572                      l1515 292E                      l1603 299C  
                    l1277 287E                      l1445 2A54                      l1541 29D6  
                    l1533 29C2                      l1381 2A34                      l1453 27DE  
                    l1293 25F2                      l1285 25D4                      l1349 2706  
                    l1373 294A                      l1365 2758                      l1429 2588  
                    l1461 289E                      l1517 293E                      l1509 2916  
                    l1197 2A86                      l1447 2A56                      l1439 2A4A  
                    l1535 29C4                      l1527 29B0                      l1383 2A36  
                    l1455 280C                      l1471 28D8                      l1295 25FA  
                    l1287 25D8                      l1279 25BA                      l1375 2958  
                    l1367 2774                      l1359 272E                      l1391 241A  
                    l1463 28AE                      l1551 2052                      l1543 201C  
                    l1199 2A8A                      l1449 2A58                      l1537 29CA  
                    l1529 29BC                      l1385 2A38                      l1377 2A2C  
                    l1457 2810                      l1481 2908                      l1473 28E8  
                    l1297 260C                      l1289 25E6                      l1369 27A6  
                    l1393 2422                      l1465 28CC                      l1561 20B0  
                    l1553 2060                      l1545 202C                      l1539 29D0  
                    l1387 2A3A                      l1379 2A32                      l1475 28F0  
                    l1491 22AC                      l1483 222C                      l1299 2614  
                    l1395 242E                      l1459 2896                      l1571 210E  
                    l1563 20BE                      l1555 207C                      l1547 202C  
                    l1477 28FA                      l1469 28D8                      l1493 22D4  
                    l1485 2240                      l1397 2432                      l1389 23F6  
                    l1581 216C                      l1573 211C                      l1565 20DA  
                    l1557 2090                      l1549 2046                      l1479 2902  
                    l1495 22F8                      l1487 2264                      l1399 243C  
                    l1591 2222                      l1583 217A                      l1575 2138  
                    l1567 20EE                      l1559 20A4                      l1497 231C  
                    l1489 2288                      l1585 2196                      l1577 214C  
                    l1569 2102                      l1499 2340                      l1587 21AA  
                    l1579 2160                      l1589 21BA                      l1597 297E  
                    l1599 2982                      STR_1 2012                      STR_2 2017  
                    STR_3 2017                      STR_4 2017                      STR_5 2017  
                    STR_6 2001                      u1000 28E8                      u1001 28E4  
                    u1010 2240                      u1011 223C                      u1100 22EA  
                    u1020 2256                      u1101 22E6                      u1021 2252  
                    u1110 22F8                      u1030 2264                      u1111 22F4  
                    u1031 2260                      u1200 23A2                      u1120 230E  
                    u1040 227A                      u1201 239E                      u1121 230A  
                    u1041 2276                      u1210 23B0                      u1130 231C  
                    u1050 2288                      u1211 23AC                      u1131 2318  
                    u1051 2284                      u1220 23C6                      u1140 2332  
                    u1060 229E                      u1300 2138                      u1221 23C2  
                    u1141 232E                      u1061 229A                      u1301 2134  
                    u1230 23D4                      u1150 2340                      u1070 22AC  
                    u1310 217A                      u1231 23D0                      u1151 233C  
                    u1071 22A8                      u1311 2176                      u1240 23EA  
                    u1160 2356                      u1080 22C2                      u1320 2196  
                    u1241 23E6                      u1161 2352                      u1081 22BE  
                    u1321 2192                      u1170 2368                      u1090 22D4  
                    u1250 2060                      u1171 2364                      u1091 22D0  
                    u1251 205C                      u1180 237E                      u1260 207C  
                    u1181 237A                      u1261 2078                      _LATA 3FBA  
                    u1190 238C                      u1270 20BE                      u1191 2388  
                    u1271 20BA                      u1280 20DA                      _LATD 3FBD  
                    u1281 20D6                      u1290 211C                      u1291 2118  
                    abs@a 0007                      _dbuf 0060                      _main 297E  
                    _prec 0049                      fsr1h 3FE2                      fsr2h 3FDA  
                    indf1 3FE7                      indf2 3FDF                      fsr1l 3FE1  
                    fsr2l 3FD9                      prodh 3FF4                      prodl 3FF3  
                    start FFFC           __end_of_MSdelay 2896             _LCD_String_xy 28D6  
            ___param_bank 0000                     ??_abs 0009          __end_of_LCD_Char 2A48  
        __end_of_LCD_Init 29DE                     ?_main 0001           __end_of___awdiv 267E  
         __end_of___awmod 272E           ___awdiv@divisor 0003                     _LATC2 1FDE2  
                   _LATC3 1FDE3         ??_initializePORTA 0001         ??_initializePORTC 0001  
         ___awdiv@counter 0005              vfpfcnvrt@fmt 000C                     _PORTA 3FCA  
                   _TRISA 3FC2                     _TRISD 3FC5                     _flags 004F  
                   _fputc 272E                     _width 0047                     _putch 2A90  
                   tablat 3FF5                     status 3FD8           __end_of_sprintf 294A  
          ?_LCD_String_xy 000A           __initialization 2A08              __end_of_main 29B0  
                  ??_main 0047             __activetblptr 0002                    ?_fputc 0001  
        ___awdiv@dividend 0001                    _ANSELA 3A40                    ?_putch 0001  
        LCD_String_xy@msg 000B          LCD_String_xy@pos 000A          LCD_String_xy@row 000D  
               ??_MSdelay 0003         ?_initializeKeypad 0001             vfpfcnvrt@done 000F  
      ??_initializeKeypad 0001          __end_of_getValue 222C              vfprintf@cfmt 0019  
                  ___wmul 29DE                 ??___awdiv 0005                 ??___awmod 0005  
                  clear_0 2A0E                    clear_1 2A1A          ___awdiv@quotient 0007  
         ___awmod@divisor 0003                    isa$std 0001           ___awmod@counter 0005  
                  fputc@c 0001              __mediumconst 0000                    tblptrh 3FF7  
                  tblptrl 3FF6                    tblptru 3FF8                    putch@c 0001  
        __end_of_vfprintf 28D6                 ??_sprintf 001E                 ?_LCD_Char 0001  
              __accesstop 0060   __end_of__initialization 2A20                 ?_LCD_Init 0001  
         ??_LCD_String_xy 000D             ___rparam_used 0001            __pcstackCOMRAM 0001  
           __end_of_fputc 27DA             __end_of_putch 2A92              ??_LCD_String 000A  
                 ??_fputc 0004                   ??_putch 0001                __pbssBANK0 0060  
              ??_LCD_Char 0007                ??_LCD_Init 0008        __end_of_LCD_String 284C  
         _initializePORTA 2A66           _initializePORTC 2A7A                   ?___wmul 0001  
               ?_getValue 002B                   _MSdelay 284C             LCD_String@msg 0008  
       __end_of_getKeypad 23F6                   __Hparam 0000                   __Lparam 0000  
                 ___awdiv 25BA                   ___awmod 267E                 ?_vfprintf 0016  
            __psmallconst 2000                   __pcinit 2A08                   __ramtop 2000  
                 __ptext0 297E                   __ptext1 2A86                   __ptext2 2A7A  
                 __ptext3 2A66                   __ptext4 201C                   __ptext5 2916  
                 __ptext6 2896                   __ptext7 23F6                   __ptext8 272E  
                 __ptext9 2A90          ___awmod@dividend 0001                ??_getValue 002D  
                 _sprintf 2916      end_of_initialization 2A20   __end_of_initializePORTA 2A7A  
 __end_of_initializePORTC 2A86                   fputc@fp 0003            LCD_Command@cmd 0007  
           __Lmediumconst 0000         __end_of_vfpfcnvrt 25BA                   postdec2 3FDD  
                 postinc0 3FEE                   postinc1 3FE6                   postinc2 3FDE  
        vfpfcnvrt@convarg 0011                ??_vfprintf 0019                 _PORTAbits 3FCA  
               _PORTCbits 3FCC                 _TRISCbits 3FC4             ??_LCD_Command 0007  
             vfpfcnvrt@ap 000D               vfpfcnvrt@cp 0010               vfpfcnvrt@fp 000B  
          __end_of___wmul 2A08       start_initialization 2A08               __end_of_abs 297E  
        ?_initializePORTA 0001          ?_initializePORTC 0001     __end_of_LCD_String_xy 2916  
             vfprintf@fmt 0017                  ??___wmul 0005       __end_of_LCD_Command 2A66  
             __pbssCOMRAM 0047                  ?_MSdelay 0001                 _getKeypad 222C  
                ?___awdiv 0001                  ?___awmod 0001          _initializeKeypad 2A86  
             __smallconst 2000     LCD_String_xy@location 000E                  ?_sprintf 001A  
                MSdelay@i 0003                  MSdelay@j 0005                  _LCD_Char 2A2A  
                _LCD_Init 29B0            ___wmul@product 0005                  _LATCbits 3FBC  
              ?_getKeypad 0001               _LCD_Command 2A48                 _vfpfcnvrt 23F6  
       ___wmul@multiplier 0001                 _userGuess 004D                vfpfcnvrt@c 0015  
          getValue@value1 003F            getValue@value2 0041            getValue@value3 0043  
          getValue@value4 0045                  __Hrparam 0000                vfprintf@ap 0018  
                __Lrparam 0000                vfprintf@fp 0016                ?_vfpfcnvrt 000B  
              _ANSELCbits 3A60     getKeypad@buttonNumber 0003                sprintf@fmt 001B  
                __ptext10 294A                  __ptext11 267E                  __ptext20 284C  
                __ptext12 25BA                  __ptext13 222C                  __ptext14 29DE  
                __ptext15 28D6                  __ptext16 27DA                  __ptext17 2A2A  
                __ptext18 29B0                  __ptext19 2A48                  _getValue 201C  
                _password 004B                MSdelay@val 0001                  isa$xinst 0000  
    getValue@decimalValue 003D               ??_getKeypad 0003                  _vfprintf 2896  
              _LCD_String 27DA                 sprintf@ap 001E  __end_of_initializeKeypad 2A90  
            getValue@data 0033               ??_vfpfcnvrt 000E                  sprintf@f 001F  
                sprintf@s 001A  
