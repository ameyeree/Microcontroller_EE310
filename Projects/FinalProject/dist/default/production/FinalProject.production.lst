

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat May 11 12:07:27 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=4,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	ivt0x4008,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 12/10/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F47K42 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _LATB	set	16315
    91   000000                     _TRISB	set	16323
    92   000000                     _PORTBbits	set	16331
    93   000000                     _PORTCbits	set	16332
    94   000000                     _NVMCON1bits	set	14821
    95   000000                     _PORTB	set	16331
    96   000000                     _PORTAbits	set	16330
    97   000000                     _LATCbits	set	16316
    98   000000                     _LATC3	set	130531
    99   000000                     _IPR1bits	set	14721
   100   000000                     _PIR1bits	set	14753
   101   000000                     _ANSELA	set	14912
   102   000000                     _LATA	set	16314
   103   000000                     _LATD	set	16317
   104   000000                     _TRISCbits	set	16324
   105   000000                     _TRISD	set	16325
   106   000000                     _LATC2	set	130530
   107   000000                     _PORTA	set	16330
   108   000000                     _TRISA	set	16322
   109   000000                     _ANSELB	set	14928
   110   000000                     _ANSELCbits	set	14944
   111   000000                     _INTCON0bits	set	16338
   112   000000                     _NVMADRL	set	14816
   113   000000                     _NVMCON1	set	14821
   114   000000                     _IVTBASEL	set	16341
   115   000000                     _IVTBASEH	set	16342
   116   000000                     _IVTBASEU	set	16343
   117   000000                     _PIE1bits	set	14737
   118   000000                     _NVMCON2	set	14822
   119   000000                     _NVMDAT	set	14819
   120                           
   121                           	psect	smallconst
   122   002000                     __psmallconst:
   123                           	callstack 0
   124   002000  00                 	db	0
   125   002001                     STR_9:
   126   002001  54                 	db	84	;'T'
   127   002002  65                 	db	101	;'e'
   128   002003  73                 	db	115	;'s'
   129   002004  74                 	db	116	;'t'
   130   002005  69                 	db	105	;'i'
   131   002006  6E                 	db	110	;'n'
   132   002007  67                 	db	103	;'g'
   133   002008  20                 	db	32
   134   002009  4B                 	db	75	;'K'
   135   00200A  65                 	db	101	;'e'
   136   00200B  79                 	db	121	;'y'
   137   00200C  70                 	db	112	;'p'
   138   00200D  61                 	db	97	;'a'
   139   00200E  64                 	db	100	;'d'
   140   00200F  3A                 	db	58	;':'
   141   002010  20                 	db	32
   142   002011  00                 	db	0
   143   002012                     STR_8:
   144   002012  2A                 	db	42
   145   002013  2A                 	db	42
   146   002014  2A                 	db	42
   147   002015  2A                 	db	42
   148   002016  2A                 	db	42
   149   002017  2A                 	db	42
   150   002018  2A                 	db	42
   151   002019  2A                 	db	42
   152   00201A  2A                 	db	42
   153   00201B  2A                 	db	42
   154   00201C  2A                 	db	42
   155   00201D  2A                 	db	42
   156   00201E  2A                 	db	42
   157   00201F  2A                 	db	42
   158   002020  2A                 	db	42
   159   002021  2A                 	db	42
   160   002022  00                 	db	0
   161   002023                     STR_7:
   162   002023  50                 	db	80	;'P'
   163   002024  61                 	db	97	;'a'
   164   002025  73                 	db	115	;'s'
   165   002026  73                 	db	115	;'s'
   166   002027  77                 	db	119	;'w'
   167   002028  6F                 	db	111	;'o'
   168   002029  72                 	db	114	;'r'
   169   00202A  64                 	db	100	;'d'
   170   00202B  20                 	db	32
   171   00202C  52                 	db	82	;'R'
   172   00202D  65                 	db	101	;'e'
   173   00202E  73                 	db	115	;'s'
   174   00202F  65                 	db	101	;'e'
   175   002030  74                 	db	116	;'t'
   176   002031  00                 	db	0
   177   002032                     STR_6:
   178   002032  4E                 	db	78	;'N'
   179   002033  65                 	db	101	;'e'
   180   002034  77                 	db	119	;'w'
   181   002035  20                 	db	32
   182   002036  50                 	db	80	;'P'
   183   002037  61                 	db	97	;'a'
   184   002038  73                 	db	115	;'s'
   185   002039  73                 	db	115	;'s'
   186   00203A  77                 	db	119	;'w'
   187   00203B  6F                 	db	111	;'o'
   188   00203C  72                 	db	114	;'r'
   189   00203D  64                 	db	100	;'d'
   190   00203E  3A                 	db	58	;':'
   191   00203F  00                 	db	0
   192   002040                     STR_1:
   193   002040  5F                 	db	95	;'_'
   194   002041  5F                 	db	95	;'_'
   195   002042  5F                 	db	95	;'_'
   196   002043  5F                 	db	95	;'_'
   197   002044  00                 	db	0
   198   002045                     STR_2:
   199   002045  25                 	db	37
   200   002046  64                 	db	100	;'d'
   201   002047  00                 	db	0
   202   002048  00                 	db	0	; dummy byte at the end
   203   000000                     
   204                           ; #config settings
   205                           
   206                           	psect	cinit
   207   005584                     __pcinit:
   208                           	callstack 0
   209   005584                     start_initialization:
   210                           	callstack 0
   211   005584                     __initialization:
   212                           	callstack 0
   213                           
   214                           ; Clear objects allocated to BANK0 (39 bytes)
   215   005584  EE00  F0A6         	lfsr	0,__pbssBANK0
   216   005588  0E27               	movlw	39
   217   00558A                     clear_0:
   218   00558A  6AEE               	clrf	postinc0,c
   219   00558C  06E8               	decf	wreg,f,c
   220   00558E  E1FD               	bnz	clear_0
   221                           
   222                           ; Clear objects allocated to COMRAM (2 bytes)
   223   005590  6A4E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   224   005592  6A4D               	clrf	__pbssCOMRAM& (0+255),c
   225                           
   226                           ;
   227                           ; Setup IVTBASE
   228                           ;
   229   005594  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
   230   005596  6ED5               	movwf	213,c
   231   005598  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
   232   00559A  6ED6               	movwf	214,c
   233   00559C  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
   234   00559E  6ED7               	movwf	215,c
   235   0055A0                     end_of_initialization:
   236                           	callstack 0
   237   0055A0                     __end_of__initialization:
   238                           	callstack 0
   239   0055A0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240   0055A2  6EF8               	movwf	tblptru,c
   241   0055A4  0100               	movlb	0
   242   0055A6  EFE1  F029         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245   00004D                     __pbssCOMRAM:
   246                           	callstack 0
   247   00004D                     _password:
   248                           	callstack 0
   249   00004D                     	ds	2
   250                           
   251                           	psect	bssBANK0
   252   0000A6                     __pbssBANK0:
   253                           	callstack 0
   254   0000A6                     _dbuf:
   255                           	callstack 0
   256   0000A6                     	ds	32
   257   0000C6                     _width:
   258                           	callstack 0
   259   0000C6                     	ds	2
   260   0000C8                     _prec:
   261                           	callstack 0
   262   0000C8                     	ds	2
   263   0000CA                     _userGuess:
   264                           	callstack 0
   265   0000CA                     	ds	2
   266   0000CC                     _flags:
   267                           	callstack 0
   268   0000CC                     	ds	1
   269                           
   270                           	psect	cstackBANK0
   271   000060                     __pcstackBANK0:
   272                           	callstack 0
   273   000060                     ?_getKeypad:
   274                           	callstack 0
   275   000060                     ?___wmul:
   276                           	callstack 0
   277   000060                     ?___awdiv:
   278                           	callstack 0
   279   000060                     ?___awmod:
   280                           	callstack 0
   281   000060                     MSdelay@val:
   282                           	callstack 0
   283   000060                     ___wmul@multiplier:
   284                           	callstack 0
   285   000060                     ___awdiv@dividend:
   286                           	callstack 0
   287   000060                     ___awmod@dividend:
   288                           	callstack 0
   289   000060                     fputc@c:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x0
   293   000060                     	ds	2
   294   000062                     fputc@fp:
   295                           	callstack 0
   296   000062                     MSdelay@i:
   297                           	callstack 0
   298   000062                     getKeypad@buttonNumber:
   299                           	callstack 0
   300   000062                     ___wmul@multiplicand:
   301                           	callstack 0
   302   000062                     ___awdiv@divisor:
   303                           	callstack 0
   304   000062                     ___awmod@divisor:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x2
   308   000062                     	ds	1
   309   000063                     ??_fputc:
   310                           
   311                           ; 1 bytes @ 0x3
   312   000063                     	ds	1
   313   000064                     ___awdiv@counter:
   314                           	callstack 0
   315   000064                     ___awmod@counter:
   316                           	callstack 0
   317   000064                     MSdelay@j:
   318                           	callstack 0
   319   000064                     ___wmul@product:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x4
   323   000064                     	ds	1
   324   000065                     ___awdiv@sign:
   325                           	callstack 0
   326   000065                     ___awmod@sign:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x5
   330   000065                     	ds	1
   331   000066                     ?_abs:
   332                           	callstack 0
   333   000066                     LCD_Command@cmd:
   334                           	callstack 0
   335   000066                     LCD_Char@dat:
   336                           	callstack 0
   337   000066                     ___awdiv@quotient:
   338                           	callstack 0
   339   000066                     abs@a:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x6
   343   000066                     	ds	1
   344   000067                     LCD_String@msg:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x7
   348   000067                     	ds	1
   349   000068                     ??_abs:
   350                           
   351                           ; 1 bytes @ 0x8
   352   000068                     	ds	1
   353   000069                     LCD_String_xy@pos:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x9
   357   000069                     	ds	1
   358   00006A                     vfpfcnvrt@fp:
   359                           	callstack 0
   360   00006A                     LCD_String_xy@msg:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0xA
   364   00006A                     	ds	1
   365   00006B                     vfpfcnvrt@fmt:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0xB
   369   00006B                     	ds	1
   370   00006C                     LCD_String_xy@row:
   371                           	callstack 0
   372   00006C                     vfpfcnvrt@ap:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0xC
   376   00006C                     	ds	1
   377   00006D                     ??_vfpfcnvrt:
   378   00006D                     LCD_String_xy@location:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0xD
   382   00006D                     	ds	1
   383   00006E                     vfpfcnvrt@done:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0xE
   387   00006E                     	ds	1
   388   00006F                     vfpfcnvrt@cp:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xF
   392   00006F                     	ds	1
   393   000070                     vfpfcnvrt@convarg:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x10
   397   000070                     	ds	4
   398   000074                     vfpfcnvrt@c:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x14
   402   000074                     	ds	1
   403   000075                     ?_vfprintf:
   404                           	callstack 0
   405   000075                     vfprintf@fp:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x15
   409   000075                     	ds	1
   410   000076                     vfprintf@fmt:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x16
   414   000076                     	ds	1
   415   000077                     vfprintf@ap:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x17
   419   000077                     	ds	1
   420   000078                     vfprintf@cfmt:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x18
   424   000078                     	ds	1
   425   000079                     ?_sprintf:
   426                           	callstack 0
   427   000079                     sprintf@s:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x19
   431   000079                     	ds	1
   432   00007A                     sprintf@fmt:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x1A
   436   00007A                     	ds	3
   437   00007D                     sprintf@ap:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x1D
   441   00007D                     	ds	1
   442   00007E                     sprintf@f:
   443                           	callstack 0
   444                           
   445                           ; 12 bytes @ 0x1E
   446   00007E                     	ds	12
   447   00008A                     ?_getValue:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x2A
   451   00008A                     	ds	2
   452   00008C                     ??_getValue:
   453                           
   454                           ; 1 bytes @ 0x2C
   455   00008C                     	ds	6
   456   000092                     getValue@data:
   457                           	callstack 0
   458                           
   459                           ; 10 bytes @ 0x32
   460   000092                     	ds	10
   461   00009C                     getValue@decimalValue:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x3C
   465   00009C                     	ds	2
   466   00009E                     getValue@value1:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x3E
   470   00009E                     	ds	2
   471   0000A0                     getValue@value2:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x40
   475   0000A0                     	ds	2
   476   0000A2                     getValue@value3:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x42
   480   0000A2                     	ds	2
   481   0000A4                     getValue@value4:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x44
   485   0000A4                     	ds	2
   486   0000A6                     
   487                           ; 1 bytes @ 0x46
   488                           
   489                           	psect	cstackCOMRAM
   490   000001                     __pcstackCOMRAM:
   491                           	callstack 0
   492   000001                     ?i2_getKeypad:
   493                           	callstack 0
   494   000001                     ?i2___wmul:
   495                           	callstack 0
   496   000001                     ?i2___awdiv:
   497                           	callstack 0
   498   000001                     ?i2___awmod:
   499                           	callstack 0
   500   000001                     i2MSdelay@val:
   501                           	callstack 0
   502   000001                     i2___wmul@multiplier:
   503                           	callstack 0
   504   000001                     i2___awdiv@dividend:
   505                           	callstack 0
   506   000001                     i2___awmod@dividend:
   507                           	callstack 0
   508   000001                     i2fputc@c:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x0
   512   000001                     	ds	2
   513   000003                     i2fputc@fp:
   514                           	callstack 0
   515   000003                     i2MSdelay@i:
   516                           	callstack 0
   517   000003                     i2getKeypad@buttonNumber:
   518                           	callstack 0
   519   000003                     i2___wmul@multiplicand:
   520                           	callstack 0
   521   000003                     i2___awdiv@divisor:
   522                           	callstack 0
   523   000003                     i2___awmod@divisor:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x2
   527   000003                     	ds	1
   528   000004                     ??i2_fputc:
   529                           
   530                           ; 1 bytes @ 0x3
   531   000004                     	ds	1
   532   000005                     i2___awdiv@counter:
   533                           	callstack 0
   534   000005                     i2___awmod@counter:
   535                           	callstack 0
   536   000005                     i2MSdelay@j:
   537                           	callstack 0
   538   000005                     i2___wmul@product:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x4
   542   000005                     	ds	1
   543   000006                     i2___awdiv@sign:
   544                           	callstack 0
   545   000006                     i2___awmod@sign:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x5
   549   000006                     	ds	1
   550   000007                     ?i2_abs:
   551                           	callstack 0
   552   000007                     i2LCD_Command@cmd:
   553                           	callstack 0
   554   000007                     i2LCD_Char@dat:
   555                           	callstack 0
   556   000007                     i2___awdiv@quotient:
   557                           	callstack 0
   558   000007                     i2abs@a:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x6
   562   000007                     	ds	1
   563   000008                     i2LCD_String@msg:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x7
   567   000008                     	ds	1
   568   000009                     ??i2_abs:
   569                           
   570                           ; 1 bytes @ 0x8
   571   000009                     	ds	1
   572   00000A                     i2LCD_String_xy@pos:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x9
   576   00000A                     	ds	1
   577   00000B                     i2vfpfcnvrt@fp:
   578                           	callstack 0
   579   00000B                     i2LCD_String_xy@msg:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0xA
   583   00000B                     	ds	1
   584   00000C                     i2vfpfcnvrt@fmt:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0xB
   588   00000C                     	ds	1
   589   00000D                     i2LCD_String_xy@row:
   590                           	callstack 0
   591   00000D                     i2vfpfcnvrt@ap:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0xC
   595   00000D                     	ds	1
   596   00000E                     ??i2_vfpfcnvrt:
   597   00000E                     i2LCD_String_xy@location:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0xD
   601   00000E                     	ds	1
   602   00000F                     i2vfpfcnvrt@done:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0xE
   606   00000F                     	ds	1
   607   000010                     i2vfpfcnvrt@cp:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0xF
   611   000010                     	ds	1
   612   000011                     i2vfpfcnvrt@convarg:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x10
   616   000011                     	ds	4
   617   000015                     i2vfpfcnvrt@c:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x14
   621   000015                     	ds	1
   622   000016                     ?i2_vfprintf:
   623                           	callstack 0
   624   000016                     i2vfprintf@fp:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x15
   628   000016                     	ds	1
   629   000017                     i2vfprintf@fmt:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x16
   633   000017                     	ds	1
   634   000018                     i2vfprintf@ap:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x17
   638   000018                     	ds	1
   639   000019                     i2vfprintf@cfmt:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x18
   643   000019                     	ds	1
   644   00001A                     ?i2_sprintf:
   645                           	callstack 0
   646   00001A                     i2sprintf@s:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x19
   650   00001A                     	ds	1
   651   00001B                     i2sprintf@fmt:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x1A
   655   00001B                     	ds	3
   656   00001E                     i2sprintf@ap:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x1D
   660   00001E                     	ds	1
   661   00001F                     i2sprintf@f:
   662                           	callstack 0
   663                           
   664                           ; 12 bytes @ 0x1E
   665   00001F                     	ds	12
   666   00002B                     ?i2_getValue:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x2A
   670   00002B                     	ds	2
   671   00002D                     ??i2_getValue:
   672                           
   673                           ; 1 bytes @ 0x2C
   674   00002D                     	ds	6
   675   000033                     i2getValue@data:
   676                           	callstack 0
   677                           
   678                           ; 10 bytes @ 0x32
   679   000033                     	ds	10
   680   00003D                     i2getValue@decimalValue:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x3C
   684   00003D                     	ds	2
   685   00003F                     i2getValue@value1:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x3E
   689   00003F                     	ds	2
   690   000041                     i2getValue@value2:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x40
   694   000041                     	ds	2
   695   000043                     i2getValue@value3:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x42
   699   000043                     	ds	2
   700   000045                     i2getValue@value4:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x44
   704   000045                     	ds	2
   705   000047                     ??_INT0_ISR:
   706                           
   707                           ; 1 bytes @ 0x46
   708   000047                     	ds	6
   709                           
   710 ;;
   711 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   712 ;;
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 13 in file "main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   733 ;;Total ram usage:        0 bytes
   734 ;; Hardware stack levels required when called: 13
   735 ;; This function calls:
   736 ;;		_INTERRUPT_Initialize
   737 ;;		_LCD_Init
   738 ;;		_LCD_String_xy
   739 ;;		_getValue
   740 ;;		_initializeKeypad
   741 ;; This function is called by:
   742 ;;		Startup code after reset
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text0
   747   0053C2                     __ptext0:
   748                           	callstack 0
   749   0053C2                     _main:
   750                           	callstack 18
   751   0053C2                     
   752                           ;main.c: 14:     initializeKeypad();
   753   0053C2  EC25  F02B         	call	_initializeKeypad	;wreg free
   754   0053C6                     
   755                           ;main.c: 15:     LCD_Init();
   756   0053C6  EC68  F02A         	call	_LCD_Init	;wreg free
   757   0053CA                     
   758                           ;main.c: 16:     INTERRUPT_Initialize();
   759   0053CA  EC80  F02A         	call	_INTERRUPT_Initialize	;wreg free
   760   0053CE                     
   761                           ;main.c: 18:     LCD_String_xy(1,0,"Testing Keypad: ");
   762   0053CE  0E00               	movlw	0
   763   0053D0  0100               	movlb	0	; () banked
   764   0053D2  6F69               	movwf	LCD_String_xy@pos& (0+255),b
   765   0053D4  0E01               	movlw	low STR_9
   766   0053D6  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
   767   0053D8  516A               	movf	LCD_String_xy@msg& (0+255),w,b
   768   0053DA  A4D8               	btfss	status,2,c
   769   0053DC  0E20               	movlw	high __smallconst
   770   0053DE  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
   771   0053E0  0E01               	movlw	1
   772   0053E2  EC7F  F029         	call	_LCD_String_xy
   773   0053E6                     
   774                           ;main.c: 19:     userGuess = getValue();
   775   0053E6  EC59  F020         	call	_getValue	;wreg free
   776   0053EA  C08A  F0CA         	movff	?_getValue,_userGuess
   777   0053EE  C08B  F0CB         	movff	?_getValue+1,_userGuess+1
   778   0053F2                     l210:
   779   0053F2  EFF9  F029         	goto	l210
   780   0053F6  EF57  F020         	goto	start
   781   0053FA                     __end_of_main:
   782                           	callstack 0
   783                           
   784 ;; *************** function _initializeKeypad *****************
   785 ;; Defined at:
   786 ;;		line 18 in file "./keypad.h"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;                  1    wreg      void 
   793 ;; Registers used:
   794 ;;		wreg, status,2, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used: 1
   806 ;; Hardware stack levels required when called: 8
   807 ;; This function calls:
   808 ;;		_initializePORTA
   809 ;;		_initializePORTC
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text1
   816   00564A                     __ptext1:
   817                           	callstack 0
   818   00564A                     _initializeKeypad:
   819                           	callstack 22
   820   00564A                     
   821                           ;./keypad.h: 19:     initializePORTA();
   822   00564A  EC15  F02B         	call	_initializePORTA	;wreg free
   823   00564E                     
   824                           ;./keypad.h: 20:     initializePORTC();
   825   00564E  EC1F  F02B         	call	_initializePORTC	;wreg free
   826   005652  0012               	return		;funcret
   827   005654                     __end_of_initializeKeypad:
   828                           	callstack 0
   829                           
   830 ;; *************** function _initializePORTC *****************
   831 ;; Defined at:
   832 ;;		line 28 in file "./keypad.h"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		None
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; Hardware stack levels required when called: 7
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_initializeKeypad
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text2
   861   00563E                     __ptext2:
   862                           	callstack 0
   863   00563E                     _initializePORTC:
   864                           	callstack 22
   865   00563E                     
   866                           ;./keypad.h: 30:     PORTCbits.RC4 = 0;
   867   00563E  98CC               	bcf	204,4,c	;volatile
   868                           
   869                           ;./keypad.h: 31:     LATCbits.LATC4 = 0;
   870   005640  98BC               	bcf	188,4,c	;volatile
   871                           
   872                           ;./keypad.h: 32:     ANSELCbits.ANSELC4 = 0;
   873   005642  013A               	movlb	58	; () banked
   874   005644  9960               	bcf	96,4,b	;volatile
   875                           
   876                           ;./keypad.h: 33:     TRISCbits.TRISC4 = 1;
   877   005646  88C4               	bsf	196,4,c	;volatile
   878   005648                     
   879                           ; BSR set to: 58
   880   005648  0012               	return		;funcret
   881   00564A                     __end_of_initializePORTC:
   882                           	callstack 0
   883                           
   884 ;; *************** function _initializePORTA *****************
   885 ;; Defined at:
   886 ;;		line 22 in file "./keypad.h"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 7
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_initializeKeypad
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text3
   915   00562A                     __ptext3:
   916                           	callstack 0
   917   00562A                     _initializePORTA:
   918                           	callstack 22
   919   00562A                     
   920                           ;./keypad.h: 23:     PORTA = 0;
   921   00562A  0E00               	movlw	0
   922   00562C  6ECA               	movwf	202,c	;volatile
   923                           
   924                           ;./keypad.h: 24:     LATA = 0;
   925   00562E  0E00               	movlw	0
   926   005630  6EBA               	movwf	186,c	;volatile
   927                           
   928                           ;./keypad.h: 25:     ANSELA = 0;
   929   005632  0E00               	movlw	0
   930   005634  013A               	movlb	58	; () banked
   931   005636  6F40               	movwf	64,b	;volatile
   932                           
   933                           ;./keypad.h: 26:     TRISA = 0b11111000;
   934   005638  0EF8               	movlw	248
   935   00563A  6EC2               	movwf	194,c	;volatile
   936   00563C                     
   937                           ; BSR set to: 58
   938   00563C  0012               	return		;funcret
   939   00563E                     __end_of_initializePORTA:
   940                           	callstack 0
   941                           
   942 ;; *************** function _getValue *****************
   943 ;; Defined at:
   944 ;;		line 141 in file "./keypad.h"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  data           10   50[BANK0 ] unsigned char [10]
   949 ;;  value4          2   68[BANK0 ] int 
   950 ;;  value3          2   66[BANK0 ] int 
   951 ;;  value2          2   64[BANK0 ] int 
   952 ;;  value1          2   62[BANK0 ] int 
   953 ;;  decimalValue    2   60[BANK0 ] int 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  2   42[BANK0 ] int 
   956 ;; Registers used:
   957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   964 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   965 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   966 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   967 ;;Total ram usage:       28 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 12
   970 ;; This function calls:
   971 ;;		_LCD_String_xy
   972 ;;		___wmul
   973 ;;		_getKeypad
   974 ;;		_sprintf
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text4
   981   0040B2                     __ptext4:
   982                           	callstack 0
   983   0040B2                     _getValue:
   984                           	callstack 18
   985   0040B2                     
   986                           ;./keypad.h: 142:     int value1 = -1;
   987   0040B2  0100               	movlb	0	; () banked
   988   0040B4  699E               	setf	getValue@value1& (0+255),b
   989   0040B6  699F               	setf	(getValue@value1+1)& (0+255),b
   990                           
   991                           ;./keypad.h: 143:     int value2 = -1;
   992   0040B8  69A0               	setf	getValue@value2& (0+255),b
   993   0040BA  69A1               	setf	(getValue@value2+1)& (0+255),b
   994                           
   995                           ;./keypad.h: 144:     int value3 = -1;
   996   0040BC  69A2               	setf	getValue@value3& (0+255),b
   997   0040BE  69A3               	setf	(getValue@value3+1)& (0+255),b
   998                           
   999                           ;./keypad.h: 145:     int value4 = -1;
  1000   0040C0  69A4               	setf	getValue@value4& (0+255),b
  1001   0040C2  69A5               	setf	(getValue@value4+1)& (0+255),b
  1002   0040C4                     
  1003                           ; BSR set to: 0
  1004                           ;./keypad.h: 147:     char data[10];;./keypad.h: 149:     LCD_String_xy(2,0,"____");
  1005   0040C4  0E00               	movlw	0
  1006   0040C6  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1007   0040C8  0E40               	movlw	low STR_1
  1008   0040CA  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1009   0040CC  516A               	movf	LCD_String_xy@msg& (0+255),w,b
  1010   0040CE  A4D8               	btfss	status,2,c
  1011   0040D0  0E20               	movlw	high __smallconst
  1012   0040D2  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1013   0040D4  0E02               	movlw	2
  1014   0040D6  EC7F  F029         	call	_LCD_String_xy
  1015                           
  1016                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
  1017   0040DA  EF75  F020         	goto	l2262
  1018   0040DE                     l2260:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;./keypad.h: 152:             value1 = getKeypad();
  1022   0040DE  EC76  F022         	call	_getKeypad	;wreg free
  1023   0040E2  C060  F09E         	movff	?_getKeypad,getValue@value1
  1024   0040E6  C061  F09F         	movff	?_getKeypad+1,getValue@value1+1
  1025   0040EA                     l2262:
  1026                           
  1027                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
  1028   0040EA  0100               	movlb	0	; () banked
  1029   0040EC  BF9F               	btfsc	(getValue@value1+1)& (0+255),7,b
  1030   0040EE  EF7B  F020         	goto	u2521
  1031   0040F2  EF7D  F020         	goto	u2520
  1032   0040F6                     u2521:
  1033   0040F6  EF6F  F020         	goto	l2260
  1034   0040FA                     u2520:
  1035   0040FA                     
  1036                           ; BSR set to: 0
  1037   0040FA  BF9F               	btfsc	(getValue@value1+1)& (0+255),7,b
  1038   0040FC  EF8B  F020         	goto	u2530
  1039   004100  519F               	movf	(getValue@value1+1)& (0+255),w,b
  1040   004102  E107               	bnz	u2531
  1041   004104  0E0A               	movlw	10
  1042   004106  5D9E               	subwf	getValue@value1& (0+255),w,b
  1043   004108  B0D8               	btfsc	status,0,c
  1044   00410A  EF89  F020         	goto	u2531
  1045   00410E  EF8B  F020         	goto	u2530
  1046   004112                     u2531:
  1047   004112  EF6F  F020         	goto	l2260
  1048   004116                     u2530:
  1049   004116                     
  1050                           ; BSR set to: 0
  1051                           ;./keypad.h: 154:     sprintf(data,"%d",value1);
  1052   004116  0E92               	movlw	low getValue@data
  1053   004118  6F79               	movwf	sprintf@s& (0+255),b
  1054   00411A  0E45               	movlw	low STR_2
  1055   00411C  6F7A               	movwf	sprintf@fmt& (0+255),b
  1056   00411E  C09E  F07B         	movff	getValue@value1,?_sprintf+2
  1057   004122  C09F  F07C         	movff	getValue@value1+1,?_sprintf+3
  1058   004126  ECFD  F029         	call	_sprintf	;wreg free
  1059   00412A                     
  1060                           ;./keypad.h: 155:     LCD_String_xy(2,0,data);
  1061   00412A  0E00               	movlw	0
  1062   00412C  0100               	movlb	0	; () banked
  1063   00412E  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1064   004130  0E92               	movlw	low getValue@data
  1065   004132  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1066   004134  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  1067   004136  0E02               	movlw	2
  1068   004138  EC7F  F029         	call	_LCD_String_xy
  1069                           
  1070                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
  1071   00413C  EFA6  F020         	goto	l2272
  1072   004140                     l2270:
  1073                           
  1074                           ; BSR set to: 0
  1075                           ;./keypad.h: 158:         value2 = getKeypad();
  1076   004140  EC76  F022         	call	_getKeypad	;wreg free
  1077   004144  C060  F0A0         	movff	?_getKeypad,getValue@value2
  1078   004148  C061  F0A1         	movff	?_getKeypad+1,getValue@value2+1
  1079   00414C                     l2272:
  1080                           
  1081                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
  1082   00414C  0100               	movlb	0	; () banked
  1083   00414E  BFA1               	btfsc	(getValue@value2+1)& (0+255),7,b
  1084   004150  EFAC  F020         	goto	u2541
  1085   004154  EFAE  F020         	goto	u2540
  1086   004158                     u2541:
  1087   004158  EFA0  F020         	goto	l2270
  1088   00415C                     u2540:
  1089   00415C                     
  1090                           ; BSR set to: 0
  1091   00415C  BFA1               	btfsc	(getValue@value2+1)& (0+255),7,b
  1092   00415E  EFBC  F020         	goto	u2550
  1093   004162  51A1               	movf	(getValue@value2+1)& (0+255),w,b
  1094   004164  E107               	bnz	u2551
  1095   004166  0E0A               	movlw	10
  1096   004168  5DA0               	subwf	getValue@value2& (0+255),w,b
  1097   00416A  B0D8               	btfsc	status,0,c
  1098   00416C  EFBA  F020         	goto	u2551
  1099   004170  EFBC  F020         	goto	u2550
  1100   004174                     u2551:
  1101   004174  EFA0  F020         	goto	l2270
  1102   004178                     u2550:
  1103   004178                     
  1104                           ; BSR set to: 0
  1105                           ;./keypad.h: 160:     sprintf(data,"%d",value2);
  1106   004178  0E92               	movlw	low getValue@data
  1107   00417A  6F79               	movwf	sprintf@s& (0+255),b
  1108   00417C  0E45               	movlw	low STR_2
  1109   00417E  6F7A               	movwf	sprintf@fmt& (0+255),b
  1110   004180  C0A0  F07B         	movff	getValue@value2,?_sprintf+2
  1111   004184  C0A1  F07C         	movff	getValue@value2+1,?_sprintf+3
  1112   004188  ECFD  F029         	call	_sprintf	;wreg free
  1113   00418C                     
  1114                           ;./keypad.h: 161:     LCD_String_xy(2,1,data);
  1115   00418C  0E01               	movlw	1
  1116   00418E  0100               	movlb	0	; () banked
  1117   004190  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1118   004192  0E92               	movlw	low getValue@data
  1119   004194  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1120   004196  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  1121   004198  0E02               	movlw	2
  1122   00419A  EC7F  F029         	call	_LCD_String_xy
  1123                           
  1124                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
  1125   00419E  EFD7  F020         	goto	l2282
  1126   0041A2                     l2280:
  1127                           
  1128                           ; BSR set to: 0
  1129                           ;./keypad.h: 164:         value3 = getKeypad();
  1130   0041A2  EC76  F022         	call	_getKeypad	;wreg free
  1131   0041A6  C060  F0A2         	movff	?_getKeypad,getValue@value3
  1132   0041AA  C061  F0A3         	movff	?_getKeypad+1,getValue@value3+1
  1133   0041AE                     l2282:
  1134                           
  1135                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
  1136   0041AE  0100               	movlb	0	; () banked
  1137   0041B0  BFA3               	btfsc	(getValue@value3+1)& (0+255),7,b
  1138   0041B2  EFDD  F020         	goto	u2561
  1139   0041B6  EFDF  F020         	goto	u2560
  1140   0041BA                     u2561:
  1141   0041BA  EFD1  F020         	goto	l2280
  1142   0041BE                     u2560:
  1143   0041BE                     
  1144                           ; BSR set to: 0
  1145   0041BE  BFA3               	btfsc	(getValue@value3+1)& (0+255),7,b
  1146   0041C0  EFED  F020         	goto	u2570
  1147   0041C4  51A3               	movf	(getValue@value3+1)& (0+255),w,b
  1148   0041C6  E107               	bnz	u2571
  1149   0041C8  0E0A               	movlw	10
  1150   0041CA  5DA2               	subwf	getValue@value3& (0+255),w,b
  1151   0041CC  B0D8               	btfsc	status,0,c
  1152   0041CE  EFEB  F020         	goto	u2571
  1153   0041D2  EFED  F020         	goto	u2570
  1154   0041D6                     u2571:
  1155   0041D6  EFD1  F020         	goto	l2280
  1156   0041DA                     u2570:
  1157   0041DA                     
  1158                           ; BSR set to: 0
  1159                           ;./keypad.h: 166:     sprintf(data,"%d",value3);
  1160   0041DA  0E92               	movlw	low getValue@data
  1161   0041DC  6F79               	movwf	sprintf@s& (0+255),b
  1162   0041DE  0E45               	movlw	low STR_2
  1163   0041E0  6F7A               	movwf	sprintf@fmt& (0+255),b
  1164   0041E2  C0A2  F07B         	movff	getValue@value3,?_sprintf+2
  1165   0041E6  C0A3  F07C         	movff	getValue@value3+1,?_sprintf+3
  1166   0041EA  ECFD  F029         	call	_sprintf	;wreg free
  1167   0041EE                     
  1168                           ;./keypad.h: 167:     LCD_String_xy(2,2,data);
  1169   0041EE  0E02               	movlw	2
  1170   0041F0  0100               	movlb	0	; () banked
  1171   0041F2  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1172   0041F4  0E92               	movlw	low getValue@data
  1173   0041F6  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1174   0041F8  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  1175   0041FA  0E02               	movlw	2
  1176   0041FC  EC7F  F029         	call	_LCD_String_xy
  1177                           
  1178                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
  1179   004200  EF08  F021         	goto	l2292
  1180   004204                     l2290:
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;./keypad.h: 170:         value4 = getKeypad();
  1184   004204  EC76  F022         	call	_getKeypad	;wreg free
  1185   004208  C060  F0A4         	movff	?_getKeypad,getValue@value4
  1186   00420C  C061  F0A5         	movff	?_getKeypad+1,getValue@value4+1
  1187   004210                     l2292:
  1188                           
  1189                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
  1190   004210  0100               	movlb	0	; () banked
  1191   004212  BFA5               	btfsc	(getValue@value4+1)& (0+255),7,b
  1192   004214  EF0E  F021         	goto	u2581
  1193   004218  EF10  F021         	goto	u2580
  1194   00421C                     u2581:
  1195   00421C  EF02  F021         	goto	l2290
  1196   004220                     u2580:
  1197   004220                     
  1198                           ; BSR set to: 0
  1199   004220  BFA5               	btfsc	(getValue@value4+1)& (0+255),7,b
  1200   004222  EF1E  F021         	goto	u2590
  1201   004226  51A5               	movf	(getValue@value4+1)& (0+255),w,b
  1202   004228  E107               	bnz	u2591
  1203   00422A  0E0A               	movlw	10
  1204   00422C  5DA4               	subwf	getValue@value4& (0+255),w,b
  1205   00422E  B0D8               	btfsc	status,0,c
  1206   004230  EF1C  F021         	goto	u2591
  1207   004234  EF1E  F021         	goto	u2590
  1208   004238                     u2591:
  1209   004238  EF02  F021         	goto	l2290
  1210   00423C                     u2590:
  1211   00423C                     
  1212                           ; BSR set to: 0
  1213                           ;./keypad.h: 172:     sprintf(data,"%d",value4);
  1214   00423C  0E92               	movlw	low getValue@data
  1215   00423E  6F79               	movwf	sprintf@s& (0+255),b
  1216   004240  0E45               	movlw	low STR_2
  1217   004242  6F7A               	movwf	sprintf@fmt& (0+255),b
  1218   004244  C0A4  F07B         	movff	getValue@value4,?_sprintf+2
  1219   004248  C0A5  F07C         	movff	getValue@value4+1,?_sprintf+3
  1220   00424C  ECFD  F029         	call	_sprintf	;wreg free
  1221   004250                     
  1222                           ;./keypad.h: 173:     LCD_String_xy(2,3,data);
  1223   004250  0E03               	movlw	3
  1224   004252  0100               	movlb	0	; () banked
  1225   004254  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1226   004256  0E92               	movlw	low getValue@data
  1227   004258  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1228   00425A  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  1229   00425C  0E02               	movlw	2
  1230   00425E  EC7F  F029         	call	_LCD_String_xy
  1231   004262                     
  1232                           ;./keypad.h: 175:     decimalValue = (value1 * 1000)+(value2 * 100)+(value3 * 10) + (val
      +                          ue4);
  1233   004262  C09E  F060         	movff	getValue@value1,___wmul@multiplier
  1234   004266  C09F  F061         	movff	getValue@value1+1,___wmul@multiplier+1
  1235   00426A  0E03               	movlw	3
  1236   00426C  0100               	movlb	0	; () banked
  1237   00426E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1238   004270  0EE8               	movlw	232
  1239   004272  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1240   004274  EC97  F02A         	call	___wmul	;wreg free
  1241   004278  C060  F08C         	movff	?___wmul,??_getValue
  1242   00427C  C061  F08D         	movff	?___wmul+1,??_getValue+1
  1243   004280  C0A0  F060         	movff	getValue@value2,___wmul@multiplier
  1244   004284  C0A1  F061         	movff	getValue@value2+1,___wmul@multiplier+1
  1245   004288  0E00               	movlw	0
  1246   00428A  0100               	movlb	0	; () banked
  1247   00428C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1248   00428E  0E64               	movlw	100
  1249   004290  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1250   004292  EC97  F02A         	call	___wmul	;wreg free
  1251   004296  0100               	movlb	0	; () banked
  1252   004298  5160               	movf	?___wmul& (0+255),w,b
  1253   00429A  258C               	addwf	??_getValue& (0+255),w,b
  1254   00429C  6F8E               	movwf	(??_getValue+2)& (0+255),b
  1255   00429E  5161               	movf	(?___wmul+1)& (0+255),w,b
  1256   0042A0  218D               	addwfc	(??_getValue+1)& (0+255),w,b
  1257   0042A2  6F8F               	movwf	(??_getValue+3)& (0+255),b
  1258   0042A4  C0A2  F060         	movff	getValue@value3,___wmul@multiplier
  1259   0042A8  C0A3  F061         	movff	getValue@value3+1,___wmul@multiplier+1
  1260   0042AC  0E00               	movlw	0
  1261   0042AE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1262   0042B0  0E0A               	movlw	10
  1263   0042B2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1264   0042B4  EC97  F02A         	call	___wmul	;wreg free
  1265   0042B8  0100               	movlb	0	; () banked
  1266   0042BA  5160               	movf	?___wmul& (0+255),w,b
  1267   0042BC  258E               	addwf	(??_getValue+2)& (0+255),w,b
  1268   0042BE  6F90               	movwf	(??_getValue+4)& (0+255),b
  1269   0042C0  5161               	movf	(?___wmul+1)& (0+255),w,b
  1270   0042C2  218F               	addwfc	(??_getValue+3)& (0+255),w,b
  1271   0042C4  6F91               	movwf	(??_getValue+5)& (0+255),b
  1272   0042C6  51A4               	movf	getValue@value4& (0+255),w,b
  1273   0042C8  2590               	addwf	(??_getValue+4)& (0+255),w,b
  1274   0042CA  6F9C               	movwf	getValue@decimalValue& (0+255),b
  1275   0042CC  51A5               	movf	(getValue@value4+1)& (0+255),w,b
  1276   0042CE  2191               	addwfc	(??_getValue+5)& (0+255),w,b
  1277   0042D0  6F9D               	movwf	(getValue@decimalValue+1)& (0+255),b
  1278   0042D2                     
  1279                           ; BSR set to: 0
  1280                           ;./keypad.h: 176:     return decimalValue;
  1281   0042D2  C09C  F08A         	movff	getValue@decimalValue,?_getValue
  1282   0042D6  C09D  F08B         	movff	getValue@decimalValue+1,?_getValue+1
  1283   0042DA                     
  1284                           ; BSR set to: 0
  1285   0042DA  0012               	return		;funcret
  1286   0042DC                     __end_of_getValue:
  1287                           	callstack 0
  1288                           
  1289 ;; *************** function _sprintf *****************
  1290 ;; Defined at:
  1291 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  s               1   25[BANK0 ] PTR unsigned char 
  1294 ;;		 -> getValue@data(10), 
  1295 ;;  fmt             1   26[BANK0 ] PTR const unsigned char 
  1296 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  f              12   30[BANK0 ] struct _IO_FILE
  1299 ;;  ret             2    0        int 
  1300 ;;  ap              1   29[BANK0 ] PTR void [1]
  1301 ;;		 -> ?_sprintf(2), 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  2   25[BANK0 ] int 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1312 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1314 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1315 ;;Total ram usage:       17 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 11
  1318 ;; This function calls:
  1319 ;;		_vfprintf
  1320 ;; This function is called by:
  1321 ;;		_getValue
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text5
  1326   0053FA                     __ptext5:
  1327                           	callstack 0
  1328   0053FA                     _sprintf:
  1329                           	callstack 18
  1330   0053FA  0E7B               	movlw	low (?_sprintf+2)
  1331   0053FC  0100               	movlb	0	; () banked
  1332   0053FE  6F7D               	movwf	sprintf@ap& (0+255),b
  1333   005400  C079  F07E         	movff	sprintf@s,sprintf@f
  1334   005404                     
  1335                           ; BSR set to: 0
  1336   005404  0E00               	movlw	0
  1337   005406  6F82               	movwf	(sprintf@f+4)& (0+255),b
  1338   005408  0E00               	movlw	0
  1339   00540A  6F81               	movwf	(sprintf@f+3)& (0+255),b
  1340   00540C                     
  1341                           ; BSR set to: 0
  1342   00540C  0E00               	movlw	0
  1343   00540E  6F89               	movwf	(sprintf@f+11)& (0+255),b
  1344   005410  0E00               	movlw	0
  1345   005412  6F88               	movwf	(sprintf@f+10)& (0+255),b
  1346   005414                     
  1347                           ; BSR set to: 0
  1348   005414  0E7E               	movlw	low sprintf@f
  1349   005416  6F75               	movwf	vfprintf@fp& (0+255),b
  1350   005418  C07A  F076         	movff	sprintf@fmt,vfprintf@fmt
  1351   00541C  0E7D               	movlw	low sprintf@ap
  1352   00541E  6F77               	movwf	vfprintf@ap& (0+255),b
  1353   005420  EC5D  F029         	call	_vfprintf	;wreg free
  1354   005424  0100               	movlb	0	; () banked
  1355   005426  5179               	movf	sprintf@s& (0+255),w,b
  1356   005428  2581               	addwf	(sprintf@f+3)& (0+255),w,b
  1357   00542A  6ED9               	movwf	fsr2l,c
  1358   00542C  6ADA               	clrf	fsr2h,c
  1359   00542E  6ADF               	clrf	indf2,c
  1360   005430                     
  1361                           ; BSR set to: 0
  1362   005430  0012               	return		;funcret
  1363   005432                     __end_of_sprintf:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _vfprintf *****************
  1367 ;; Defined at:
  1368 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  fp              1   21[BANK0 ] PTR struct _IO_FILE
  1371 ;;		 -> sprintf@f(12), 
  1372 ;;  fmt             1   22[BANK0 ] PTR const unsigned char 
  1373 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1374 ;;  ap              1   23[BANK0 ] PTR PTR void 
  1375 ;;		 -> sprintf@ap(1), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  cfmt            1   24[BANK0 ] PTR unsigned char 
  1378 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2   21[BANK0 ] int 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1388 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1391 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1392 ;;Total ram usage:        4 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 10
  1395 ;; This function calls:
  1396 ;;		_vfpfcnvrt
  1397 ;; This function is called by:
  1398 ;;		_sprintf
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text6
  1403   0052BA                     __ptext6:
  1404                           	callstack 0
  1405   0052BA                     _vfprintf:
  1406                           	callstack 18
  1407   0052BA                     
  1408                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1409   0052BA  C076  F078         	movff	vfprintf@fmt,vfprintf@cfmt
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1412   0052BE  EF6A  F029         	goto	l2076
  1413   0052C2                     l2074:
  1414                           
  1415                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1416   0052C2  C075  F06A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1417   0052C6  0E78               	movlw	low vfprintf@cfmt
  1418   0052C8  0100               	movlb	0	; () banked
  1419   0052CA  6F6B               	movwf	vfpfcnvrt@fmt& (0+255),b
  1420   0052CC  C077  F06C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1421   0052D0  EC67  F023         	call	_vfpfcnvrt	;wreg free
  1422   0052D4                     l2076:
  1423                           
  1424                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1425   0052D4  0060  F1E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  1426   0052DA                     	if	1	;There is more than 1 active tblptr byte
  1427   0052DA  0E20               	movlw	high __smallconst
  1428   0052DC  6EF7               	movwf	tblptrh,c
  1429   0052DE                     	endif
  1430   0052DE                     	if	0	;tblptru may be non-zero
  1431   0052DE                     	endif
  1432   0052DE                     	if	0	;tblptru may be non-zero
  1433   0052DE                     	endif
  1434   0052DE  0008               	tblrd		*
  1435   0052E0  50F5               	movf	tablat,w,c
  1436   0052E2  0900               	iorlw	0
  1437   0052E4  A4D8               	btfss	status,2,c
  1438   0052E6  EF77  F029         	goto	u1971
  1439   0052EA  EF79  F029         	goto	u1970
  1440   0052EE                     u1971:
  1441   0052EE  EF61  F029         	goto	l2074
  1442   0052F2                     u1970:
  1443   0052F2                     
  1444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1445   0052F2  0E00               	movlw	0
  1446   0052F4  0100               	movlb	0	; () banked
  1447   0052F6  6F76               	movwf	(?_vfprintf+1)& (0+255),b
  1448   0052F8  0E00               	movlw	0
  1449   0052FA  6F75               	movwf	?_vfprintf& (0+255),b
  1450   0052FC                     
  1451                           ; BSR set to: 0
  1452   0052FC  0012               	return		;funcret
  1453   0052FE                     __end_of_vfprintf:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _vfpfcnvrt *****************
  1457 ;; Defined at:
  1458 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  1461 ;;		 -> sprintf@f(12), 
  1462 ;;  fmt             1   11[BANK0 ] PTR PTR unsigned char 
  1463 ;;		 -> vfprintf@cfmt(1), 
  1464 ;;  ap              1   12[BANK0 ] PTR PTR void 
  1465 ;;		 -> sprintf@ap(1), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  convarg         4   16[BANK0 ] struct .
  1468 ;;  c               1   20[BANK0 ] unsigned char 
  1469 ;;  cp              1   15[BANK0 ] PTR unsigned char 
  1470 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  1471 ;;  done            1   14[BANK0 ] _Bool 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1481 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1482 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1484 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1485 ;;Total ram usage:       11 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; Hardware stack levels required when called: 9
  1488 ;; This function calls:
  1489 ;;		___awdiv
  1490 ;;		___awmod
  1491 ;;		_abs
  1492 ;;		_fputc
  1493 ;; This function is called by:
  1494 ;;		_vfprintf
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text7
  1499   0046CE                     __ptext7:
  1500                           	callstack 0
  1501   0046CE                     _vfpfcnvrt:
  1502                           	callstack 18
  1503   0046CE                     
  1504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1505   0046CE  0100               	movlb	0	; () banked
  1506   0046D0  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1507   0046D2  6ED9               	movwf	fsr2l,c
  1508   0046D4  6ADA               	clrf	fsr2h,c
  1509   0046D6  006F FF7F FFF6     	movff	indf2,tblptrl
  1510   0046DC                     	if	1	;There is more than 1 active tblptr byte
  1511   0046DC  0E20               	movlw	high __smallconst
  1512   0046DE  6EF7               	movwf	tblptrh,c
  1513   0046E0                     	endif
  1514   0046E0                     	if	0	;tblptru may be non-zero
  1515   0046E0                     	endif
  1516   0046E0                     	if	0	;tblptru may be non-zero
  1517   0046E0                     	endif
  1518   0046E0  0008               	tblrd		*
  1519   0046E2  50F5               	movf	tablat,w,c
  1520   0046E4  0A25               	xorlw	37
  1521   0046E6  A4D8               	btfss	status,2,c
  1522   0046E8  EF78  F023         	goto	u1741
  1523   0046EC  EF7A  F023         	goto	u1740
  1524   0046F0                     u1741:
  1525   0046F0  EF3B  F024         	goto	l1984
  1526   0046F4                     u1740:
  1527   0046F4                     
  1528                           ; BSR set to: 0
  1529                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1530   0046F4  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1531   0046F6  6ED9               	movwf	fsr2l,c
  1532   0046F8  6ADA               	clrf	fsr2h,c
  1533   0046FA  2ADF               	incf	indf2,f,c
  1534   0046FC                     
  1535                           ; BSR set to: 0
  1536                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1537   0046FC  0E00               	movlw	0
  1538   0046FE  6FC7               	movwf	(_width+1)& (0+255),b
  1539   004700  0E00               	movlw	0
  1540   004702  6FC6               	movwf	_width& (0+255),b
  1541   004704  C0C6  F0CC         	movff	_width,_flags
  1542   004708                     
  1543                           ; BSR set to: 0
  1544                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1545   004708  69C8               	setf	_prec& (0+255),b
  1546   00470A  69C9               	setf	(_prec+1)& (0+255),b
  1547   00470C                     
  1548                           ; BSR set to: 0
  1549                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1550   00470C  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1551   00470E  6ED9               	movwf	fsr2l,c
  1552   004710  6ADA               	clrf	fsr2h,c
  1553   004712  50DF               	movf	indf2,w,c
  1554   004714  6F6F               	movwf	vfpfcnvrt@cp& (0+255),b
  1555   004716                     
  1556                           ; BSR set to: 0
  1557                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1558   004716  0060  F1BF  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1559   00471C                     	if	1	;There is more than 1 active tblptr byte
  1560   00471C  0E20               	movlw	high __smallconst
  1561   00471E  6EF7               	movwf	tblptrh,c
  1562   004720                     	endif
  1563   004720                     	if	0	;tblptru may be non-zero
  1564   004720                     	endif
  1565   004720                     	if	0	;tblptru may be non-zero
  1566   004720                     	endif
  1567   004720  0008               	tblrd		*
  1568   004722  50F5               	movf	tablat,w,c
  1569   004724  0A64               	xorlw	100
  1570   004726  B4D8               	btfsc	status,2,c
  1571   004728  EF98  F023         	goto	u1751
  1572   00472C  EF9A  F023         	goto	u1750
  1573   004730                     u1751:
  1574   004730  EFA9  F023         	goto	l1954
  1575   004734                     u1750:
  1576   004734                     
  1577                           ; BSR set to: 0
  1578   004734  0060  F1BF  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1579   00473A                     	if	1	;There is more than 1 active tblptr byte
  1580   00473A  0E20               	movlw	high __smallconst
  1581   00473C  6EF7               	movwf	tblptrh,c
  1582   00473E                     	endif
  1583   00473E                     	if	0	;tblptru may be non-zero
  1584   00473E                     	endif
  1585   00473E                     	if	0	;tblptru may be non-zero
  1586   00473E                     	endif
  1587   00473E  0008               	tblrd		*
  1588   004740  50F5               	movf	tablat,w,c
  1589   004742  0A69               	xorlw	105
  1590   004744  A4D8               	btfss	status,2,c
  1591   004746  EFA7  F023         	goto	u1761
  1592   00474A  EFA9  F023         	goto	u1760
  1593   00474E                     u1761:
  1594   00474E  EF34  F024         	goto	l1980
  1595   004752                     u1760:
  1596   004752                     l1954:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1600   004752  516C               	movf	vfpfcnvrt@ap& (0+255),w,b
  1601   004754  6ED9               	movwf	fsr2l,c
  1602   004756  6ADA               	clrf	fsr2h,c
  1603   004758  0E02               	movlw	2
  1604   00475A  26DF               	addwf	indf2,f,c
  1605   00475C  5CDF               	subwf	indf2,w,c
  1606   00475E  6ED9               	movwf	fsr2l,c
  1607   004760  6ADA               	clrf	fsr2h,c
  1608   004762  006F FF78  F070    	movff	postinc2,vfpfcnvrt@convarg
  1609   004768  006F FF78  F071    	movff	postinc2,vfpfcnvrt@convarg+1
  1610   00476E                     
  1611                           ; BSR set to: 0
  1612                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1613   00476E  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1614   004770  6ED9               	movwf	fsr2l,c
  1615   004772  6ADA               	clrf	fsr2h,c
  1616   004774  296F               	incf	vfpfcnvrt@cp& (0+255),w,b
  1617   004776  6EDF               	movwf	indf2,c
  1618   004778                     
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1621   004778  0E20               	movlw	32
  1622   00477A  6F74               	movwf	vfpfcnvrt@c& (0+255),b
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1625   00477C  BF71               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1626   00477E  EFC3  F023         	goto	u1771
  1627   004782  EFC6  F023         	goto	u1770
  1628   004786                     u1771:
  1629   004786  0E01               	movlw	1
  1630   004788  EFC7  F023         	goto	u1780
  1631   00478C                     u1770:
  1632   00478C  0E00               	movlw	0
  1633   00478E                     u1780:
  1634   00478E  6F6E               	movwf	vfpfcnvrt@done& (0+255),b
  1635   004790                     l1960:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1639   004790  0774               	decf	vfpfcnvrt@c& (0+255),f,b
  1640   004792  5174               	movf	vfpfcnvrt@c& (0+255),w,b
  1641   004794  0FA6               	addlw	low _dbuf
  1642   004796  6ED9               	movwf	fsr2l,c
  1643   004798  6ADA               	clrf	fsr2h,c
  1644   00479A  C070  F060         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1645   00479E  C071  F061         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1646   0047A2  0E00               	movlw	0
  1647   0047A4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  1648   0047A6  0E0A               	movlw	10
  1649   0047A8  6F62               	movwf	___awmod@divisor& (0+255),b
  1650   0047AA  EC41  F027         	call	___awmod	;wreg free
  1651   0047AE  C060  F066         	movff	?___awmod,abs@a
  1652   0047B2  C061  F067         	movff	?___awmod+1,abs@a+1
  1653   0047B6  EC19  F02A         	call	_abs	;wreg free
  1654   0047BA  0100               	movlb	0	; () banked
  1655   0047BC  5166               	movf	?_abs& (0+255),w,b
  1656   0047BE  0F30               	addlw	48
  1657   0047C0  6EDF               	movwf	indf2,c
  1658   0047C2                     
  1659                           ; BSR set to: 0
  1660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1661   0047C2  C070  F060         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1662   0047C6  C071  F061         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1663   0047CA  0E00               	movlw	0
  1664   0047CC  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1665   0047CE  0E0A               	movlw	10
  1666   0047D0  6F62               	movwf	___awdiv@divisor& (0+255),b
  1667   0047D2  EC7C  F026         	call	___awdiv	;wreg free
  1668   0047D6  C060  F070         	movff	?___awdiv,vfpfcnvrt@convarg
  1669   0047DA  C061  F071         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1670   0047DE                     
  1671                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1672   0047DE  0100               	movlb	0	; () banked
  1673   0047E0  5170               	movf	vfpfcnvrt@convarg& (0+255),w,b
  1674   0047E2  1171               	iorwf	(vfpfcnvrt@convarg+1)& (0+255),w,b
  1675   0047E4  B4D8               	btfsc	status,2,c
  1676   0047E6  EFF7  F023         	goto	u1791
  1677   0047EA  EFF9  F023         	goto	u1790
  1678   0047EE                     u1791:
  1679   0047EE  EF01  F024         	goto	l1968
  1680   0047F2                     u1790:
  1681   0047F2                     
  1682                           ; BSR set to: 0
  1683   0047F2  5174               	movf	vfpfcnvrt@c& (0+255),w,b
  1684   0047F4  A4D8               	btfss	status,2,c
  1685   0047F6  EFFF  F023         	goto	u1801
  1686   0047FA  EF01  F024         	goto	u1800
  1687   0047FE                     u1801:
  1688   0047FE  EFC8  F023         	goto	l1960
  1689   004802                     u1800:
  1690   004802                     l1968:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1694   004802  5174               	movf	vfpfcnvrt@c& (0+255),w,b
  1695   004804  B4D8               	btfsc	status,2,c
  1696   004806  EF07  F024         	goto	u1811
  1697   00480A  EF09  F024         	goto	u1810
  1698   00480E                     u1811:
  1699   00480E  EF29  F024         	goto	l1978
  1700   004812                     u1810:
  1701   004812                     
  1702                           ; BSR set to: 0
  1703   004812  516E               	movf	vfpfcnvrt@done& (0+255),w,b
  1704   004814  B4D8               	btfsc	status,2,c
  1705   004816  EF0F  F024         	goto	u1821
  1706   00481A  EF11  F024         	goto	u1820
  1707   00481E                     u1821:
  1708   00481E  EF29  F024         	goto	l1978
  1709   004822                     u1820:
  1710   004822                     
  1711                           ; BSR set to: 0
  1712                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1713   004822  0774               	decf	vfpfcnvrt@c& (0+255),f,b
  1714   004824  5174               	movf	vfpfcnvrt@c& (0+255),w,b
  1715   004826  0FA6               	addlw	low _dbuf
  1716   004828  6ED9               	movwf	fsr2l,c
  1717   00482A  6ADA               	clrf	fsr2h,c
  1718   00482C  0E2D               	movlw	45
  1719   00482E  6EDF               	movwf	indf2,c
  1720   004830  EF29  F024         	goto	l1978
  1721   004834                     l1974:
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1725   004834  5174               	movf	vfpfcnvrt@c& (0+255),w,b
  1726   004836  0FA6               	addlw	low _dbuf
  1727   004838  6ED9               	movwf	fsr2l,c
  1728   00483A  6ADA               	clrf	fsr2h,c
  1729   00483C  50DF               	movf	indf2,w,c
  1730   00483E  6F6D               	movwf	??_vfpfcnvrt& (0+255),b
  1731   004840  516D               	movf	??_vfpfcnvrt& (0+255),w,b
  1732   004842  6F60               	movwf	fputc@c& (0+255),b
  1733   004844  6B61               	clrf	(fputc@c+1)& (0+255),b
  1734   004846  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  1735   00484A  ECF2  F027         	call	_fputc	;wreg free
  1736   00484E  0100               	movlb	0	; () banked
  1737   004850  2B74               	incf	vfpfcnvrt@c& (0+255),f,b
  1738   004852                     l1978:
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1742   004852  0E20               	movlw	32
  1743   004854  1974               	xorwf	vfpfcnvrt@c& (0+255),w,b
  1744   004856  A4D8               	btfss	status,2,c
  1745   004858  EF30  F024         	goto	u1831
  1746   00485C  EF32  F024         	goto	u1830
  1747   004860                     u1831:
  1748   004860  EF1A  F024         	goto	l1974
  1749   004864                     u1830:
  1750   004864  EF4D  F024         	goto	l932
  1751   004868                     l1980:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1754   004868  0100               	movlb	0	; () banked
  1755   00486A  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1756   00486C  6ED9               	movwf	fsr2l,c
  1757   00486E  6ADA               	clrf	fsr2h,c
  1758   004870  2ADF               	incf	indf2,f,c
  1759   004872  EF4D  F024         	goto	l932
  1760   004876                     l1984:
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1764   004876  516B               	movf	vfpfcnvrt@fmt& (0+255),w,b
  1765   004878  6ED9               	movwf	fsr2l,c
  1766   00487A  6ADA               	clrf	fsr2h,c
  1767   00487C  006F FF7F FFF6     	movff	indf2,tblptrl
  1768   004882                     	if	1	;There is more than 1 active tblptr byte
  1769   004882  0E20               	movlw	high __smallconst
  1770   004884  6EF7               	movwf	tblptrh,c
  1771   004886                     	endif
  1772   004886                     	if	0	;tblptru may be non-zero
  1773   004886                     	endif
  1774   004886                     	if	0	;tblptru may be non-zero
  1775   004886                     	endif
  1776   004886  0008               	tblrd		*
  1777   004888  50F5               	movf	tablat,w,c
  1778   00488A  6F60               	movwf	fputc@c& (0+255),b
  1779   00488C  6B61               	clrf	(fputc@c+1)& (0+255),b
  1780   00488E  C06A  F062         	movff	vfpfcnvrt@fp,fputc@fp
  1781   004892  ECF2  F027         	call	_fputc	;wreg free
  1782   004896  EF34  F024         	goto	l1980
  1783   00489A                     l932:
  1784                           
  1785                           ; BSR set to: 0
  1786   00489A  0012               	return		;funcret
  1787   00489C                     __end_of_vfpfcnvrt:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _fputc *****************
  1791 ;; Defined at:
  1792 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  c               2    0[BANK0 ] int 
  1795 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  1796 ;;		 -> sprintf@f(12), 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2    0[BANK0 ] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1808 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1810 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1811 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1812 ;;Total ram usage:        8 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 8
  1815 ;; This function calls:
  1816 ;;		_putch
  1817 ;; This function is called by:
  1818 ;;		_vfpfcnvrt
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text8
  1823   004FE4                     __ptext8:
  1824                           	callstack 0
  1825   004FE4                     _fputc:
  1826                           	callstack 18
  1827   004FE4  0100               	movlb	0	; () banked
  1828   004FE6  5162               	movf	fputc@fp& (0+255),w,b
  1829   004FE8  B4D8               	btfsc	status,2,c
  1830   004FEA  EFF9  F027         	goto	u1501
  1831   004FEE  EFFB  F027         	goto	u1500
  1832   004FF2                     u1501:
  1833   004FF2  EF03  F028         	goto	l1800
  1834   004FF6                     u1500:
  1835   004FF6                     
  1836                           ; BSR set to: 0
  1837   004FF6  5162               	movf	fputc@fp& (0+255),w,b
  1838   004FF8  A4D8               	btfss	status,2,c
  1839   004FFA  EF01  F028         	goto	u1511
  1840   004FFE  EF03  F028         	goto	u1510
  1841   005002                     u1511:
  1842   005002  EF08  F028         	goto	l1802
  1843   005006                     u1510:
  1844   005006                     l1800:
  1845                           
  1846                           ; BSR set to: 0
  1847   005006  5160               	movf	fputc@c& (0+255),w,b
  1848   005008  EC2E  F02B         	call	_putch
  1849   00500C  EF48  F028         	goto	l957
  1850   005010                     l1802:
  1851                           
  1852                           ; BSR set to: 0
  1853   005010  5162               	movf	fputc@fp& (0+255),w,b
  1854   005012  6ED9               	movwf	fsr2l,c
  1855   005014  6ADA               	clrf	fsr2h,c
  1856   005016  0E0A               	movlw	10
  1857   005018  26D9               	addwf	fsr2l,f,c
  1858   00501A  50DE               	movf	postinc2,w,c
  1859   00501C  10DE               	iorwf	postinc2,w,c
  1860   00501E  B4D8               	btfsc	status,2,c
  1861   005020  EF14  F028         	goto	u1521
  1862   005024  EF16  F028         	goto	u1520
  1863   005028                     u1521:
  1864   005028  EF2F  F028         	goto	l1806
  1865   00502C                     u1520:
  1866   00502C                     
  1867                           ; BSR set to: 0
  1868   00502C  5162               	movf	fputc@fp& (0+255),w,b
  1869   00502E  6ED9               	movwf	fsr2l,c
  1870   005030  6ADA               	clrf	fsr2h,c
  1871   005032  0E0A               	movlw	10
  1872   005034  26D9               	addwf	fsr2l,f,c
  1873   005036  5162               	movf	fputc@fp& (0+255),w,b
  1874   005038  6EE1               	movwf	fsr1l,c
  1875   00503A  6AE2               	clrf	fsr1h,c
  1876   00503C  0E03               	movlw	3
  1877   00503E  26E1               	addwf	fsr1l,f,c
  1878   005040  50DE               	movf	postinc2,w,c
  1879   005042  5CE6               	subwf	postinc1,w,c
  1880   005044  50E6               	movf	postinc1,w,c
  1881   005046  0A80               	xorlw	128
  1882   005048  6F67               	movwf	(??_fputc+4)& (0+255),b
  1883   00504A  50DE               	movf	postinc2,w,c
  1884   00504C  0A80               	xorlw	128
  1885   00504E  5967               	subwfb	(??_fputc+4)& (0+255),w,b
  1886   005050  B0D8               	btfsc	status,0,c
  1887   005052  EF2D  F028         	goto	u1531
  1888   005056  EF2F  F028         	goto	u1530
  1889   00505A                     u1531:
  1890   00505A  EF48  F028         	goto	l957
  1891   00505E                     u1530:
  1892   00505E                     l1806:
  1893                           
  1894                           ; BSR set to: 0
  1895   00505E  5162               	movf	fputc@fp& (0+255),w,b
  1896   005060  6ED9               	movwf	fsr2l,c
  1897   005062  6ADA               	clrf	fsr2h,c
  1898   005064  0E03               	movlw	3
  1899   005066  26D9               	addwf	fsr2l,f,c
  1900   005068  50DF               	movf	indf2,w,c
  1901   00506A  6F63               	movwf	??_fputc& (0+255),b
  1902   00506C  5162               	movf	fputc@fp& (0+255),w,b
  1903   00506E  6ED9               	movwf	fsr2l,c
  1904   005070  6ADA               	clrf	fsr2h,c
  1905   005072  50DF               	movf	indf2,w,c
  1906   005074  2563               	addwf	??_fputc& (0+255),w,b
  1907   005076  6ED9               	movwf	fsr2l,c
  1908   005078  6ADA               	clrf	fsr2h,c
  1909   00507A  0060  F183  FFDF   	movff	fputc@c,indf2
  1910   005080  5162               	movf	fputc@fp& (0+255),w,b
  1911   005082  6ED9               	movwf	fsr2l,c
  1912   005084  6ADA               	clrf	fsr2h,c
  1913   005086  0E03               	movlw	3
  1914   005088  26D9               	addwf	fsr2l,f,c
  1915   00508A  2ADE               	incf	postinc2,f,c
  1916   00508C  0E00               	movlw	0
  1917   00508E  22DD               	addwfc	postdec2,f,c
  1918   005090                     l957:
  1919   005090  0012               	return		;funcret
  1920   005092                     __end_of_fputc:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _putch *****************
  1924 ;; Defined at:
  1925 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  c               1    wreg     unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  c               1    0[COMRAM] unsigned char 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 7
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_fputc
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text9
  1954   00565C                     __ptext9:
  1955                           	callstack 0
  1956   00565C                     _putch:
  1957                           	callstack 18
  1958   00565C  0012               	return		;funcret
  1959   00565E                     __end_of_putch:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _abs *****************
  1963 ;; Defined at:
  1964 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  a               2    6[BANK0 ] int 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  2    6[BANK0 ] int 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1981 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1982 ;;Total ram usage:        4 bytes
  1983 ;; Hardware stack levels used: 1
  1984 ;; Hardware stack levels required when called: 7
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_vfpfcnvrt
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text10
  1993   005432                     __ptext10:
  1994                           	callstack 0
  1995   005432                     _abs:
  1996                           	callstack 19
  1997   005432  0100               	movlb	0	; () banked
  1998   005434  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  1999   005436  EF1F  F02A         	goto	u1541
  2000   00543A  EF21  F02A         	goto	u1540
  2001   00543E                     u1541:
  2002   00543E  EF27  F02A         	goto	l942
  2003   005442                     u1540:
  2004   005442                     
  2005                           ; BSR set to: 0
  2006   005442  C066  F066         	movff	abs@a,?_abs
  2007   005446  C067  F067         	movff	abs@a+1,?_abs+1
  2008   00544A  EF33  F02A         	goto	l945
  2009   00544E                     l942:
  2010                           
  2011                           ; BSR set to: 0
  2012   00544E  C066  F068         	movff	abs@a,??_abs
  2013   005452  C067  F069         	movff	abs@a+1,??_abs+1
  2014   005456  1F68               	comf	??_abs& (0+255),f,b
  2015   005458  1F69               	comf	(??_abs+1)& (0+255),f,b
  2016   00545A  4B68               	infsnz	??_abs& (0+255),f,b
  2017   00545C  2B69               	incf	(??_abs+1)& (0+255),f,b
  2018   00545E  C068  F066         	movff	??_abs,?_abs
  2019   005462  C069  F067         	movff	??_abs+1,?_abs+1
  2020   005466                     l945:
  2021                           
  2022                           ; BSR set to: 0
  2023   005466  0012               	return		;funcret
  2024   005468                     __end_of_abs:
  2025                           	callstack 0
  2026                           
  2027 ;; *************** function ___awmod *****************
  2028 ;; Defined at:
  2029 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  dividend        2    0[BANK0 ] int 
  2032 ;;  divisor         2    2[BANK0 ] int 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  sign            1    5[BANK0 ] unsigned char 
  2035 ;;  counter         1    4[BANK0 ] unsigned char 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2    0[BANK0 ] int 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2045 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2046 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2048 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2049 ;;Total ram usage:        6 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; Hardware stack levels required when called: 7
  2052 ;; This function calls:
  2053 ;;		Nothing
  2054 ;; This function is called by:
  2055 ;;		_vfpfcnvrt
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text11
  2060   004E82                     __ptext11:
  2061                           	callstack 0
  2062   004E82                     ___awmod:
  2063                           	callstack 19
  2064   004E82  0E00               	movlw	0
  2065   004E84  0100               	movlb	0	; () banked
  2066   004E86  6F65               	movwf	___awmod@sign& (0+255),b
  2067   004E88                     
  2068                           ; BSR set to: 0
  2069   004E88  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2070   004E8A  EF4B  F027         	goto	u1440
  2071   004E8E  EF49  F027         	goto	u1441
  2072   004E92                     u1441:
  2073   004E92  EF51  F027         	goto	l1768
  2074   004E96                     u1440:
  2075   004E96                     
  2076                           ; BSR set to: 0
  2077   004E96  6D60               	negf	___awmod@dividend& (0+255),b
  2078   004E98  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2079   004E9A  B0D8               	btfsc	status,0,c
  2080   004E9C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2081   004E9E                     
  2082                           ; BSR set to: 0
  2083   004E9E  0E01               	movlw	1
  2084   004EA0  6F65               	movwf	___awmod@sign& (0+255),b
  2085   004EA2                     l1768:
  2086                           
  2087                           ; BSR set to: 0
  2088   004EA2  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2089   004EA4  EF58  F027         	goto	u1450
  2090   004EA8  EF56  F027         	goto	u1451
  2091   004EAC                     u1451:
  2092   004EAC  EF5C  F027         	goto	l1772
  2093   004EB0                     u1450:
  2094   004EB0                     
  2095                           ; BSR set to: 0
  2096   004EB0  6D62               	negf	___awmod@divisor& (0+255),b
  2097   004EB2  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  2098   004EB4  B0D8               	btfsc	status,0,c
  2099   004EB6  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  2100   004EB8                     l1772:
  2101                           
  2102                           ; BSR set to: 0
  2103   004EB8  5162               	movf	___awmod@divisor& (0+255),w,b
  2104   004EBA  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2105   004EBC  B4D8               	btfsc	status,2,c
  2106   004EBE  EF63  F027         	goto	u1461
  2107   004EC2  EF65  F027         	goto	u1460
  2108   004EC6                     u1461:
  2109   004EC6  EF89  F027         	goto	l1788
  2110   004ECA                     u1460:
  2111   004ECA                     
  2112                           ; BSR set to: 0
  2113   004ECA  0E01               	movlw	1
  2114   004ECC  6F64               	movwf	___awmod@counter& (0+255),b
  2115   004ECE  EF6D  F027         	goto	l1778
  2116   004ED2                     l1776:
  2117                           
  2118                           ; BSR set to: 0
  2119   004ED2  90D8               	bcf	status,0,c
  2120   004ED4  3762               	rlcf	___awmod@divisor& (0+255),f,b
  2121   004ED6  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2122   004ED8  2B64               	incf	___awmod@counter& (0+255),f,b
  2123   004EDA                     l1778:
  2124                           
  2125                           ; BSR set to: 0
  2126   004EDA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2127   004EDC  EF72  F027         	goto	u1471
  2128   004EE0  EF74  F027         	goto	u1470
  2129   004EE4                     u1471:
  2130   004EE4  EF69  F027         	goto	l1776
  2131   004EE8                     u1470:
  2132   004EE8                     l1780:
  2133                           
  2134                           ; BSR set to: 0
  2135   004EE8  5162               	movf	___awmod@divisor& (0+255),w,b
  2136   004EEA  5D60               	subwf	___awmod@dividend& (0+255),w,b
  2137   004EEC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2138   004EEE  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2139   004EF0  A0D8               	btfss	status,0,c
  2140   004EF2  EF7D  F027         	goto	u1481
  2141   004EF6  EF7F  F027         	goto	u1480
  2142   004EFA                     u1481:
  2143   004EFA  EF83  F027         	goto	l1784
  2144   004EFE                     u1480:
  2145   004EFE                     
  2146                           ; BSR set to: 0
  2147   004EFE  5162               	movf	___awmod@divisor& (0+255),w,b
  2148   004F00  5F60               	subwf	___awmod@dividend& (0+255),f,b
  2149   004F02  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2150   004F04  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2151   004F06                     l1784:
  2152                           
  2153                           ; BSR set to: 0
  2154   004F06  90D8               	bcf	status,0,c
  2155   004F08  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2156   004F0A  3362               	rrcf	___awmod@divisor& (0+255),f,b
  2157   004F0C                     
  2158                           ; BSR set to: 0
  2159   004F0C  2F64               	decfsz	___awmod@counter& (0+255),f,b
  2160   004F0E  EF74  F027         	goto	l1780
  2161   004F12                     l1788:
  2162                           
  2163                           ; BSR set to: 0
  2164   004F12  5165               	movf	___awmod@sign& (0+255),w,b
  2165   004F14  B4D8               	btfsc	status,2,c
  2166   004F16  EF8F  F027         	goto	u1491
  2167   004F1A  EF91  F027         	goto	u1490
  2168   004F1E                     u1491:
  2169   004F1E  EF95  F027         	goto	l1792
  2170   004F22                     u1490:
  2171   004F22                     
  2172                           ; BSR set to: 0
  2173   004F22  6D60               	negf	___awmod@dividend& (0+255),b
  2174   004F24  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2175   004F26  B0D8               	btfsc	status,0,c
  2176   004F28  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2177   004F2A                     l1792:
  2178                           
  2179                           ; BSR set to: 0
  2180   004F2A  C060  F060         	movff	___awmod@dividend,?___awmod
  2181   004F2E  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  2182   004F32                     
  2183                           ; BSR set to: 0
  2184   004F32  0012               	return		;funcret
  2185   004F34                     __end_of___awmod:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function ___awdiv *****************
  2189 ;; Defined at:
  2190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  dividend        2    0[BANK0 ] int 
  2193 ;;  divisor         2    2[BANK0 ] int 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  quotient        2    6[BANK0 ] int 
  2196 ;;  sign            1    5[BANK0 ] unsigned char 
  2197 ;;  counter         1    4[BANK0 ] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  2    0[BANK0 ] int 
  2200 ;; Registers used:
  2201 ;;		wreg, status,2, status,0
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2207 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2208 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2210 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2211 ;;Total ram usage:        8 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 7
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_vfpfcnvrt
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text12
  2222   004CF8                     __ptext12:
  2223                           	callstack 0
  2224   004CF8                     ___awdiv:
  2225                           	callstack 19
  2226   004CF8  0E00               	movlw	0
  2227   004CFA  0100               	movlb	0	; () banked
  2228   004CFC  6F65               	movwf	___awdiv@sign& (0+255),b
  2229   004CFE                     
  2230                           ; BSR set to: 0
  2231   004CFE  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2232   004D00  EF86  F026         	goto	u1380
  2233   004D04  EF84  F026         	goto	u1381
  2234   004D08                     u1381:
  2235   004D08  EF8C  F026         	goto	l1724
  2236   004D0C                     u1380:
  2237   004D0C                     
  2238                           ; BSR set to: 0
  2239   004D0C  6D62               	negf	___awdiv@divisor& (0+255),b
  2240   004D0E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2241   004D10  B0D8               	btfsc	status,0,c
  2242   004D12  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2243   004D14                     
  2244                           ; BSR set to: 0
  2245   004D14  0E01               	movlw	1
  2246   004D16  6F65               	movwf	___awdiv@sign& (0+255),b
  2247   004D18                     l1724:
  2248                           
  2249                           ; BSR set to: 0
  2250   004D18  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2251   004D1A  EF93  F026         	goto	u1390
  2252   004D1E  EF91  F026         	goto	u1391
  2253   004D22                     u1391:
  2254   004D22  EF99  F026         	goto	l1730
  2255   004D26                     u1390:
  2256   004D26                     
  2257                           ; BSR set to: 0
  2258   004D26  6D60               	negf	___awdiv@dividend& (0+255),b
  2259   004D28  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2260   004D2A  B0D8               	btfsc	status,0,c
  2261   004D2C  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2262   004D2E                     
  2263                           ; BSR set to: 0
  2264   004D2E  0E01               	movlw	1
  2265   004D30  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  2266   004D32                     l1730:
  2267                           
  2268                           ; BSR set to: 0
  2269   004D32  0E00               	movlw	0
  2270   004D34  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  2271   004D36  0E00               	movlw	0
  2272   004D38  6F66               	movwf	___awdiv@quotient& (0+255),b
  2273   004D3A                     
  2274                           ; BSR set to: 0
  2275   004D3A  5162               	movf	___awdiv@divisor& (0+255),w,b
  2276   004D3C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2277   004D3E  B4D8               	btfsc	status,2,c
  2278   004D40  EFA4  F026         	goto	u1401
  2279   004D44  EFA6  F026         	goto	u1400
  2280   004D48                     u1401:
  2281   004D48  EFCE  F026         	goto	l1752
  2282   004D4C                     u1400:
  2283   004D4C                     
  2284                           ; BSR set to: 0
  2285   004D4C  0E01               	movlw	1
  2286   004D4E  6F64               	movwf	___awdiv@counter& (0+255),b
  2287   004D50  EFAE  F026         	goto	l1738
  2288   004D54                     l1736:
  2289                           
  2290                           ; BSR set to: 0
  2291   004D54  90D8               	bcf	status,0,c
  2292   004D56  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  2293   004D58  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2294   004D5A  2B64               	incf	___awdiv@counter& (0+255),f,b
  2295   004D5C                     l1738:
  2296                           
  2297                           ; BSR set to: 0
  2298   004D5C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2299   004D5E  EFB3  F026         	goto	u1411
  2300   004D62  EFB5  F026         	goto	u1410
  2301   004D66                     u1411:
  2302   004D66  EFAA  F026         	goto	l1736
  2303   004D6A                     u1410:
  2304   004D6A                     l1740:
  2305                           
  2306                           ; BSR set to: 0
  2307   004D6A  90D8               	bcf	status,0,c
  2308   004D6C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  2309   004D6E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2310   004D70                     
  2311                           ; BSR set to: 0
  2312   004D70  5162               	movf	___awdiv@divisor& (0+255),w,b
  2313   004D72  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  2314   004D74  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2315   004D76  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2316   004D78  A0D8               	btfss	status,0,c
  2317   004D7A  EFC1  F026         	goto	u1421
  2318   004D7E  EFC3  F026         	goto	u1420
  2319   004D82                     u1421:
  2320   004D82  EFC8  F026         	goto	l1748
  2321   004D86                     u1420:
  2322   004D86                     
  2323                           ; BSR set to: 0
  2324   004D86  5162               	movf	___awdiv@divisor& (0+255),w,b
  2325   004D88  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  2326   004D8A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2327   004D8C  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2328   004D8E                     
  2329                           ; BSR set to: 0
  2330   004D8E  8166               	bsf	___awdiv@quotient& (0+255),0,b
  2331   004D90                     l1748:
  2332                           
  2333                           ; BSR set to: 0
  2334   004D90  90D8               	bcf	status,0,c
  2335   004D92  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2336   004D94  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  2337   004D96                     
  2338                           ; BSR set to: 0
  2339   004D96  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  2340   004D98  EFB5  F026         	goto	l1740
  2341   004D9C                     l1752:
  2342                           
  2343                           ; BSR set to: 0
  2344   004D9C  5165               	movf	___awdiv@sign& (0+255),w,b
  2345   004D9E  B4D8               	btfsc	status,2,c
  2346   004DA0  EFD4  F026         	goto	u1431
  2347   004DA4  EFD6  F026         	goto	u1430
  2348   004DA8                     u1431:
  2349   004DA8  EFDA  F026         	goto	l1756
  2350   004DAC                     u1430:
  2351   004DAC                     
  2352                           ; BSR set to: 0
  2353   004DAC  6D66               	negf	___awdiv@quotient& (0+255),b
  2354   004DAE  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2355   004DB0  B0D8               	btfsc	status,0,c
  2356   004DB2  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2357   004DB4                     l1756:
  2358                           
  2359                           ; BSR set to: 0
  2360   004DB4  C066  F060         	movff	___awdiv@quotient,?___awdiv
  2361   004DB8  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  2362   004DBC                     
  2363                           ; BSR set to: 0
  2364   004DBC  0012               	return		;funcret
  2365   004DBE                     __end_of___awdiv:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function _getKeypad *****************
  2369 ;; Defined at:
  2370 ;;		line 38 in file "./keypad.h"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  buttonNumber    2    2[BANK0 ] int 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  2    0[BANK0 ] int 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2385 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2387 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2388 ;;Total ram usage:        4 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 7
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_getValue
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text13
  2399   0044EC                     __ptext13:
  2400                           	callstack 0
  2401   0044EC                     _getKeypad:
  2402                           	callstack 22
  2403   0044EC                     
  2404                           ;./keypad.h: 39:     int buttonNumber = -1;
  2405   0044EC  0100               	movlb	0	; () banked
  2406   0044EE  6962               	setf	getKeypad@buttonNumber& (0+255),b
  2407   0044F0  6963               	setf	(getKeypad@buttonNumber+1)& (0+255),b
  2408                           
  2409                           ;./keypad.h: 42:     PORTAbits.RA0 = 1;
  2410   0044F2  80CA               	bsf	202,0,c	;volatile
  2411                           
  2412                           ;./keypad.h: 43:     if(PORTAbits.RA4 == 1){
  2413   0044F4  A8CA               	btfss	202,4,c	;volatile
  2414   0044F6  EF7F  F022         	goto	u2031
  2415   0044FA  EF81  F022         	goto	u2030
  2416   0044FE                     u2031:
  2417   0044FE  EF8C  F022         	goto	l117
  2418   004502                     u2030:
  2419   004502                     
  2420                           ; BSR set to: 0
  2421                           ;./keypad.h: 45:         buttonNumber = 1;
  2422   004502  0E00               	movlw	0
  2423   004504  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2424   004506  0E01               	movlw	1
  2425   004508  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2426   00450A                     l118:
  2427   00450A  B8CA               	btfsc	202,4,c	;volatile
  2428   00450C  EF8A  F022         	goto	u2041
  2429   004510  EF8C  F022         	goto	u2040
  2430   004514                     u2041:
  2431   004514  EF85  F022         	goto	l118
  2432   004518                     u2040:
  2433   004518                     l117:
  2434                           
  2435                           ;./keypad.h: 48:     if(PORTAbits.RA5 == 1){
  2436   004518  AACA               	btfss	202,5,c	;volatile
  2437   00451A  EF91  F022         	goto	u2051
  2438   00451E  EF93  F022         	goto	u2050
  2439   004522                     u2051:
  2440   004522  EF9F  F022         	goto	l121
  2441   004526                     u2050:
  2442   004526                     
  2443                           ;./keypad.h: 50:         buttonNumber = 4;
  2444   004526  0E00               	movlw	0
  2445   004528  0100               	movlb	0	; () banked
  2446   00452A  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2447   00452C  0E04               	movlw	4
  2448   00452E  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2449   004530                     l122:
  2450   004530  BACA               	btfsc	202,5,c	;volatile
  2451   004532  EF9D  F022         	goto	u2061
  2452   004536  EF9F  F022         	goto	u2060
  2453   00453A                     u2061:
  2454   00453A  EF98  F022         	goto	l122
  2455   00453E                     u2060:
  2456   00453E                     l121:
  2457                           
  2458                           ;./keypad.h: 53:     if(PORTAbits.RA3 == 1){
  2459   00453E  A6CA               	btfss	202,3,c	;volatile
  2460   004540  EFA4  F022         	goto	u2071
  2461   004544  EFA6  F022         	goto	u2070
  2462   004548                     u2071:
  2463   004548  EFB2  F022         	goto	l125
  2464   00454C                     u2070:
  2465   00454C                     
  2466                           ;./keypad.h: 55:         buttonNumber = 7;
  2467   00454C  0E00               	movlw	0
  2468   00454E  0100               	movlb	0	; () banked
  2469   004550  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2470   004552  0E07               	movlw	7
  2471   004554  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2472   004556                     l126:
  2473   004556  B6CA               	btfsc	202,3,c	;volatile
  2474   004558  EFB0  F022         	goto	u2081
  2475   00455C  EFB2  F022         	goto	u2080
  2476   004560                     u2081:
  2477   004560  EFAB  F022         	goto	l126
  2478   004564                     u2080:
  2479   004564                     l125:
  2480                           
  2481                           ;./keypad.h: 58:     if(PORTCbits.RC4 == 1){
  2482   004564  A8CC               	btfss	204,4,c	;volatile
  2483   004566  EFB7  F022         	goto	u2091
  2484   00456A  EFB9  F022         	goto	u2090
  2485   00456E                     u2091:
  2486   00456E  EFC5  F022         	goto	l129
  2487   004572                     u2090:
  2488   004572                     
  2489                           ;./keypad.h: 60:         buttonNumber = 15;
  2490   004572  0E00               	movlw	0
  2491   004574  0100               	movlb	0	; () banked
  2492   004576  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2493   004578  0E0F               	movlw	15
  2494   00457A  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2495   00457C                     l130:
  2496   00457C  B8CC               	btfsc	204,4,c	;volatile
  2497   00457E  EFC3  F022         	goto	u2101
  2498   004582  EFC5  F022         	goto	u2100
  2499   004586                     u2101:
  2500   004586  EFBE  F022         	goto	l130
  2501   00458A                     u2100:
  2502   00458A                     l129:
  2503                           
  2504                           ;./keypad.h: 63:     PORTAbits.RA0 = 0;
  2505   00458A  90CA               	bcf	202,0,c	;volatile
  2506                           
  2507                           ;./keypad.h: 66:     PORTAbits.RA1 = 1;
  2508   00458C  82CA               	bsf	202,1,c	;volatile
  2509                           
  2510                           ;./keypad.h: 67:     if(PORTAbits.RA4 == 1){
  2511   00458E  A8CA               	btfss	202,4,c	;volatile
  2512   004590  EFCC  F022         	goto	u2111
  2513   004594  EFCE  F022         	goto	u2110
  2514   004598                     u2111:
  2515   004598  EFDA  F022         	goto	l133
  2516   00459C                     u2110:
  2517   00459C                     
  2518                           ;./keypad.h: 69:         buttonNumber = 2;
  2519   00459C  0E00               	movlw	0
  2520   00459E  0100               	movlb	0	; () banked
  2521   0045A0  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2522   0045A2  0E02               	movlw	2
  2523   0045A4  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2524   0045A6                     l134:
  2525   0045A6  B8CA               	btfsc	202,4,c	;volatile
  2526   0045A8  EFD8  F022         	goto	u2121
  2527   0045AC  EFDA  F022         	goto	u2120
  2528   0045B0                     u2121:
  2529   0045B0  EFD3  F022         	goto	l134
  2530   0045B4                     u2120:
  2531   0045B4                     l133:
  2532                           
  2533                           ;./keypad.h: 72:     if(PORTAbits.RA5 == 1){
  2534   0045B4  AACA               	btfss	202,5,c	;volatile
  2535   0045B6  EFDF  F022         	goto	u2131
  2536   0045BA  EFE1  F022         	goto	u2130
  2537   0045BE                     u2131:
  2538   0045BE  EFED  F022         	goto	l137
  2539   0045C2                     u2130:
  2540   0045C2                     
  2541                           ;./keypad.h: 74:         buttonNumber = 5;
  2542   0045C2  0E00               	movlw	0
  2543   0045C4  0100               	movlb	0	; () banked
  2544   0045C6  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2545   0045C8  0E05               	movlw	5
  2546   0045CA  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2547   0045CC                     l138:
  2548   0045CC  BACA               	btfsc	202,5,c	;volatile
  2549   0045CE  EFEB  F022         	goto	u2141
  2550   0045D2  EFED  F022         	goto	u2140
  2551   0045D6                     u2141:
  2552   0045D6  EFE6  F022         	goto	l138
  2553   0045DA                     u2140:
  2554   0045DA                     l137:
  2555                           
  2556                           ;./keypad.h: 77:     if(PORTAbits.RA3 == 1){
  2557   0045DA  A6CA               	btfss	202,3,c	;volatile
  2558   0045DC  EFF2  F022         	goto	u2151
  2559   0045E0  EFF4  F022         	goto	u2150
  2560   0045E4                     u2151:
  2561   0045E4  EF00  F023         	goto	l141
  2562   0045E8                     u2150:
  2563   0045E8                     
  2564                           ;./keypad.h: 79:         buttonNumber = 8;
  2565   0045E8  0E00               	movlw	0
  2566   0045EA  0100               	movlb	0	; () banked
  2567   0045EC  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2568   0045EE  0E08               	movlw	8
  2569   0045F0  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2570   0045F2                     l142:
  2571   0045F2  B6CA               	btfsc	202,3,c	;volatile
  2572   0045F4  EFFE  F022         	goto	u2161
  2573   0045F8  EF00  F023         	goto	u2160
  2574   0045FC                     u2161:
  2575   0045FC  EFF9  F022         	goto	l142
  2576   004600                     u2160:
  2577   004600                     l141:
  2578                           
  2579                           ;./keypad.h: 82:     if(PORTCbits.RC4 == 1){
  2580   004600  A8CC               	btfss	204,4,c	;volatile
  2581   004602  EF05  F023         	goto	u2171
  2582   004606  EF07  F023         	goto	u2170
  2583   00460A                     u2171:
  2584   00460A  EF13  F023         	goto	l145
  2585   00460E                     u2170:
  2586   00460E                     
  2587                           ;./keypad.h: 84:         buttonNumber = 0;
  2588   00460E  0E00               	movlw	0
  2589   004610  0100               	movlb	0	; () banked
  2590   004612  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2591   004614  0E00               	movlw	0
  2592   004616  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2593   004618                     l146:
  2594   004618  B8CC               	btfsc	204,4,c	;volatile
  2595   00461A  EF11  F023         	goto	u2181
  2596   00461E  EF13  F023         	goto	u2180
  2597   004622                     u2181:
  2598   004622  EF0C  F023         	goto	l146
  2599   004626                     u2180:
  2600   004626                     l145:
  2601                           
  2602                           ;./keypad.h: 87:     PORTAbits.RA1 = 0;
  2603   004626  92CA               	bcf	202,1,c	;volatile
  2604                           
  2605                           ;./keypad.h: 90:     PORTAbits.RA2 = 1;
  2606   004628  84CA               	bsf	202,2,c	;volatile
  2607                           
  2608                           ;./keypad.h: 91:     if(PORTAbits.RA4 == 1){
  2609   00462A  A8CA               	btfss	202,4,c	;volatile
  2610   00462C  EF1A  F023         	goto	u2191
  2611   004630  EF1C  F023         	goto	u2190
  2612   004634                     u2191:
  2613   004634  EF28  F023         	goto	l149
  2614   004638                     u2190:
  2615   004638                     
  2616                           ;./keypad.h: 93:         buttonNumber = 3;
  2617   004638  0E00               	movlw	0
  2618   00463A  0100               	movlb	0	; () banked
  2619   00463C  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2620   00463E  0E03               	movlw	3
  2621   004640  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2622   004642                     l150:
  2623   004642  B8CA               	btfsc	202,4,c	;volatile
  2624   004644  EF26  F023         	goto	u2201
  2625   004648  EF28  F023         	goto	u2200
  2626   00464C                     u2201:
  2627   00464C  EF21  F023         	goto	l150
  2628   004650                     u2200:
  2629   004650                     l149:
  2630                           
  2631                           ;./keypad.h: 96:     if(PORTAbits.RA5 == 1){
  2632   004650  AACA               	btfss	202,5,c	;volatile
  2633   004652  EF2D  F023         	goto	u2211
  2634   004656  EF2F  F023         	goto	u2210
  2635   00465A                     u2211:
  2636   00465A  EF3B  F023         	goto	l153
  2637   00465E                     u2210:
  2638   00465E                     
  2639                           ;./keypad.h: 98:         buttonNumber = 6;
  2640   00465E  0E00               	movlw	0
  2641   004660  0100               	movlb	0	; () banked
  2642   004662  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2643   004664  0E06               	movlw	6
  2644   004666  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2645   004668                     l154:
  2646   004668  BACA               	btfsc	202,5,c	;volatile
  2647   00466A  EF39  F023         	goto	u2221
  2648   00466E  EF3B  F023         	goto	u2220
  2649   004672                     u2221:
  2650   004672  EF34  F023         	goto	l154
  2651   004676                     u2220:
  2652   004676                     l153:
  2653                           
  2654                           ;./keypad.h: 101:     if(PORTAbits.RA3 == 1){
  2655   004676  A6CA               	btfss	202,3,c	;volatile
  2656   004678  EF40  F023         	goto	u2231
  2657   00467C  EF42  F023         	goto	u2230
  2658   004680                     u2231:
  2659   004680  EF4E  F023         	goto	l157
  2660   004684                     u2230:
  2661   004684                     
  2662                           ;./keypad.h: 103:         buttonNumber = 9;
  2663   004684  0E00               	movlw	0
  2664   004686  0100               	movlb	0	; () banked
  2665   004688  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2666   00468A  0E09               	movlw	9
  2667   00468C  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2668   00468E                     l158:
  2669   00468E  B6CA               	btfsc	202,3,c	;volatile
  2670   004690  EF4C  F023         	goto	u2241
  2671   004694  EF4E  F023         	goto	u2240
  2672   004698                     u2241:
  2673   004698  EF47  F023         	goto	l158
  2674   00469C                     u2240:
  2675   00469C                     l157:
  2676                           
  2677                           ;./keypad.h: 106:     if(PORTCbits.RC4 == 1){
  2678   00469C  A8CC               	btfss	204,4,c	;volatile
  2679   00469E  EF53  F023         	goto	u2251
  2680   0046A2  EF55  F023         	goto	u2250
  2681   0046A6                     u2251:
  2682   0046A6  EF61  F023         	goto	l161
  2683   0046AA                     u2250:
  2684   0046AA                     
  2685                           ;./keypad.h: 108:         buttonNumber = 10;
  2686   0046AA  0E00               	movlw	0
  2687   0046AC  0100               	movlb	0	; () banked
  2688   0046AE  6F63               	movwf	(getKeypad@buttonNumber+1)& (0+255),b
  2689   0046B0  0E0A               	movlw	10
  2690   0046B2  6F62               	movwf	getKeypad@buttonNumber& (0+255),b
  2691   0046B4                     l162:
  2692   0046B4  B8CC               	btfsc	204,4,c	;volatile
  2693   0046B6  EF5F  F023         	goto	u2261
  2694   0046BA  EF61  F023         	goto	u2260
  2695   0046BE                     u2261:
  2696   0046BE  EF5A  F023         	goto	l162
  2697   0046C2                     u2260:
  2698   0046C2                     l161:
  2699                           
  2700                           ;./keypad.h: 111:     PORTAbits.RA2 = 0;
  2701   0046C2  94CA               	bcf	202,2,c	;volatile
  2702                           
  2703                           ;./keypad.h: 138:     return buttonNumber;
  2704   0046C4  C062  F060         	movff	getKeypad@buttonNumber,?_getKeypad
  2705   0046C8  C063  F061         	movff	getKeypad@buttonNumber+1,?_getKeypad+1
  2706   0046CC  0012               	return		;funcret
  2707   0046CE                     __end_of_getKeypad:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function ___wmul *****************
  2711 ;; Defined at:
  2712 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2715 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  product         2    4[BANK0 ] unsigned int 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2    0[BANK0 ] unsigned int 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0, prodl, prodh
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2727 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2730 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2731 ;;Total ram usage:        6 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 7
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_getValue
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text14
  2742   00552E                     __ptext14:
  2743                           	callstack 0
  2744   00552E                     ___wmul:
  2745                           	callstack 22
  2746   00552E  0100               	movlb	0	; () banked
  2747   005530  5160               	movf	___wmul@multiplier& (0+255),w,b
  2748   005532  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2749   005534  006F FFCC  F064    	movff	prodl,___wmul@product
  2750   00553A  006F FFD0  F065    	movff	prodh,___wmul@product+1
  2751   005540  5160               	movf	___wmul@multiplier& (0+255),w,b
  2752   005542  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  2753   005544  50F3               	movf	243,w,c
  2754   005546  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2755   005548  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  2756   00554A  0362               	mulwf	___wmul@multiplicand& (0+255),b
  2757   00554C  50F3               	movf	243,w,c
  2758   00554E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  2759   005550                     
  2760                           ; BSR set to: 0
  2761   005550  C064  F060         	movff	___wmul@product,?___wmul
  2762   005554  C065  F061         	movff	___wmul@product+1,?___wmul+1
  2763   005558                     
  2764                           ; BSR set to: 0
  2765   005558  0012               	return		;funcret
  2766   00555A                     __end_of___wmul:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _LCD_String_xy *****************
  2770 ;; Defined at:
  2771 ;;		line 63 in file "./LCD.h"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  row             1    wreg     unsigned char 
  2774 ;;  pos             1    9[BANK0 ] unsigned char 
  2775 ;;  msg             2   10[BANK0 ] PTR const unsigned char 
  2776 ;;		 -> STR_9(17), STR_8(17), STR_7(15), STR_6(14), 
  2777 ;;		 -> getValue@data(10), STR_1(5), 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  row             1   12[BANK0 ] unsigned char 
  2780 ;;  location        1   13[BANK0 ] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2790 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2791 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2793 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2794 ;;Total ram usage:        5 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 10
  2797 ;; This function calls:
  2798 ;;		_LCD_Command
  2799 ;;		_LCD_String
  2800 ;; This function is called by:
  2801 ;;		_getValue
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text15
  2807   0052FE                     __ptext15:
  2808                           	callstack 0
  2809   0052FE                     _LCD_String_xy:
  2810                           	callstack 19
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;incstack = 0
  2814                           ;LCD_String_xy@row stored from wreg
  2815   0052FE  0100               	movlb	0	; () banked
  2816   005300  6F6C               	movwf	LCD_String_xy@row& (0+255),b
  2817   005302                     
  2818                           ;./LCD.h: 66:     if(row<=1)
  2819   005302  0E02               	movlw	2
  2820   005304  0100               	movlb	0	; () banked
  2821   005306  616C               	cpfslt	LCD_String_xy@row& (0+255),b
  2822   005308  EF88  F029         	goto	u2021
  2823   00530C  EF8A  F029         	goto	u2020
  2824   005310                     u2021:
  2825   005310  EF93  F029         	goto	l2120
  2826   005314                     u2020:
  2827   005314                     
  2828                           ; BSR set to: 0
  2829                           ;./LCD.h: 67:     {;./LCD.h: 68:         location=(0x80) | ((pos) & 0x0f);
  2830   005314  5169               	movf	LCD_String_xy@pos& (0+255),w,b
  2831   005316  0B0F               	andlw	15
  2832   005318  0980               	iorlw	128
  2833   00531A  6F6D               	movwf	LCD_String_xy@location& (0+255),b
  2834   00531C                     
  2835                           ; BSR set to: 0
  2836                           ;./LCD.h: 69:         LCD_Command(location);
  2837   00531C  516D               	movf	LCD_String_xy@location& (0+255),w,b
  2838   00531E  ECE6  F02A         	call	_LCD_Command
  2839                           
  2840                           ;./LCD.h: 70:     }
  2841   005322  EF9A  F029         	goto	l2124
  2842   005326                     l2120:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;./LCD.h: 72:     {;./LCD.h: 73:         location=(0xC0) | ((pos) & 0x0f);
  2846   005326  5169               	movf	LCD_String_xy@pos& (0+255),w,b
  2847   005328  0B0F               	andlw	15
  2848   00532A  09C0               	iorlw	192
  2849   00532C  6F6D               	movwf	LCD_String_xy@location& (0+255),b
  2850   00532E                     
  2851                           ; BSR set to: 0
  2852                           ;./LCD.h: 74:         LCD_Command(location);
  2853   00532E  516D               	movf	LCD_String_xy@location& (0+255),w,b
  2854   005330  ECE6  F02A         	call	_LCD_Command
  2855   005334                     l2124:
  2856                           
  2857                           ;./LCD.h: 76:     LCD_String(msg);
  2858   005334  C06A  F067         	movff	LCD_String_xy@msg,LCD_String@msg
  2859   005338  C06B  F068         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  2860   00533C  EC9F  F028         	call	_LCD_String	;wreg free
  2861   005340  0012               	return		;funcret
  2862   005342                     __end_of_LCD_String_xy:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function _LCD_String *****************
  2866 ;; Defined at:
  2867 ;;		line 54 in file "./LCD.h"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  msg             2    7[BANK0 ] PTR const unsigned char 
  2870 ;;		 -> STR_9(17), STR_8(17), STR_7(15), STR_6(14), 
  2871 ;;		 -> getValue@data(10), STR_1(5), 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2887 ;;Total ram usage:        2 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 9
  2890 ;; This function calls:
  2891 ;;		_LCD_Char
  2892 ;; This function is called by:
  2893 ;;		_LCD_String_xy
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text16
  2898   00513E                     __ptext16:
  2899                           	callstack 0
  2900   00513E                     _LCD_String:
  2901                           	callstack 19
  2902   00513E                     
  2903                           ;./LCD.h: 54: void LCD_String(const char *msg);./LCD.h: 55: {;./LCD.h: 56:     while((*m
      +                          sg)!='\0')
  2904   00513E  EFBB  F028         	goto	l2070
  2905   005142                     l2066:
  2906                           
  2907                           ;./LCD.h: 57:     {;./LCD.h: 58:       LCD_Char(*msg);
  2908   005142  0060  F19F  FFF6   	movff	LCD_String@msg,tblptrl
  2909   005148  0060  F1A3  FFF7   	movff	LCD_String@msg+1,tblptrh
  2910   00514E  0E00               	movlw	low (__smallconst shr (0+16))
  2911   005150  6EF8               	movwf	tblptru,c
  2912   005152  0E1F               	movlw	(high __ramtop+-1)
  2913   005154  64F7               	cpfsgt	tblptrh,c
  2914   005156  D003               	bra	u1947
  2915   005158  0008               	tblrd		*
  2916   00515A  50F5               	movf	tablat,w,c
  2917   00515C  D007               	bra	u1940
  2918   00515E                     u1947:
  2919   00515E  006F FFDB FFE1     	movff	tblptrl,fsr1l
  2920   005164  006F FFDF FFE2     	movff	tblptrh,fsr1h
  2921   00516A  50E7               	movf	indf1,w,c
  2922   00516C                     u1940:
  2923   00516C  ECD5  F02A         	call	_LCD_Char
  2924   005170                     
  2925                           ;./LCD.h: 59:       msg++;
  2926   005170  0100               	movlb	0	; () banked
  2927   005172  4B67               	infsnz	LCD_String@msg& (0+255),f,b
  2928   005174  2B68               	incf	(LCD_String@msg+1)& (0+255),f,b
  2929   005176                     l2070:
  2930                           
  2931                           ;./LCD.h: 56:     while((*msg)!='\0')
  2932   005176  0060  F19F  FFF6   	movff	LCD_String@msg,tblptrl
  2933   00517C  0060  F1A3  FFF7   	movff	LCD_String@msg+1,tblptrh
  2934   005182  0E00               	movlw	low (__smallconst shr (0+16))
  2935   005184  6EF8               	movwf	tblptru,c
  2936   005186  0E1F               	movlw	(high __ramtop+-1)
  2937   005188  64F7               	cpfsgt	tblptrh,c
  2938   00518A  D003               	bra	u1957
  2939   00518C  0008               	tblrd		*
  2940   00518E  50F5               	movf	tablat,w,c
  2941   005190  D007               	bra	u1950
  2942   005192                     u1957:
  2943   005192  006F FFDB FFE1     	movff	tblptrl,fsr1l
  2944   005198  006F FFDF FFE2     	movff	tblptrh,fsr1h
  2945   00519E  50E7               	movf	indf1,w,c
  2946   0051A0                     u1950:
  2947   0051A0  0900               	iorlw	0
  2948   0051A2  A4D8               	btfss	status,2,c
  2949   0051A4  EFD6  F028         	goto	u1961
  2950   0051A8  EFD8  F028         	goto	u1960
  2951   0051AC                     u1961:
  2952   0051AC  EFA1  F028         	goto	l2066
  2953   0051B0                     u1960:
  2954   0051B0  0012               	return		;funcret
  2955   0051B2                     __end_of_LCD_String:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _LCD_Char *****************
  2959 ;; Defined at:
  2960 ;;		line 43 in file "./LCD.h"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  dat             1    wreg     unsigned char 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  dat             1    6[BANK0 ] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2975 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2977 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2978 ;;Total ram usage:        1 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 8
  2981 ;; This function calls:
  2982 ;;		_MSdelay
  2983 ;; This function is called by:
  2984 ;;		_LCD_String
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text17
  2989   0055AA                     __ptext17:
  2990                           	callstack 0
  2991   0055AA                     _LCD_Char:
  2992                           	callstack 19
  2993                           
  2994                           ;incstack = 0
  2995                           ;LCD_Char@dat stored from wreg
  2996   0055AA  0100               	movlb	0	; () banked
  2997   0055AC  6F66               	movwf	LCD_Char@dat& (0+255),b
  2998   0055AE                     
  2999                           ;./LCD.h: 43: void LCD_Char(char dat);./LCD.h: 44: {;./LCD.h: 45:     LATD= dat;
  3000   0055AE  0060  F19B  FFBD   	movff	LCD_Char@dat,16317	;volatile
  3001   0055B4                     
  3002                           ;./LCD.h: 46:     LATC2 = 1;
  3003   0055B4  84BC               	bsf	16316,2,c	;volatile
  3004   0055B6                     
  3005                           ;./LCD.h: 47:     LATC3=1;
  3006   0055B6  86BC               	bsf	16316,3,c	;volatile
  3007   0055B8                     
  3008                           ;./LCD.h: 48:     __nop();
  3009   0055B8  0000               	nop	
  3010   0055BA                     
  3011                           ;./LCD.h: 49:     LATC3=0;
  3012   0055BA  96BC               	bcf	16316,3,c	;volatile
  3013   0055BC                     
  3014                           ;./LCD.h: 50:     MSdelay(1);
  3015   0055BC  0E00               	movlw	0
  3016   0055BE  0100               	movlb	0	; () banked
  3017   0055C0  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  3018   0055C2  0E01               	movlw	1
  3019   0055C4  6F60               	movwf	MSdelay@val& (0+255),b
  3020   0055C6  EC12  F029         	call	_MSdelay	;wreg free
  3021   0055CA  0012               	return		;funcret
  3022   0055CC                     __end_of_LCD_Char:
  3023                           	callstack 0
  3024                           
  3025 ;; *************** function _LCD_Init *****************
  3026 ;; Defined at:
  3027 ;;		line 15 in file "./LCD.h"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; Hardware stack levels required when called: 9
  3048 ;; This function calls:
  3049 ;;		_LCD_Command
  3050 ;;		_MSdelay
  3051 ;; This function is called by:
  3052 ;;		_main
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text18
  3057   0054D0                     __ptext18:
  3058                           	callstack 0
  3059   0054D0                     _LCD_Init:
  3060                           	callstack 21
  3061   0054D0                     
  3062                           ;./LCD.h: 17:     MSdelay(15);
  3063   0054D0  0E00               	movlw	0
  3064   0054D2  0100               	movlb	0	; () banked
  3065   0054D4  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  3066   0054D6  0E0F               	movlw	15
  3067   0054D8  6F60               	movwf	MSdelay@val& (0+255),b
  3068   0054DA  EC12  F029         	call	_MSdelay	;wreg free
  3069   0054DE                     
  3070                           ;./LCD.h: 18:     TRISD = 0x00;
  3071   0054DE  0E00               	movlw	0
  3072   0054E0  6EC5               	movwf	197,c	;volatile
  3073   0054E2                     
  3074                           ;./LCD.h: 20:     TRISCbits.TRISC2 = 0;
  3075   0054E2  94C4               	bcf	196,2,c	;volatile
  3076   0054E4                     
  3077                           ;./LCD.h: 21:     TRISCbits.TRISC3 = 0;
  3078   0054E4  96C4               	bcf	196,3,c	;volatile
  3079   0054E6                     
  3080                           ;./LCD.h: 22:     LCD_Command(0x01);
  3081   0054E6  0E01               	movlw	1
  3082   0054E8  ECE6  F02A         	call	_LCD_Command
  3083   0054EC                     
  3084                           ;./LCD.h: 23:     LCD_Command(0x38);
  3085   0054EC  0E38               	movlw	56
  3086   0054EE  ECE6  F02A         	call	_LCD_Command
  3087   0054F2                     
  3088                           ;./LCD.h: 24:     LCD_Command(0x0c);
  3089   0054F2  0E0C               	movlw	12
  3090   0054F4  ECE6  F02A         	call	_LCD_Command
  3091   0054F8                     
  3092                           ;./LCD.h: 25:     LCD_Command(0x06);
  3093   0054F8  0E06               	movlw	6
  3094   0054FA  ECE6  F02A         	call	_LCD_Command
  3095   0054FE  0012               	return		;funcret
  3096   005500                     __end_of_LCD_Init:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _LCD_Command *****************
  3100 ;; Defined at:
  3101 ;;		line 33 in file "./LCD.h"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  cmd             1    wreg     unsigned char 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  cmd             1    6[BANK0 ] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3116 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3118 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3119 ;;Total ram usage:        1 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 8
  3122 ;; This function calls:
  3123 ;;		_MSdelay
  3124 ;; This function is called by:
  3125 ;;		_LCD_Init
  3126 ;;		_LCD_String_xy
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text19
  3131   0055CC                     __ptext19:
  3132                           	callstack 0
  3133   0055CC                     _LCD_Command:
  3134                           	callstack 20
  3135                           
  3136                           ;incstack = 0
  3137                           ;LCD_Command@cmd stored from wreg
  3138   0055CC  0100               	movlb	0	; () banked
  3139   0055CE  6F66               	movwf	LCD_Command@cmd& (0+255),b
  3140   0055D0                     
  3141                           ;./LCD.h: 33: void LCD_Command(char cmd );./LCD.h: 34: {;./LCD.h: 35:     LATD= cmd;
  3142   0055D0  0060  F19B  FFBD   	movff	LCD_Command@cmd,16317	;volatile
  3143   0055D6                     
  3144                           ;./LCD.h: 36:     LATC2 = 0;
  3145   0055D6  94BC               	bcf	16316,2,c	;volatile
  3146   0055D8                     
  3147                           ;./LCD.h: 37:     LATC3 = 1;
  3148   0055D8  86BC               	bsf	16316,3,c	;volatile
  3149   0055DA                     
  3150                           ;./LCD.h: 38:     __nop();
  3151   0055DA  0000               	nop	
  3152   0055DC                     
  3153                           ;./LCD.h: 39:     LATC3 = 0;
  3154   0055DC  96BC               	bcf	16316,3,c	;volatile
  3155   0055DE                     
  3156                           ;./LCD.h: 40:     MSdelay(3);
  3157   0055DE  0E00               	movlw	0
  3158   0055E0  0100               	movlb	0	; () banked
  3159   0055E2  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  3160   0055E4  0E03               	movlw	3
  3161   0055E6  6F60               	movwf	MSdelay@val& (0+255),b
  3162   0055E8  EC12  F029         	call	_MSdelay	;wreg free
  3163   0055EC  0012               	return		;funcret
  3164   0055EE                     __end_of_LCD_Command:
  3165                           	callstack 0
  3166                           
  3167 ;; *************** function _MSdelay *****************
  3168 ;; Defined at:
  3169 ;;		line 80 in file "./LCD.h"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  val             2    0[BANK0 ] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  j               2    4[BANK0 ] unsigned int 
  3174 ;;  i               2    2[BANK0 ] unsigned int 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3184 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3185 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3187 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3188 ;;Total ram usage:        6 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 7
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_LCD_Init
  3195 ;;		_LCD_Command
  3196 ;;		_LCD_Char
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text20
  3201   005224                     __ptext20:
  3202                           	callstack 0
  3203   005224                     _MSdelay:
  3204                           	callstack 19
  3205   005224                     
  3206                           ;./LCD.h: 80: void MSdelay(unsigned int val);./LCD.h: 81: {;./LCD.h: 82:      unsigned i
      +                          nt i,j;;./LCD.h: 83:         for(i=0;i<val;i++)
  3207   005224  0E00               	movlw	0
  3208   005226  0100               	movlb	0	; () banked
  3209   005228  6F63               	movwf	(MSdelay@i+1)& (0+255),b
  3210   00522A  0E00               	movlw	0
  3211   00522C  6F62               	movwf	MSdelay@i& (0+255),b
  3212   00522E  EF2C  F029         	goto	l1714
  3213   005232                     l1702:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;./LCD.h: 84:             for(j=0;j<165;j++);
  3217   005232  0E00               	movlw	0
  3218   005234  6F65               	movwf	(MSdelay@j+1)& (0+255),b
  3219   005236  0E00               	movlw	0
  3220   005238  6F64               	movwf	MSdelay@j& (0+255),b
  3221   00523A                     l1708:
  3222                           
  3223                           ; BSR set to: 0
  3224   00523A  4B64               	infsnz	MSdelay@j& (0+255),f,b
  3225   00523C  2B65               	incf	(MSdelay@j+1)& (0+255),f,b
  3226   00523E                     
  3227                           ; BSR set to: 0
  3228   00523E  5165               	movf	(MSdelay@j+1)& (0+255),w,b
  3229   005240  E109               	bnz	u1360
  3230   005242  0EA5               	movlw	165
  3231   005244  5D64               	subwf	MSdelay@j& (0+255),w,b
  3232   005246  A0D8               	btfss	status,0,c
  3233   005248  EF28  F029         	goto	u1361
  3234   00524C  EF2A  F029         	goto	u1360
  3235   005250                     u1361:
  3236   005250  EF1D  F029         	goto	l1708
  3237   005254                     u1360:
  3238   005254                     
  3239                           ; BSR set to: 0
  3240   005254  4B62               	infsnz	MSdelay@i& (0+255),f,b
  3241   005256  2B63               	incf	(MSdelay@i+1)& (0+255),f,b
  3242   005258                     l1714:
  3243                           
  3244                           ; BSR set to: 0
  3245   005258  5160               	movf	MSdelay@val& (0+255),w,b
  3246   00525A  5D62               	subwf	MSdelay@i& (0+255),w,b
  3247   00525C  5161               	movf	(MSdelay@val+1)& (0+255),w,b
  3248   00525E  5963               	subwfb	(MSdelay@i+1)& (0+255),w,b
  3249   005260  A0D8               	btfss	status,0,c
  3250   005262  EF35  F029         	goto	u1371
  3251   005266  EF37  F029         	goto	u1370
  3252   00526A                     u1371:
  3253   00526A  EF19  F029         	goto	l1702
  3254   00526E                     u1370:
  3255   00526E                     
  3256                           ; BSR set to: 0
  3257   00526E  0012               	return		;funcret
  3258   005270                     __end_of_MSdelay:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function _INTERRUPT_Initialize *****************
  3262 ;; Defined at:
  3263 ;;		line 27 in file "./interrupt.h"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 7
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text21
  3292   005500                     __ptext21:
  3293                           	callstack 0
  3294   005500                     _INTERRUPT_Initialize:
  3295                           	callstack 23
  3296   005500                     
  3297                           ;./interrupt.h: 29:     PORTB = 0;
  3298   005500  0E00               	movlw	0
  3299   005502  6ECB               	movwf	203,c	;volatile
  3300   005504                     
  3301                           ;./interrupt.h: 30:     TRISB = 0b11111111;
  3302   005504  68C3               	setf	195,c	;volatile
  3303                           
  3304                           ;./interrupt.h: 31:     LATB = 0;
  3305   005506  0E00               	movlw	0
  3306   005508  6EBB               	movwf	187,c	;volatile
  3307                           
  3308                           ;./interrupt.h: 32:     ANSELB = 0;
  3309   00550A  0E00               	movlw	0
  3310   00550C  013A               	movlb	58	; () banked
  3311   00550E  6F50               	movwf	80,b	;volatile
  3312   005510                     
  3313                           ; BSR set to: 58
  3314                           ;./interrupt.h: 34:     INTCON0bits.IPEN = 1;
  3315   005510  8AD2               	bsf	210,5,c	;volatile
  3316   005512                     
  3317                           ; BSR set to: 58
  3318                           ;./interrupt.h: 36:     INTCON0bits.GIEH = 1;
  3319   005512  8ED2               	bsf	210,7,c	;volatile
  3320   005514                     
  3321                           ; BSR set to: 58
  3322                           ;./interrupt.h: 38:     INTCON0bits.GIEL = 1;
  3323   005514  8CD2               	bsf	210,6,c	;volatile
  3324   005516                     
  3325                           ; BSR set to: 58
  3326                           ;./interrupt.h: 40:     INTCON0bits.INT0EDG = 1;
  3327   005516  80D2               	bsf	210,0,c	;volatile
  3328   005518                     
  3329                           ; BSR set to: 58
  3330                           ;./interrupt.h: 42:     IPR1bits.INT0IP = 1;
  3331   005518  0139               	movlb	57	; () banked
  3332   00551A  8181               	bsf	129,0,b	;volatile
  3333   00551C                     
  3334                           ; BSR set to: 57
  3335                           ;./interrupt.h: 44:     PIE1bits.INT0IE = 1;
  3336   00551C  8191               	bsf	145,0,b	;volatile
  3337   00551E                     
  3338                           ; BSR set to: 57
  3339                           ;./interrupt.h: 46:     PIR1bits.INT0IF = 0;
  3340   00551E  91A1               	bcf	161,0,b	;volatile
  3341                           
  3342                           ;./interrupt.h: 50:     IVTBASEU = 0x00;
  3343   005520  0E00               	movlw	0
  3344   005522  6ED7               	movwf	215,c	;volatile
  3345                           
  3346                           ;./interrupt.h: 52:     IVTBASEH = 0x40;
  3347   005524  0E40               	movlw	64
  3348   005526  6ED6               	movwf	214,c	;volatile
  3349                           
  3350                           ;./interrupt.h: 54:     IVTBASEL = 0x08;
  3351   005528  0E08               	movlw	8
  3352   00552A  6ED5               	movwf	213,c	;volatile
  3353   00552C                     
  3354                           ; BSR set to: 57
  3355   00552C  0012               	return		;funcret
  3356   00552E                     __end_of_INTERRUPT_Initialize:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _INT0_ISR *****************
  3360 ;; Defined at:
  3361 ;;		line 4 in file "./interrupt.h"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3377 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3379 ;;Total ram usage:        6 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 6
  3382 ;; This function calls:
  3383 ;;		_LCD_Clear
  3384 ;;		i2_LCD_String_xy
  3385 ;;		i2_getValue
  3386 ;; This function is called by:
  3387 ;;		Interrupt level 2
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text22
  3392   004C2C                     __ptext22:
  3393                           	callstack 0
  3394   004C2C                     _INT0_ISR:
  3395                           	callstack 18
  3396                           
  3397                           ; BSR set to: 57
  3398                           ;incstack = 0
  3399   004C2C  006F FFD8  F049    	movff	tblptrl,??_INT0_ISR+2
  3400   004C32  006F FFDC  F04A    	movff	tblptrh,??_INT0_ISR+3
  3401   004C38  006F FFE0  F04B    	movff	tblptru,??_INT0_ISR+4
  3402   004C3E  006F FFD4  F04C    	movff	tablat,??_INT0_ISR+5
  3403   004C44                     
  3404                           ;./interrupt.h: 9:     if(PORTBbits.RB0 == 1){
  3405   004C44  A0CB               	btfss	203,0,c	;volatile
  3406   004C46  EF27  F026         	goto	i2u268_41
  3407   004C4A  EF29  F026         	goto	i2u268_40
  3408   004C4E                     i2u268_41:
  3409   004C4E  EF6D  F026         	goto	i2l2396
  3410   004C52                     i2u268_40:
  3411   004C52                     
  3412                           ;./interrupt.h: 10:         LCD_Clear();
  3413   004C52  EC2A  F02B         	call	_LCD_Clear	;wreg free
  3414   004C56                     
  3415                           ;./interrupt.h: 11:         LCD_String_xy(1, 0, "New Password:");
  3416   004C56  0E00               	movlw	0
  3417   004C58  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3418   004C5A  0E32               	movlw	low STR_6
  3419   004C5C  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3420   004C5E  500B               	movf	i2LCD_String_xy@msg^0,w,c
  3421   004C60  A4D8               	btfss	status,2,c
  3422   004C62  0E20               	movlw	high __smallconst
  3423   004C64  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  3424   004C66  0E01               	movlw	1
  3425   004C68  ECC1  F029         	call	i2_LCD_String_xy
  3426   004C6C                     
  3427                           ;./interrupt.h: 13:         password = getValue();
  3428   004C6C  EC6E  F021         	call	i2_getValue	;wreg free
  3429   004C70  C02B  F04D         	movff	?i2_getValue,_password
  3430   004C74  C02C  F04E         	movff	?i2_getValue+1,_password+1
  3431   004C78                     
  3432                           ;./interrupt.h: 14:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  3433   004C78  0E10               	movlw	16
  3434   004C7A  6E48               	movwf	(??_INT0_ISR+1)^0,c
  3435   004C7C  0E39               	movlw	57
  3436   004C7E  6E47               	movwf	??_INT0_ISR^0,c
  3437   004C80  0E0E               	movlw	14
  3438   004C82                     i2u269_47:
  3439   004C82  2EE8               	decfsz	wreg,f,c
  3440   004C84  D7FE               	bra	i2u269_47
  3441   004C86  2E47               	decfsz	??_INT0_ISR^0,f,c
  3442   004C88  D7FC               	bra	i2u269_47
  3443   004C8A  2E48               	decfsz	(??_INT0_ISR+1)^0,f,c
  3444   004C8C  D7FA               	bra	i2u269_47
  3445   004C8E                     
  3446                           ;./interrupt.h: 15:         LCD_Clear();
  3447   004C8E  EC2A  F02B         	call	_LCD_Clear	;wreg free
  3448   004C92                     
  3449                           ;./interrupt.h: 16:         LCD_String_xy(1, 1, "Password Reset");
  3450   004C92  0E01               	movlw	1
  3451   004C94  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3452   004C96  0E23               	movlw	low STR_7
  3453   004C98  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3454   004C9A  500B               	movf	i2LCD_String_xy@msg^0,w,c
  3455   004C9C  A4D8               	btfss	status,2,c
  3456   004C9E  0E20               	movlw	high __smallconst
  3457   004CA0  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  3458   004CA2  0E01               	movlw	1
  3459   004CA4  ECC1  F029         	call	i2_LCD_String_xy
  3460   004CA8                     
  3461                           ;./interrupt.h: 17:         LCD_String_xy(2, 0, "****************");
  3462   004CA8  0E00               	movlw	0
  3463   004CAA  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3464   004CAC  0E12               	movlw	low STR_8
  3465   004CAE  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3466   004CB0  500B               	movf	i2LCD_String_xy@msg^0,w,c
  3467   004CB2  A4D8               	btfss	status,2,c
  3468   004CB4  0E20               	movlw	high __smallconst
  3469   004CB6  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  3470   004CB8  0E02               	movlw	2
  3471   004CBA  ECC1  F029         	call	i2_LCD_String_xy
  3472   004CBE                     
  3473                           ;./interrupt.h: 18:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  3474   004CBE  0E10               	movlw	16
  3475   004CC0  6E48               	movwf	(??_INT0_ISR+1)^0,c
  3476   004CC2  0E39               	movlw	57
  3477   004CC4  6E47               	movwf	??_INT0_ISR^0,c
  3478   004CC6  0E0E               	movlw	14
  3479   004CC8                     i2u270_47:
  3480   004CC8  2EE8               	decfsz	wreg,f,c
  3481   004CCA  D7FE               	bra	i2u270_47
  3482   004CCC  2E47               	decfsz	??_INT0_ISR^0,f,c
  3483   004CCE  D7FC               	bra	i2u270_47
  3484   004CD0  2E48               	decfsz	(??_INT0_ISR+1)^0,f,c
  3485   004CD2  D7FA               	bra	i2u270_47
  3486   004CD4                     
  3487                           ;./interrupt.h: 19:         LCD_Clear();
  3488   004CD4  EC2A  F02B         	call	_LCD_Clear	;wreg free
  3489   004CD8  00FF               	reset		;# 
  3490   004CDA                     i2l2396:
  3491                           
  3492                           ;./interrupt.h: 23:     PIR1bits.INT0IF = 0;
  3493   004CDA  0139               	movlb	57	; () banked
  3494   004CDC  91A1               	bcf	161,0,b	;volatile
  3495   004CDE                     
  3496                           ; BSR set to: 57
  3497   004CDE  0060  F133  FFF5   	movff	??_INT0_ISR+5,tablat
  3498   004CE4  0060  F12F  FFF8   	movff	??_INT0_ISR+4,tblptru
  3499   004CEA  0060  F12B  FFF7   	movff	??_INT0_ISR+3,tblptrh
  3500   004CF0  0060  F127  FFF6   	movff	??_INT0_ISR+2,tblptrl
  3501   004CF6  0011               	retfie		f
  3502   004CF8                     __end_of_INT0_ISR:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function i2_getValue *****************
  3506 ;; Defined at:
  3507 ;;		line 141 in file "./keypad.h"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  data           10   50[COMRAM] unsigned char [10]
  3512 ;;  value4          2   68[COMRAM] int 
  3513 ;;  value3          2   66[COMRAM] int 
  3514 ;;  value2          2   64[COMRAM] int 
  3515 ;;  value1          2   62[COMRAM] int 
  3516 ;;  decimalValue    2   60[COMRAM] int 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  2   42[COMRAM] int 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3527 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3528 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3529 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3530 ;;Total ram usage:       28 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 5
  3533 ;; This function calls:
  3534 ;;		i2_LCD_String_xy
  3535 ;;		i2___wmul
  3536 ;;		i2_getKeypad
  3537 ;;		i2_sprintf
  3538 ;; This function is called by:
  3539 ;;		_INT0_ISR
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text23
  3544   0042DC                     __ptext23:
  3545                           	callstack 0
  3546   0042DC                     i2_getValue:
  3547                           	callstack 18
  3548   0042DC                     
  3549                           ;./keypad.h: 142:     int value1 = -1;
  3550   0042DC  683F               	setf	i2getValue@value1^0,c
  3551   0042DE  6840               	setf	(i2getValue@value1+1)^0,c
  3552                           
  3553                           ;./keypad.h: 143:     int value2 = -1;
  3554   0042E0  6841               	setf	i2getValue@value2^0,c
  3555   0042E2  6842               	setf	(i2getValue@value2+1)^0,c
  3556                           
  3557                           ;./keypad.h: 144:     int value3 = -1;
  3558   0042E4  6843               	setf	i2getValue@value3^0,c
  3559   0042E6  6844               	setf	(i2getValue@value3+1)^0,c
  3560                           
  3561                           ;./keypad.h: 145:     int value4 = -1;
  3562   0042E8  6845               	setf	i2getValue@value4^0,c
  3563   0042EA  6846               	setf	(i2getValue@value4+1)^0,c
  3564   0042EC                     
  3565                           ;./keypad.h: 147:     char data[10];;./keypad.h: 149:     LCD_String_xy(2,0,"____");
  3566   0042EC  0E00               	movlw	0
  3567   0042EE  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3568   0042F0  0E40               	movlw	low STR_1
  3569   0042F2  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3570   0042F4  500B               	movf	i2LCD_String_xy@msg^0,w,c
  3571   0042F6  A4D8               	btfss	status,2,c
  3572   0042F8  0E20               	movlw	high __smallconst
  3573   0042FA  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  3574   0042FC  0E02               	movlw	2
  3575   0042FE  ECC1  F029         	call	i2_LCD_String_xy
  3576                           
  3577                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
  3578   004302  EF89  F021         	goto	i2l2332
  3579   004306                     i2l2330:
  3580                           
  3581                           ;./keypad.h: 152:             value1 = getKeypad();
  3582   004306  EC4E  F024         	call	i2_getKeypad	;wreg free
  3583   00430A  C001  F03F         	movff	?i2_getKeypad,i2getValue@value1
  3584   00430E  C002  F040         	movff	?i2_getKeypad+1,i2getValue@value1+1
  3585   004312                     i2l2332:
  3586                           
  3587                           ;./keypad.h: 151:     while(value1 < 0 || value1 > 9){
  3588   004312  BE40               	btfsc	(i2getValue@value1+1)^0,7,c
  3589   004314  EF8E  F021         	goto	i2u260_41
  3590   004318  EF90  F021         	goto	i2u260_40
  3591   00431C                     i2u260_41:
  3592   00431C  EF83  F021         	goto	i2l2330
  3593   004320                     i2u260_40:
  3594   004320  BE40               	btfsc	(i2getValue@value1+1)^0,7,c
  3595   004322  EF9E  F021         	goto	i2u261_40
  3596   004326  5040               	movf	(i2getValue@value1+1)^0,w,c
  3597   004328  E107               	bnz	i2u261_41
  3598   00432A  0E0A               	movlw	10
  3599   00432C  5C3F               	subwf	i2getValue@value1^0,w,c
  3600   00432E  B0D8               	btfsc	status,0,c
  3601   004330  EF9C  F021         	goto	i2u261_41
  3602   004334  EF9E  F021         	goto	i2u261_40
  3603   004338                     i2u261_41:
  3604   004338  EF83  F021         	goto	i2l2330
  3605   00433C                     i2u261_40:
  3606   00433C                     
  3607                           ;./keypad.h: 154:     sprintf(data,"%d",value1);
  3608   00433C  0E33               	movlw	low i2getValue@data
  3609   00433E  6E1A               	movwf	i2sprintf@s^0,c
  3610   004340  0E45               	movlw	low STR_2
  3611   004342  6E1B               	movwf	i2sprintf@fmt^0,c
  3612   004344  C03F  F01C         	movff	i2getValue@value1,?i2_sprintf+2
  3613   004348  C040  F01D         	movff	i2getValue@value1+1,?i2_sprintf+3
  3614   00434C  EC34  F02A         	call	i2_sprintf	;wreg free
  3615   004350                     
  3616                           ;./keypad.h: 155:     LCD_String_xy(2,0,data);
  3617   004350  0E00               	movlw	0
  3618   004352  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3619   004354  0E33               	movlw	low i2getValue@data
  3620   004356  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3621   004358  6A0C               	clrf	(i2LCD_String_xy@msg+1)^0,c
  3622   00435A  0E02               	movlw	2
  3623   00435C  ECC1  F029         	call	i2_LCD_String_xy
  3624                           
  3625                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
  3626   004360  EFB8  F021         	goto	i2l2342
  3627   004364                     i2l2340:
  3628                           
  3629                           ;./keypad.h: 158:         value2 = getKeypad();
  3630   004364  EC4E  F024         	call	i2_getKeypad	;wreg free
  3631   004368  C001  F041         	movff	?i2_getKeypad,i2getValue@value2
  3632   00436C  C002  F042         	movff	?i2_getKeypad+1,i2getValue@value2+1
  3633   004370                     i2l2342:
  3634                           
  3635                           ;./keypad.h: 157:     while(value2 < 0 || value2 > 9){
  3636   004370  BE42               	btfsc	(i2getValue@value2+1)^0,7,c
  3637   004372  EFBD  F021         	goto	i2u262_41
  3638   004376  EFBF  F021         	goto	i2u262_40
  3639   00437A                     i2u262_41:
  3640   00437A  EFB2  F021         	goto	i2l2340
  3641   00437E                     i2u262_40:
  3642   00437E  BE42               	btfsc	(i2getValue@value2+1)^0,7,c
  3643   004380  EFCD  F021         	goto	i2u263_40
  3644   004384  5042               	movf	(i2getValue@value2+1)^0,w,c
  3645   004386  E107               	bnz	i2u263_41
  3646   004388  0E0A               	movlw	10
  3647   00438A  5C41               	subwf	i2getValue@value2^0,w,c
  3648   00438C  B0D8               	btfsc	status,0,c
  3649   00438E  EFCB  F021         	goto	i2u263_41
  3650   004392  EFCD  F021         	goto	i2u263_40
  3651   004396                     i2u263_41:
  3652   004396  EFB2  F021         	goto	i2l2340
  3653   00439A                     i2u263_40:
  3654   00439A                     
  3655                           ;./keypad.h: 160:     sprintf(data,"%d",value2);
  3656   00439A  0E33               	movlw	low i2getValue@data
  3657   00439C  6E1A               	movwf	i2sprintf@s^0,c
  3658   00439E  0E45               	movlw	low STR_2
  3659   0043A0  6E1B               	movwf	i2sprintf@fmt^0,c
  3660   0043A2  C041  F01C         	movff	i2getValue@value2,?i2_sprintf+2
  3661   0043A6  C042  F01D         	movff	i2getValue@value2+1,?i2_sprintf+3
  3662   0043AA  EC34  F02A         	call	i2_sprintf	;wreg free
  3663   0043AE                     
  3664                           ;./keypad.h: 161:     LCD_String_xy(2,1,data);
  3665   0043AE  0E01               	movlw	1
  3666   0043B0  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3667   0043B2  0E33               	movlw	low i2getValue@data
  3668   0043B4  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3669   0043B6  6A0C               	clrf	(i2LCD_String_xy@msg+1)^0,c
  3670   0043B8  0E02               	movlw	2
  3671   0043BA  ECC1  F029         	call	i2_LCD_String_xy
  3672                           
  3673                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
  3674   0043BE  EFE7  F021         	goto	i2l2352
  3675   0043C2                     i2l2350:
  3676                           
  3677                           ;./keypad.h: 164:         value3 = getKeypad();
  3678   0043C2  EC4E  F024         	call	i2_getKeypad	;wreg free
  3679   0043C6  C001  F043         	movff	?i2_getKeypad,i2getValue@value3
  3680   0043CA  C002  F044         	movff	?i2_getKeypad+1,i2getValue@value3+1
  3681   0043CE                     i2l2352:
  3682                           
  3683                           ;./keypad.h: 163:     while(value3 < 0 || value3 > 9){
  3684   0043CE  BE44               	btfsc	(i2getValue@value3+1)^0,7,c
  3685   0043D0  EFEC  F021         	goto	i2u264_41
  3686   0043D4  EFEE  F021         	goto	i2u264_40
  3687   0043D8                     i2u264_41:
  3688   0043D8  EFE1  F021         	goto	i2l2350
  3689   0043DC                     i2u264_40:
  3690   0043DC  BE44               	btfsc	(i2getValue@value3+1)^0,7,c
  3691   0043DE  EFFC  F021         	goto	i2u265_40
  3692   0043E2  5044               	movf	(i2getValue@value3+1)^0,w,c
  3693   0043E4  E107               	bnz	i2u265_41
  3694   0043E6  0E0A               	movlw	10
  3695   0043E8  5C43               	subwf	i2getValue@value3^0,w,c
  3696   0043EA  B0D8               	btfsc	status,0,c
  3697   0043EC  EFFA  F021         	goto	i2u265_41
  3698   0043F0  EFFC  F021         	goto	i2u265_40
  3699   0043F4                     i2u265_41:
  3700   0043F4  EFE1  F021         	goto	i2l2350
  3701   0043F8                     i2u265_40:
  3702   0043F8                     
  3703                           ;./keypad.h: 166:     sprintf(data,"%d",value3);
  3704   0043F8  0E33               	movlw	low i2getValue@data
  3705   0043FA  6E1A               	movwf	i2sprintf@s^0,c
  3706   0043FC  0E45               	movlw	low STR_2
  3707   0043FE  6E1B               	movwf	i2sprintf@fmt^0,c
  3708   004400  C043  F01C         	movff	i2getValue@value3,?i2_sprintf+2
  3709   004404  C044  F01D         	movff	i2getValue@value3+1,?i2_sprintf+3
  3710   004408  EC34  F02A         	call	i2_sprintf	;wreg free
  3711   00440C                     
  3712                           ;./keypad.h: 167:     LCD_String_xy(2,2,data);
  3713   00440C  0E02               	movlw	2
  3714   00440E  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3715   004410  0E33               	movlw	low i2getValue@data
  3716   004412  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3717   004414  6A0C               	clrf	(i2LCD_String_xy@msg+1)^0,c
  3718   004416  0E02               	movlw	2
  3719   004418  ECC1  F029         	call	i2_LCD_String_xy
  3720                           
  3721                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
  3722   00441C  EF16  F022         	goto	i2l2362
  3723   004420                     i2l2360:
  3724                           
  3725                           ;./keypad.h: 170:         value4 = getKeypad();
  3726   004420  EC4E  F024         	call	i2_getKeypad	;wreg free
  3727   004424  C001  F045         	movff	?i2_getKeypad,i2getValue@value4
  3728   004428  C002  F046         	movff	?i2_getKeypad+1,i2getValue@value4+1
  3729   00442C                     i2l2362:
  3730                           
  3731                           ;./keypad.h: 169:     while(value4 < 0 || value4 > 9){
  3732   00442C  BE46               	btfsc	(i2getValue@value4+1)^0,7,c
  3733   00442E  EF1B  F022         	goto	i2u266_41
  3734   004432  EF1D  F022         	goto	i2u266_40
  3735   004436                     i2u266_41:
  3736   004436  EF10  F022         	goto	i2l2360
  3737   00443A                     i2u266_40:
  3738   00443A  BE46               	btfsc	(i2getValue@value4+1)^0,7,c
  3739   00443C  EF2B  F022         	goto	i2u267_40
  3740   004440  5046               	movf	(i2getValue@value4+1)^0,w,c
  3741   004442  E107               	bnz	i2u267_41
  3742   004444  0E0A               	movlw	10
  3743   004446  5C45               	subwf	i2getValue@value4^0,w,c
  3744   004448  B0D8               	btfsc	status,0,c
  3745   00444A  EF29  F022         	goto	i2u267_41
  3746   00444E  EF2B  F022         	goto	i2u267_40
  3747   004452                     i2u267_41:
  3748   004452  EF10  F022         	goto	i2l2360
  3749   004456                     i2u267_40:
  3750   004456                     
  3751                           ;./keypad.h: 172:     sprintf(data,"%d",value4);
  3752   004456  0E33               	movlw	low i2getValue@data
  3753   004458  6E1A               	movwf	i2sprintf@s^0,c
  3754   00445A  0E45               	movlw	low STR_2
  3755   00445C  6E1B               	movwf	i2sprintf@fmt^0,c
  3756   00445E  C045  F01C         	movff	i2getValue@value4,?i2_sprintf+2
  3757   004462  C046  F01D         	movff	i2getValue@value4+1,?i2_sprintf+3
  3758   004466  EC34  F02A         	call	i2_sprintf	;wreg free
  3759   00446A                     
  3760                           ;./keypad.h: 173:     LCD_String_xy(2,3,data);
  3761   00446A  0E03               	movlw	3
  3762   00446C  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3763   00446E  0E33               	movlw	low i2getValue@data
  3764   004470  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3765   004472  6A0C               	clrf	(i2LCD_String_xy@msg+1)^0,c
  3766   004474  0E02               	movlw	2
  3767   004476  ECC1  F029         	call	i2_LCD_String_xy
  3768   00447A                     
  3769                           ;./keypad.h: 175:     decimalValue = (value1 * 1000)+(value2 * 100)+(value3 * 10) + (val
      +                          ue4);
  3770   00447A  C03F  F001         	movff	i2getValue@value1,i2___wmul@multiplier
  3771   00447E  C040  F002         	movff	i2getValue@value1+1,i2___wmul@multiplier+1
  3772   004482  0E03               	movlw	3
  3773   004484  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3774   004486  0EE8               	movlw	232
  3775   004488  6E03               	movwf	i2___wmul@multiplicand^0,c
  3776   00448A  ECAD  F02A         	call	i2___wmul	;wreg free
  3777   00448E  C001  F02D         	movff	?i2___wmul,??i2_getValue
  3778   004492  C002  F02E         	movff	?i2___wmul+1,??i2_getValue+1
  3779   004496  C041  F001         	movff	i2getValue@value2,i2___wmul@multiplier
  3780   00449A  C042  F002         	movff	i2getValue@value2+1,i2___wmul@multiplier+1
  3781   00449E  0E00               	movlw	0
  3782   0044A0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3783   0044A2  0E64               	movlw	100
  3784   0044A4  6E03               	movwf	i2___wmul@multiplicand^0,c
  3785   0044A6  ECAD  F02A         	call	i2___wmul	;wreg free
  3786   0044AA  5001               	movf	?i2___wmul^0,w,c
  3787   0044AC  242D               	addwf	??i2_getValue^0,w,c
  3788   0044AE  6E2F               	movwf	(??i2_getValue+2)^0,c
  3789   0044B0  5002               	movf	(?i2___wmul+1)^0,w,c
  3790   0044B2  202E               	addwfc	(??i2_getValue+1)^0,w,c
  3791   0044B4  6E30               	movwf	(??i2_getValue+3)^0,c
  3792   0044B6  C043  F001         	movff	i2getValue@value3,i2___wmul@multiplier
  3793   0044BA  C044  F002         	movff	i2getValue@value3+1,i2___wmul@multiplier+1
  3794   0044BE  0E00               	movlw	0
  3795   0044C0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3796   0044C2  0E0A               	movlw	10
  3797   0044C4  6E03               	movwf	i2___wmul@multiplicand^0,c
  3798   0044C6  ECAD  F02A         	call	i2___wmul	;wreg free
  3799   0044CA  5001               	movf	?i2___wmul^0,w,c
  3800   0044CC  242F               	addwf	(??i2_getValue+2)^0,w,c
  3801   0044CE  6E31               	movwf	(??i2_getValue+4)^0,c
  3802   0044D0  5002               	movf	(?i2___wmul+1)^0,w,c
  3803   0044D2  2030               	addwfc	(??i2_getValue+3)^0,w,c
  3804   0044D4  6E32               	movwf	(??i2_getValue+5)^0,c
  3805   0044D6  5045               	movf	i2getValue@value4^0,w,c
  3806   0044D8  2431               	addwf	(??i2_getValue+4)^0,w,c
  3807   0044DA  6E3D               	movwf	i2getValue@decimalValue^0,c
  3808   0044DC  5046               	movf	(i2getValue@value4+1)^0,w,c
  3809   0044DE  2032               	addwfc	(??i2_getValue+5)^0,w,c
  3810   0044E0  6E3E               	movwf	(i2getValue@decimalValue+1)^0,c
  3811   0044E2                     
  3812                           ;./keypad.h: 176:     return decimalValue;
  3813   0044E2  C03D  F02B         	movff	i2getValue@decimalValue,?i2_getValue
  3814   0044E6  C03E  F02C         	movff	i2getValue@decimalValue+1,?i2_getValue+1
  3815   0044EA  0012               	return		;funcret
  3816   0044EC                     __end_ofi2_getValue:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function i2_sprintf *****************
  3820 ;; Defined at:
  3821 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  s               1   25[COMRAM] PTR unsigned char 
  3824 ;;		 -> i2getValue@data(10), getValue@data(10), 
  3825 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  3826 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  f              12   30[COMRAM] struct _IO_FILE
  3829 ;;  ret             2    0        int 
  3830 ;;  ap              1   29[COMRAM] PTR void [1]
  3831 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  2   25[COMRAM] int 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3842 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3844 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3845 ;;Total ram usage:       17 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 4
  3848 ;; This function calls:
  3849 ;;		i2_vfprintf
  3850 ;; This function is called by:
  3851 ;;		i2_getValue
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text24
  3856   005468                     __ptext24:
  3857                           	callstack 0
  3858   005468                     i2_sprintf:
  3859                           	callstack 18
  3860   005468  0E1C               	movlw	low (?i2_sprintf+2)
  3861   00546A  6E1E               	movwf	i2sprintf@ap^0,c
  3862   00546C  C01A  F01F         	movff	i2sprintf@s,i2sprintf@f
  3863   005470  0E00               	movlw	0
  3864   005472  6E23               	movwf	(i2sprintf@f+4)^0,c
  3865   005474  0E00               	movlw	0
  3866   005476  6E22               	movwf	(i2sprintf@f+3)^0,c
  3867   005478  0E00               	movlw	0
  3868   00547A  6E2A               	movwf	(i2sprintf@f+11)^0,c
  3869   00547C  0E00               	movlw	0
  3870   00547E  6E29               	movwf	(i2sprintf@f+10)^0,c
  3871   005480  0E1F               	movlw	low i2sprintf@f
  3872   005482  6E16               	movwf	i2vfprintf@fp^0,c
  3873   005484  C01B  F017         	movff	i2sprintf@fmt,i2vfprintf@fmt
  3874   005488  0E1E               	movlw	low i2sprintf@ap
  3875   00548A  6E18               	movwf	i2vfprintf@ap^0,c
  3876   00548C  ECA1  F029         	call	i2_vfprintf	;wreg free
  3877   005490  501A               	movf	i2sprintf@s^0,w,c
  3878   005492  2422               	addwf	(i2sprintf@f+3)^0,w,c
  3879   005494  6ED9               	movwf	fsr2l,c
  3880   005496  6ADA               	clrf	fsr2h,c
  3881   005498  6ADF               	clrf	indf2,c
  3882   00549A  0012               	return		;funcret
  3883   00549C                     __end_ofi2_sprintf:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function i2_vfprintf *****************
  3887 ;; Defined at:
  3888 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  3891 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  3892 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  3893 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  3894 ;;  ap              1   23[COMRAM] PTR PTR void 
  3895 ;;		 -> i2sprintf@ap(1), sprintf@ap(1), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  3898 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2   21[COMRAM] int 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3908 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3912 ;;Total ram usage:        4 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 3
  3915 ;; This function calls:
  3916 ;;		i2_vfpfcnvrt
  3917 ;; This function is called by:
  3918 ;;		i2_sprintf
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text25
  3923   005342                     __ptext25:
  3924                           	callstack 0
  3925   005342                     i2_vfprintf:
  3926                           	callstack 18
  3927   005342                     
  3928                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3929   005342  C017  F019         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  3930                           
  3931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3932   005346  EFAD  F029         	goto	i2l2106
  3933   00534A                     i2l2104:
  3934                           
  3935                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3936   00534A  C016  F00B         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  3937   00534E  0E19               	movlw	low i2vfprintf@cfmt
  3938   005350  6E0C               	movwf	i2vfpfcnvrt@fmt^0,c
  3939   005352  C018  F00D         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  3940   005356  EC33  F025         	call	i2_vfpfcnvrt	;wreg free
  3941   00535A                     i2l2106:
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3944   00535A  0060  F067  FFF6   	movff	i2vfprintf@cfmt,tblptrl
  3945   005360                     	if	1	;There is more than 1 active tblptr byte
  3946   005360  0E20               	movlw	high __smallconst
  3947   005362  6EF7               	movwf	tblptrh,c
  3948   005364                     	endif
  3949   005364                     	if	0	;tblptru may be non-zero
  3950   005364                     	endif
  3951   005364                     	if	0	;tblptru may be non-zero
  3952   005364                     	endif
  3953   005364  0008               	tblrd		*
  3954   005366  50F5               	movf	tablat,w,c
  3955   005368  0900               	iorlw	0
  3956   00536A  A4D8               	btfss	status,2,c
  3957   00536C  EFBA  F029         	goto	i2u201_41
  3958   005370  EFBC  F029         	goto	i2u201_40
  3959   005374                     i2u201_41:
  3960   005374  EFA5  F029         	goto	i2l2104
  3961   005378                     i2u201_40:
  3962   005378                     
  3963                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3964   005378  0E00               	movlw	0
  3965   00537A  6E17               	movwf	(?i2_vfprintf+1)^0,c
  3966   00537C  0E00               	movlw	0
  3967   00537E  6E16               	movwf	?i2_vfprintf^0,c
  3968   005380  0012               	return		;funcret
  3969   005382                     __end_ofi2_vfprintf:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function i2_vfpfcnvrt *****************
  3973 ;; Defined at:
  3974 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3977 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  3978 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  3979 ;;		 -> i2vfprintf@cfmt(1), vfprintf@cfmt(1), 
  3980 ;;  ap              1   12[COMRAM] PTR PTR void 
  3981 ;;		 -> i2sprintf@ap(1), sprintf@ap(1), 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  convarg         4   16[COMRAM] struct .
  3984 ;;  c               1   20[COMRAM] unsigned char 
  3985 ;;  cp              1   15[COMRAM] PTR unsigned char 
  3986 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  3987 ;;  done            1   14[COMRAM] _Bool 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3997 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3998 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4000 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4001 ;;Total ram usage:       11 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 2
  4004 ;; This function calls:
  4005 ;;		i2___awdiv
  4006 ;;		i2___awmod
  4007 ;;		i2_abs
  4008 ;;		i2_fputc
  4009 ;; This function is called by:
  4010 ;;		i2_vfprintf
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text26
  4015   004A66                     __ptext26:
  4016                           	callstack 0
  4017   004A66                     i2_vfpfcnvrt:
  4018                           	callstack 18
  4019   004A66                     
  4020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4021   004A66  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4022   004A68  6ED9               	movwf	fsr2l,c
  4023   004A6A  6ADA               	clrf	fsr2h,c
  4024   004A6C  006F FF7F FFF6     	movff	indf2,tblptrl
  4025   004A72                     	if	1	;There is more than 1 active tblptr byte
  4026   004A72  0E20               	movlw	high __smallconst
  4027   004A74  6EF7               	movwf	tblptrh,c
  4028   004A76                     	endif
  4029   004A76                     	if	0	;tblptru may be non-zero
  4030   004A76                     	endif
  4031   004A76                     	if	0	;tblptru may be non-zero
  4032   004A76                     	endif
  4033   004A76  0008               	tblrd		*
  4034   004A78  50F5               	movf	tablat,w,c
  4035   004A7A  0A25               	xorlw	37
  4036   004A7C  A4D8               	btfss	status,2,c
  4037   004A7E  EF43  F025         	goto	i2u184_41
  4038   004A82  EF45  F025         	goto	i2u184_40
  4039   004A86                     i2u184_41:
  4040   004A86  EF03  F026         	goto	i2l2046
  4041   004A8A                     i2u184_40:
  4042   004A8A                     
  4043                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4044   004A8A  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4045   004A8C  6ED9               	movwf	fsr2l,c
  4046   004A8E  6ADA               	clrf	fsr2h,c
  4047   004A90  2ADF               	incf	indf2,f,c
  4048   004A92                     
  4049                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4050   004A92  0E00               	movlw	0
  4051   004A94  0100               	movlb	0	; () banked
  4052   004A96  6FC7               	movwf	(_width+1)& (0+255),b
  4053   004A98  0E00               	movlw	0
  4054   004A9A  6FC6               	movwf	_width& (0+255),b
  4055   004A9C  C0C6  F0CC         	movff	_width,_flags
  4056   004AA0                     
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4059   004AA0  69C8               	setf	_prec& (0+255),b
  4060   004AA2  69C9               	setf	(_prec+1)& (0+255),b
  4061   004AA4                     
  4062                           ; BSR set to: 0
  4063                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4064   004AA4  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4065   004AA6  6ED9               	movwf	fsr2l,c
  4066   004AA8  6ADA               	clrf	fsr2h,c
  4067   004AAA  50DF               	movf	indf2,w,c
  4068   004AAC  6E10               	movwf	i2vfpfcnvrt@cp^0,c
  4069   004AAE                     
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4072   004AAE  0060  F043  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
  4073   004AB4                     	if	1	;There is more than 1 active tblptr byte
  4074   004AB4  0E20               	movlw	high __smallconst
  4075   004AB6  6EF7               	movwf	tblptrh,c
  4076   004AB8                     	endif
  4077   004AB8                     	if	0	;tblptru may be non-zero
  4078   004AB8                     	endif
  4079   004AB8                     	if	0	;tblptru may be non-zero
  4080   004AB8                     	endif
  4081   004AB8  0008               	tblrd		*
  4082   004ABA  50F5               	movf	tablat,w,c
  4083   004ABC  0A64               	xorlw	100
  4084   004ABE  B4D8               	btfsc	status,2,c
  4085   004AC0  EF64  F025         	goto	i2u185_41
  4086   004AC4  EF66  F025         	goto	i2u185_40
  4087   004AC8                     i2u185_41:
  4088   004AC8  EF75  F025         	goto	i2l2016
  4089   004ACC                     i2u185_40:
  4090   004ACC                     
  4091                           ; BSR set to: 0
  4092   004ACC  0060  F043  FFF6   	movff	i2vfpfcnvrt@cp,tblptrl
  4093   004AD2                     	if	1	;There is more than 1 active tblptr byte
  4094   004AD2  0E20               	movlw	high __smallconst
  4095   004AD4  6EF7               	movwf	tblptrh,c
  4096   004AD6                     	endif
  4097   004AD6                     	if	0	;tblptru may be non-zero
  4098   004AD6                     	endif
  4099   004AD6                     	if	0	;tblptru may be non-zero
  4100   004AD6                     	endif
  4101   004AD6  0008               	tblrd		*
  4102   004AD8  50F5               	movf	tablat,w,c
  4103   004ADA  0A69               	xorlw	105
  4104   004ADC  A4D8               	btfss	status,2,c
  4105   004ADE  EF73  F025         	goto	i2u186_41
  4106   004AE2  EF75  F025         	goto	i2u186_40
  4107   004AE6                     i2u186_41:
  4108   004AE6  EFFD  F025         	goto	i2l2042
  4109   004AEA                     i2u186_40:
  4110   004AEA                     i2l2016:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4114   004AEA  500D               	movf	i2vfpfcnvrt@ap^0,w,c
  4115   004AEC  6ED9               	movwf	fsr2l,c
  4116   004AEE  6ADA               	clrf	fsr2h,c
  4117   004AF0  0E02               	movlw	2
  4118   004AF2  26DF               	addwf	indf2,f,c
  4119   004AF4  5CDF               	subwf	indf2,w,c
  4120   004AF6  6ED9               	movwf	fsr2l,c
  4121   004AF8  6ADA               	clrf	fsr2h,c
  4122   004AFA  006F FF78  F011    	movff	postinc2,i2vfpfcnvrt@convarg
  4123   004B00  006F FF78  F012    	movff	postinc2,i2vfpfcnvrt@convarg+1
  4124   004B06                     
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4127   004B06  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4128   004B08  6ED9               	movwf	fsr2l,c
  4129   004B0A  6ADA               	clrf	fsr2h,c
  4130   004B0C  2810               	incf	i2vfpfcnvrt@cp^0,w,c
  4131   004B0E  6EDF               	movwf	indf2,c
  4132   004B10                     
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4135   004B10  0E20               	movlw	32
  4136   004B12  6E15               	movwf	i2vfpfcnvrt@c^0,c
  4137                           
  4138                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4139   004B14  BE12               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
  4140   004B16  EF8F  F025         	goto	i2u187_41
  4141   004B1A  EF92  F025         	goto	i2u187_40
  4142   004B1E                     i2u187_41:
  4143   004B1E  0E01               	movlw	1
  4144   004B20  EF93  F025         	goto	i2u188_40
  4145   004B24                     i2u187_40:
  4146   004B24  0E00               	movlw	0
  4147   004B26                     i2u188_40:
  4148   004B26  6E0F               	movwf	i2vfpfcnvrt@done^0,c
  4149   004B28                     i2l2022:
  4150                           
  4151                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4152   004B28  0615               	decf	i2vfpfcnvrt@c^0,f,c
  4153   004B2A  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4154   004B2C  0FA6               	addlw	low _dbuf
  4155   004B2E  6ED9               	movwf	fsr2l,c
  4156   004B30  6ADA               	clrf	fsr2h,c
  4157   004B32  C011  F001         	movff	i2vfpfcnvrt@convarg,i2___awmod@dividend
  4158   004B36  C012  F002         	movff	i2vfpfcnvrt@convarg+1,i2___awmod@dividend+1
  4159   004B3A  0E00               	movlw	0
  4160   004B3C  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  4161   004B3E  0E0A               	movlw	10
  4162   004B40  6E03               	movwf	i2___awmod@divisor^0,c
  4163   004B42  EC9A  F027         	call	i2___awmod	;wreg free
  4164   004B46  C001  F007         	movff	?i2___awmod,i2abs@a
  4165   004B4A  C002  F008         	movff	?i2___awmod+1,i2abs@a+1
  4166   004B4E  EC4E  F02A         	call	i2_abs	;wreg free
  4167   004B52  5007               	movf	?i2_abs^0,w,c
  4168   004B54  0F30               	addlw	48
  4169   004B56  6EDF               	movwf	indf2,c
  4170   004B58                     
  4171                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4172   004B58  C011  F001         	movff	i2vfpfcnvrt@convarg,i2___awdiv@dividend
  4173   004B5C  C012  F002         	movff	i2vfpfcnvrt@convarg+1,i2___awdiv@dividend+1
  4174   004B60  0E00               	movlw	0
  4175   004B62  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
  4176   004B64  0E0A               	movlw	10
  4177   004B66  6E03               	movwf	i2___awdiv@divisor^0,c
  4178   004B68  ECDF  F026         	call	i2___awdiv	;wreg free
  4179   004B6C  C001  F011         	movff	?i2___awdiv,i2vfpfcnvrt@convarg
  4180   004B70  C002  F012         	movff	?i2___awdiv+1,i2vfpfcnvrt@convarg+1
  4181   004B74                     
  4182                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4183   004B74  5011               	movf	i2vfpfcnvrt@convarg^0,w,c
  4184   004B76  1012               	iorwf	(i2vfpfcnvrt@convarg+1)^0,w,c
  4185   004B78  B4D8               	btfsc	status,2,c
  4186   004B7A  EFC1  F025         	goto	i2u189_41
  4187   004B7E  EFC3  F025         	goto	i2u189_40
  4188   004B82                     i2u189_41:
  4189   004B82  EFCB  F025         	goto	i2l2030
  4190   004B86                     i2u189_40:
  4191   004B86  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4192   004B88  A4D8               	btfss	status,2,c
  4193   004B8A  EFC9  F025         	goto	i2u190_41
  4194   004B8E  EFCB  F025         	goto	i2u190_40
  4195   004B92                     i2u190_41:
  4196   004B92  EF94  F025         	goto	i2l2022
  4197   004B96                     i2u190_40:
  4198   004B96                     i2l2030:
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4201   004B96  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4202   004B98  B4D8               	btfsc	status,2,c
  4203   004B9A  EFD1  F025         	goto	i2u191_41
  4204   004B9E  EFD3  F025         	goto	i2u191_40
  4205   004BA2                     i2u191_41:
  4206   004BA2  EFF2  F025         	goto	i2l2040
  4207   004BA6                     i2u191_40:
  4208   004BA6  500F               	movf	i2vfpfcnvrt@done^0,w,c
  4209   004BA8  B4D8               	btfsc	status,2,c
  4210   004BAA  EFD9  F025         	goto	i2u192_41
  4211   004BAE  EFDB  F025         	goto	i2u192_40
  4212   004BB2                     i2u192_41:
  4213   004BB2  EFF2  F025         	goto	i2l2040
  4214   004BB6                     i2u192_40:
  4215   004BB6                     
  4216                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4217   004BB6  0615               	decf	i2vfpfcnvrt@c^0,f,c
  4218   004BB8  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4219   004BBA  0FA6               	addlw	low _dbuf
  4220   004BBC  6ED9               	movwf	fsr2l,c
  4221   004BBE  6ADA               	clrf	fsr2h,c
  4222   004BC0  0E2D               	movlw	45
  4223   004BC2  6EDF               	movwf	indf2,c
  4224   004BC4  EFF2  F025         	goto	i2l2040
  4225   004BC8                     i2l2036:
  4226                           
  4227                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4228   004BC8  5015               	movf	i2vfpfcnvrt@c^0,w,c
  4229   004BCA  0FA6               	addlw	low _dbuf
  4230   004BCC  6ED9               	movwf	fsr2l,c
  4231   004BCE  6ADA               	clrf	fsr2h,c
  4232   004BD0  50DF               	movf	indf2,w,c
  4233   004BD2  6E0E               	movwf	??i2_vfpfcnvrt^0,c
  4234   004BD4  500E               	movf	??i2_vfpfcnvrt^0,w,c
  4235   004BD6  6E01               	movwf	i2fputc@c^0,c
  4236   004BD8  6A02               	clrf	(i2fputc@c+1)^0,c
  4237   004BDA  C00B  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4238   004BDE  EC49  F028         	call	i2_fputc	;wreg free
  4239   004BE2  2A15               	incf	i2vfpfcnvrt@c^0,f,c
  4240   004BE4                     i2l2040:
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4243   004BE4  0E20               	movlw	32
  4244   004BE6  1815               	xorwf	i2vfpfcnvrt@c^0,w,c
  4245   004BE8  A4D8               	btfss	status,2,c
  4246   004BEA  EFF9  F025         	goto	i2u193_41
  4247   004BEE  EFFB  F025         	goto	i2u193_40
  4248   004BF2                     i2u193_41:
  4249   004BF2  EFE4  F025         	goto	i2l2036
  4250   004BF6                     i2u193_40:
  4251   004BF6  EF15  F026         	goto	i2l932
  4252   004BFA                     i2l2042:
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4255   004BFA  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4256   004BFC  6ED9               	movwf	fsr2l,c
  4257   004BFE  6ADA               	clrf	fsr2h,c
  4258   004C00  2ADF               	incf	indf2,f,c
  4259   004C02  EF15  F026         	goto	i2l932
  4260   004C06                     i2l2046:
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4263   004C06  500C               	movf	i2vfpfcnvrt@fmt^0,w,c
  4264   004C08  6ED9               	movwf	fsr2l,c
  4265   004C0A  6ADA               	clrf	fsr2h,c
  4266   004C0C  006F FF7F FFF6     	movff	indf2,tblptrl
  4267   004C12                     	if	1	;There is more than 1 active tblptr byte
  4268   004C12  0E20               	movlw	high __smallconst
  4269   004C14  6EF7               	movwf	tblptrh,c
  4270   004C16                     	endif
  4271   004C16                     	if	0	;tblptru may be non-zero
  4272   004C16                     	endif
  4273   004C16                     	if	0	;tblptru may be non-zero
  4274   004C16                     	endif
  4275   004C16  0008               	tblrd		*
  4276   004C18  50F5               	movf	tablat,w,c
  4277   004C1A  6E01               	movwf	i2fputc@c^0,c
  4278   004C1C  6A02               	clrf	(i2fputc@c+1)^0,c
  4279   004C1E  C00B  F003         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  4280   004C22  EC49  F028         	call	i2_fputc	;wreg free
  4281   004C26  EFFD  F025         	goto	i2l2042
  4282   004C2A                     i2l932:
  4283   004C2A  0012               	return		;funcret
  4284   004C2C                     __end_ofi2_vfpfcnvrt:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function i2_fputc *****************
  4288 ;; Defined at:
  4289 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  c               2    0[COMRAM] int 
  4292 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4293 ;;		 -> i2sprintf@f(12), sprintf@f(12), 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  2    0[COMRAM] int 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4305 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4307 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4308 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4309 ;;Total ram usage:        8 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 1
  4312 ;; This function calls:
  4313 ;;		i2_putch
  4314 ;; This function is called by:
  4315 ;;		i2_vfpfcnvrt
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text27
  4320   005092                     __ptext27:
  4321                           	callstack 0
  4322   005092                     i2_fputc:
  4323                           	callstack 18
  4324   005092  5003               	movf	i2fputc@fp^0,w,c
  4325   005094  B4D8               	btfsc	status,2,c
  4326   005096  EF4F  F028         	goto	i2u170_41
  4327   00509A  EF51  F028         	goto	i2u170_40
  4328   00509E                     i2u170_41:
  4329   00509E  EF59  F028         	goto	i2l1918
  4330   0050A2                     i2u170_40:
  4331   0050A2  5003               	movf	i2fputc@fp^0,w,c
  4332   0050A4  A4D8               	btfss	status,2,c
  4333   0050A6  EF57  F028         	goto	i2u171_41
  4334   0050AA  EF59  F028         	goto	i2u171_40
  4335   0050AE                     i2u171_41:
  4336   0050AE  EF5E  F028         	goto	i2l1920
  4337   0050B2                     i2u171_40:
  4338   0050B2                     i2l1918:
  4339   0050B2  5001               	movf	i2fputc@c^0,w,c
  4340   0050B4  EC2F  F02B         	call	i2_putch
  4341   0050B8  EF9E  F028         	goto	i2l957
  4342   0050BC                     i2l1920:
  4343   0050BC  5003               	movf	i2fputc@fp^0,w,c
  4344   0050BE  6ED9               	movwf	fsr2l,c
  4345   0050C0  6ADA               	clrf	fsr2h,c
  4346   0050C2  0E0A               	movlw	10
  4347   0050C4  26D9               	addwf	fsr2l,f,c
  4348   0050C6  50DE               	movf	postinc2,w,c
  4349   0050C8  10DE               	iorwf	postinc2,w,c
  4350   0050CA  B4D8               	btfsc	status,2,c
  4351   0050CC  EF6A  F028         	goto	i2u172_41
  4352   0050D0  EF6C  F028         	goto	i2u172_40
  4353   0050D4                     i2u172_41:
  4354   0050D4  EF85  F028         	goto	i2l1924
  4355   0050D8                     i2u172_40:
  4356   0050D8  5003               	movf	i2fputc@fp^0,w,c
  4357   0050DA  6ED9               	movwf	fsr2l,c
  4358   0050DC  6ADA               	clrf	fsr2h,c
  4359   0050DE  0E0A               	movlw	10
  4360   0050E0  26D9               	addwf	fsr2l,f,c
  4361   0050E2  5003               	movf	i2fputc@fp^0,w,c
  4362   0050E4  6EE1               	movwf	fsr1l,c
  4363   0050E6  6AE2               	clrf	fsr1h,c
  4364   0050E8  0E03               	movlw	3
  4365   0050EA  26E1               	addwf	fsr1l,f,c
  4366   0050EC  50DE               	movf	postinc2,w,c
  4367   0050EE  5CE6               	subwf	postinc1,w,c
  4368   0050F0  50E6               	movf	postinc1,w,c
  4369   0050F2  0A80               	xorlw	128
  4370   0050F4  6E08               	movwf	(??i2_fputc+4)^0,c
  4371   0050F6  50DE               	movf	postinc2,w,c
  4372   0050F8  0A80               	xorlw	128
  4373   0050FA  5808               	subwfb	(??i2_fputc+4)^0,w,c
  4374   0050FC  B0D8               	btfsc	status,0,c
  4375   0050FE  EF83  F028         	goto	i2u173_41
  4376   005102  EF85  F028         	goto	i2u173_40
  4377   005106                     i2u173_41:
  4378   005106  EF9E  F028         	goto	i2l957
  4379   00510A                     i2u173_40:
  4380   00510A                     i2l1924:
  4381   00510A  5003               	movf	i2fputc@fp^0,w,c
  4382   00510C  6ED9               	movwf	fsr2l,c
  4383   00510E  6ADA               	clrf	fsr2h,c
  4384   005110  0E03               	movlw	3
  4385   005112  26D9               	addwf	fsr2l,f,c
  4386   005114  50DF               	movf	indf2,w,c
  4387   005116  6E04               	movwf	??i2_fputc^0,c
  4388   005118  5003               	movf	i2fputc@fp^0,w,c
  4389   00511A  6ED9               	movwf	fsr2l,c
  4390   00511C  6ADA               	clrf	fsr2h,c
  4391   00511E  50DF               	movf	indf2,w,c
  4392   005120  2404               	addwf	??i2_fputc^0,w,c
  4393   005122  6ED9               	movwf	fsr2l,c
  4394   005124  6ADA               	clrf	fsr2h,c
  4395   005126  0060  F007  FFDF   	movff	i2fputc@c,indf2
  4396   00512C  5003               	movf	i2fputc@fp^0,w,c
  4397   00512E  6ED9               	movwf	fsr2l,c
  4398   005130  6ADA               	clrf	fsr2h,c
  4399   005132  0E03               	movlw	3
  4400   005134  26D9               	addwf	fsr2l,f,c
  4401   005136  2ADE               	incf	postinc2,f,c
  4402   005138  0E00               	movlw	0
  4403   00513A  22DD               	addwfc	postdec2,f,c
  4404   00513C                     i2l957:
  4405   00513C  0012               	return		;funcret
  4406   00513E                     __end_ofi2_fputc:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function i2_putch *****************
  4410 ;; Defined at:
  4411 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  c               1    wreg     unsigned char 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  c               1  (no storage) unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4429 ;;Total ram usage:        0 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		i2_fputc
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text28
  4439   00565E                     __ptext28:
  4440                           	callstack 0
  4441   00565E                     i2_putch:
  4442                           	callstack 18
  4443   00565E  0012               	return		;funcret
  4444   005660                     __end_ofi2_putch:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function i2_abs *****************
  4448 ;; Defined at:
  4449 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  a               2    6[COMRAM] int 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  2    6[COMRAM] int 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4467 ;;Total ram usage:        4 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		i2_vfpfcnvrt
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text29
  4477   00549C                     __ptext29:
  4478                           	callstack 0
  4479   00549C                     i2_abs:
  4480                           	callstack 19
  4481   00549C  BE08               	btfsc	(i2abs@a+1)^0,7,c
  4482   00549E  EF53  F02A         	goto	i2u169_41
  4483   0054A2  EF55  F02A         	goto	i2u169_40
  4484   0054A6                     i2u169_41:
  4485   0054A6  EF5B  F02A         	goto	i2l942
  4486   0054AA                     i2u169_40:
  4487   0054AA  C007  F007         	movff	i2abs@a,?i2_abs
  4488   0054AE  C008  F008         	movff	i2abs@a+1,?i2_abs+1
  4489   0054B2  EF67  F02A         	goto	i2l945
  4490   0054B6                     i2l942:
  4491   0054B6  C007  F009         	movff	i2abs@a,??i2_abs
  4492   0054BA  C008  F00A         	movff	i2abs@a+1,??i2_abs+1
  4493   0054BE  1E09               	comf	??i2_abs^0,f,c
  4494   0054C0  1E0A               	comf	(??i2_abs+1)^0,f,c
  4495   0054C2  4A09               	infsnz	??i2_abs^0,f,c
  4496   0054C4  2A0A               	incf	(??i2_abs+1)^0,f,c
  4497   0054C6  C009  F007         	movff	??i2_abs,?i2_abs
  4498   0054CA  C00A  F008         	movff	??i2_abs+1,?i2_abs+1
  4499   0054CE                     i2l945:
  4500   0054CE  0012               	return		;funcret
  4501   0054D0                     __end_ofi2_abs:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function i2___awmod *****************
  4505 ;; Defined at:
  4506 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  dividend        2    0[COMRAM] int 
  4509 ;;  divisor         2    2[COMRAM] int 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  sign            1    5[COMRAM] unsigned char 
  4512 ;;  counter         1    4[COMRAM] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  2    0[COMRAM] int 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4525 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4526 ;;Total ram usage:        6 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		i2_vfpfcnvrt
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text30
  4536   004F34                     __ptext30:
  4537                           	callstack 0
  4538   004F34                     i2___awmod:
  4539                           	callstack 19
  4540   004F34  0E00               	movlw	0
  4541   004F36  6E06               	movwf	i2___awmod@sign^0,c
  4542   004F38  BE02               	btfsc	(i2___awmod@dividend+1)^0,7,c
  4543   004F3A  EFA3  F027         	goto	i2u163_40
  4544   004F3E  EFA1  F027         	goto	i2u163_41
  4545   004F42                     i2u163_41:
  4546   004F42  EFA9  F027         	goto	i2l1882
  4547   004F46                     i2u163_40:
  4548   004F46  6C01               	negf	i2___awmod@dividend^0,c
  4549   004F48  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4550   004F4A  B0D8               	btfsc	status,0,c
  4551   004F4C  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4552   004F4E  0E01               	movlw	1
  4553   004F50  6E06               	movwf	i2___awmod@sign^0,c
  4554   004F52                     i2l1882:
  4555   004F52  BE04               	btfsc	(i2___awmod@divisor+1)^0,7,c
  4556   004F54  EFB0  F027         	goto	i2u164_40
  4557   004F58  EFAE  F027         	goto	i2u164_41
  4558   004F5C                     i2u164_41:
  4559   004F5C  EFB4  F027         	goto	i2l1886
  4560   004F60                     i2u164_40:
  4561   004F60  6C03               	negf	i2___awmod@divisor^0,c
  4562   004F62  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  4563   004F64  B0D8               	btfsc	status,0,c
  4564   004F66  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  4565   004F68                     i2l1886:
  4566   004F68  5003               	movf	i2___awmod@divisor^0,w,c
  4567   004F6A  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  4568   004F6C  B4D8               	btfsc	status,2,c
  4569   004F6E  EFBB  F027         	goto	i2u165_41
  4570   004F72  EFBD  F027         	goto	i2u165_40
  4571   004F76                     i2u165_41:
  4572   004F76  EFE1  F027         	goto	i2l1902
  4573   004F7A                     i2u165_40:
  4574   004F7A  0E01               	movlw	1
  4575   004F7C  6E05               	movwf	i2___awmod@counter^0,c
  4576   004F7E  EFC5  F027         	goto	i2l1892
  4577   004F82                     i2l1890:
  4578   004F82  90D8               	bcf	status,0,c
  4579   004F84  3603               	rlcf	i2___awmod@divisor^0,f,c
  4580   004F86  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  4581   004F88  2A05               	incf	i2___awmod@counter^0,f,c
  4582   004F8A                     i2l1892:
  4583   004F8A  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  4584   004F8C  EFCA  F027         	goto	i2u166_41
  4585   004F90  EFCC  F027         	goto	i2u166_40
  4586   004F94                     i2u166_41:
  4587   004F94  EFC1  F027         	goto	i2l1890
  4588   004F98                     i2u166_40:
  4589   004F98                     i2l1894:
  4590   004F98  5003               	movf	i2___awmod@divisor^0,w,c
  4591   004F9A  5C01               	subwf	i2___awmod@dividend^0,w,c
  4592   004F9C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4593   004F9E  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  4594   004FA0  A0D8               	btfss	status,0,c
  4595   004FA2  EFD5  F027         	goto	i2u167_41
  4596   004FA6  EFD7  F027         	goto	i2u167_40
  4597   004FAA                     i2u167_41:
  4598   004FAA  EFDB  F027         	goto	i2l1898
  4599   004FAE                     i2u167_40:
  4600   004FAE  5003               	movf	i2___awmod@divisor^0,w,c
  4601   004FB0  5E01               	subwf	i2___awmod@dividend^0,f,c
  4602   004FB2  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  4603   004FB4  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  4604   004FB6                     i2l1898:
  4605   004FB6  90D8               	bcf	status,0,c
  4606   004FB8  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  4607   004FBA  3203               	rrcf	i2___awmod@divisor^0,f,c
  4608   004FBC  2E05               	decfsz	i2___awmod@counter^0,f,c
  4609   004FBE  EFCC  F027         	goto	i2l1894
  4610   004FC2                     i2l1902:
  4611   004FC2  5006               	movf	i2___awmod@sign^0,w,c
  4612   004FC4  B4D8               	btfsc	status,2,c
  4613   004FC6  EFE7  F027         	goto	i2u168_41
  4614   004FCA  EFE9  F027         	goto	i2u168_40
  4615   004FCE                     i2u168_41:
  4616   004FCE  EFED  F027         	goto	i2l1906
  4617   004FD2                     i2u168_40:
  4618   004FD2  6C01               	negf	i2___awmod@dividend^0,c
  4619   004FD4  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  4620   004FD6  B0D8               	btfsc	status,0,c
  4621   004FD8  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  4622   004FDA                     i2l1906:
  4623   004FDA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  4624   004FDE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  4625   004FE2  0012               	return		;funcret
  4626   004FE4                     __end_ofi2___awmod:
  4627                           	callstack 0
  4628                           
  4629 ;; *************** function i2___awdiv *****************
  4630 ;; Defined at:
  4631 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;  dividend        2    0[COMRAM] int 
  4634 ;;  divisor         2    2[COMRAM] int 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  quotient        2    6[COMRAM] int 
  4637 ;;  sign            1    5[COMRAM] unsigned char 
  4638 ;;  counter         1    4[COMRAM] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2    0[COMRAM] int 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4649 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4651 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4652 ;;Total ram usage:        8 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		i2_vfpfcnvrt
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text31
  4662   004DBE                     __ptext31:
  4663                           	callstack 0
  4664   004DBE                     i2___awdiv:
  4665                           	callstack 19
  4666   004DBE  0E00               	movlw	0
  4667   004DC0  6E06               	movwf	i2___awdiv@sign^0,c
  4668   004DC2  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
  4669   004DC4  EFE8  F026         	goto	i2u157_40
  4670   004DC8  EFE6  F026         	goto	i2u157_41
  4671   004DCC                     i2u157_41:
  4672   004DCC  EFEE  F026         	goto	i2l1838
  4673   004DD0                     i2u157_40:
  4674   004DD0  6C03               	negf	i2___awdiv@divisor^0,c
  4675   004DD2  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
  4676   004DD4  B0D8               	btfsc	status,0,c
  4677   004DD6  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
  4678   004DD8  0E01               	movlw	1
  4679   004DDA  6E06               	movwf	i2___awdiv@sign^0,c
  4680   004DDC                     i2l1838:
  4681   004DDC  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
  4682   004DDE  EFF5  F026         	goto	i2u158_40
  4683   004DE2  EFF3  F026         	goto	i2u158_41
  4684   004DE6                     i2u158_41:
  4685   004DE6  EFFB  F026         	goto	i2l1844
  4686   004DEA                     i2u158_40:
  4687   004DEA  6C01               	negf	i2___awdiv@dividend^0,c
  4688   004DEC  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
  4689   004DEE  B0D8               	btfsc	status,0,c
  4690   004DF0  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
  4691   004DF2  0E01               	movlw	1
  4692   004DF4  1A06               	xorwf	i2___awdiv@sign^0,f,c
  4693   004DF6                     i2l1844:
  4694   004DF6  0E00               	movlw	0
  4695   004DF8  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
  4696   004DFA  0E00               	movlw	0
  4697   004DFC  6E07               	movwf	i2___awdiv@quotient^0,c
  4698   004DFE  5003               	movf	i2___awdiv@divisor^0,w,c
  4699   004E00  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  4700   004E02  B4D8               	btfsc	status,2,c
  4701   004E04  EF06  F027         	goto	i2u159_41
  4702   004E08  EF08  F027         	goto	i2u159_40
  4703   004E0C                     i2u159_41:
  4704   004E0C  EF30  F027         	goto	i2l1866
  4705   004E10                     i2u159_40:
  4706   004E10  0E01               	movlw	1
  4707   004E12  6E05               	movwf	i2___awdiv@counter^0,c
  4708   004E14  EF10  F027         	goto	i2l1852
  4709   004E18                     i2l1850:
  4710   004E18  90D8               	bcf	status,0,c
  4711   004E1A  3603               	rlcf	i2___awdiv@divisor^0,f,c
  4712   004E1C  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  4713   004E1E  2A05               	incf	i2___awdiv@counter^0,f,c
  4714   004E20                     i2l1852:
  4715   004E20  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
  4716   004E22  EF15  F027         	goto	i2u160_41
  4717   004E26  EF17  F027         	goto	i2u160_40
  4718   004E2A                     i2u160_41:
  4719   004E2A  EF0C  F027         	goto	i2l1850
  4720   004E2E                     i2u160_40:
  4721   004E2E                     i2l1854:
  4722   004E2E  90D8               	bcf	status,0,c
  4723   004E30  3607               	rlcf	i2___awdiv@quotient^0,f,c
  4724   004E32  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  4725   004E34  5003               	movf	i2___awdiv@divisor^0,w,c
  4726   004E36  5C01               	subwf	i2___awdiv@dividend^0,w,c
  4727   004E38  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  4728   004E3A  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  4729   004E3C  A0D8               	btfss	status,0,c
  4730   004E3E  EF23  F027         	goto	i2u161_41
  4731   004E42  EF25  F027         	goto	i2u161_40
  4732   004E46                     i2u161_41:
  4733   004E46  EF2A  F027         	goto	i2l1862
  4734   004E4A                     i2u161_40:
  4735   004E4A  5003               	movf	i2___awdiv@divisor^0,w,c
  4736   004E4C  5E01               	subwf	i2___awdiv@dividend^0,f,c
  4737   004E4E  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
  4738   004E50  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  4739   004E52  8007               	bsf	i2___awdiv@quotient^0,0,c
  4740   004E54                     i2l1862:
  4741   004E54  90D8               	bcf	status,0,c
  4742   004E56  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  4743   004E58  3203               	rrcf	i2___awdiv@divisor^0,f,c
  4744   004E5A  2E05               	decfsz	i2___awdiv@counter^0,f,c
  4745   004E5C  EF17  F027         	goto	i2l1854
  4746   004E60                     i2l1866:
  4747   004E60  5006               	movf	i2___awdiv@sign^0,w,c
  4748   004E62  B4D8               	btfsc	status,2,c
  4749   004E64  EF36  F027         	goto	i2u162_41
  4750   004E68  EF38  F027         	goto	i2u162_40
  4751   004E6C                     i2u162_41:
  4752   004E6C  EF3C  F027         	goto	i2l1870
  4753   004E70                     i2u162_40:
  4754   004E70  6C07               	negf	i2___awdiv@quotient^0,c
  4755   004E72  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  4756   004E74  B0D8               	btfsc	status,0,c
  4757   004E76  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  4758   004E78                     i2l1870:
  4759   004E78  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  4760   004E7C  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  4761   004E80  0012               	return		;funcret
  4762   004E82                     __end_ofi2___awdiv:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function i2_getKeypad *****************
  4766 ;; Defined at:
  4767 ;;		line 38 in file "./keypad.h"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  buttonNumber    2    2[COMRAM] int 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2    0[COMRAM] int 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4785 ;;Total ram usage:        4 bytes
  4786 ;; Hardware stack levels used: 1
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		i2_getValue
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text32
  4795   00489C                     __ptext32:
  4796                           	callstack 0
  4797   00489C                     i2_getKeypad:
  4798                           	callstack 22
  4799   00489C                     
  4800                           ;./keypad.h: 39:     int buttonNumber = -1;
  4801   00489C  6803               	setf	i2getKeypad@buttonNumber^0,c
  4802   00489E  6804               	setf	(i2getKeypad@buttonNumber+1)^0,c
  4803                           
  4804                           ;./keypad.h: 42:     PORTAbits.RA0 = 1;
  4805   0048A0  80CA               	bsf	202,0,c	;volatile
  4806                           
  4807                           ;./keypad.h: 43:     if(PORTAbits.RA4 == 1){
  4808   0048A2  A8CA               	btfss	202,4,c	;volatile
  4809   0048A4  EF56  F024         	goto	i2u228_41
  4810   0048A8  EF58  F024         	goto	i2u228_40
  4811   0048AC                     i2u228_41:
  4812   0048AC  EF63  F024         	goto	i2l117
  4813   0048B0                     i2u228_40:
  4814   0048B0                     
  4815                           ;./keypad.h: 45:         buttonNumber = 1;
  4816   0048B0  0E00               	movlw	0
  4817   0048B2  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  4818   0048B4  0E01               	movlw	1
  4819   0048B6  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  4820   0048B8                     i2l118:
  4821   0048B8  B8CA               	btfsc	202,4,c	;volatile
  4822   0048BA  EF61  F024         	goto	i2u229_41
  4823   0048BE  EF63  F024         	goto	i2u229_40
  4824   0048C2                     i2u229_41:
  4825   0048C2  EF5C  F024         	goto	i2l118
  4826   0048C6                     i2u229_40:
  4827   0048C6                     i2l117:
  4828                           
  4829                           ;./keypad.h: 48:     if(PORTAbits.RA5 == 1){
  4830   0048C6  AACA               	btfss	202,5,c	;volatile
  4831   0048C8  EF68  F024         	goto	i2u230_41
  4832   0048CC  EF6A  F024         	goto	i2u230_40
  4833   0048D0                     i2u230_41:
  4834   0048D0  EF75  F024         	goto	i2l121
  4835   0048D4                     i2u230_40:
  4836   0048D4                     
  4837                           ;./keypad.h: 50:         buttonNumber = 4;
  4838   0048D4  0E00               	movlw	0
  4839   0048D6  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  4840   0048D8  0E04               	movlw	4
  4841   0048DA  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  4842   0048DC                     i2l122:
  4843   0048DC  BACA               	btfsc	202,5,c	;volatile
  4844   0048DE  EF73  F024         	goto	i2u231_41
  4845   0048E2  EF75  F024         	goto	i2u231_40
  4846   0048E6                     i2u231_41:
  4847   0048E6  EF6E  F024         	goto	i2l122
  4848   0048EA                     i2u231_40:
  4849   0048EA                     i2l121:
  4850                           
  4851                           ;./keypad.h: 53:     if(PORTAbits.RA3 == 1){
  4852   0048EA  A6CA               	btfss	202,3,c	;volatile
  4853   0048EC  EF7A  F024         	goto	i2u232_41
  4854   0048F0  EF7C  F024         	goto	i2u232_40
  4855   0048F4                     i2u232_41:
  4856   0048F4  EF87  F024         	goto	i2l125
  4857   0048F8                     i2u232_40:
  4858   0048F8                     
  4859                           ;./keypad.h: 55:         buttonNumber = 7;
  4860   0048F8  0E00               	movlw	0
  4861   0048FA  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  4862   0048FC  0E07               	movlw	7
  4863   0048FE  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  4864   004900                     i2l126:
  4865   004900  B6CA               	btfsc	202,3,c	;volatile
  4866   004902  EF85  F024         	goto	i2u233_41
  4867   004906  EF87  F024         	goto	i2u233_40
  4868   00490A                     i2u233_41:
  4869   00490A  EF80  F024         	goto	i2l126
  4870   00490E                     i2u233_40:
  4871   00490E                     i2l125:
  4872                           
  4873                           ;./keypad.h: 58:     if(PORTCbits.RC4 == 1){
  4874   00490E  A8CC               	btfss	204,4,c	;volatile
  4875   004910  EF8C  F024         	goto	i2u234_41
  4876   004914  EF8E  F024         	goto	i2u234_40
  4877   004918                     i2u234_41:
  4878   004918  EF99  F024         	goto	i2l129
  4879   00491C                     i2u234_40:
  4880   00491C                     
  4881                           ;./keypad.h: 60:         buttonNumber = 15;
  4882   00491C  0E00               	movlw	0
  4883   00491E  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  4884   004920  0E0F               	movlw	15
  4885   004922  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  4886   004924                     i2l130:
  4887   004924  B8CC               	btfsc	204,4,c	;volatile
  4888   004926  EF97  F024         	goto	i2u235_41
  4889   00492A  EF99  F024         	goto	i2u235_40
  4890   00492E                     i2u235_41:
  4891   00492E  EF92  F024         	goto	i2l130
  4892   004932                     i2u235_40:
  4893   004932                     i2l129:
  4894                           
  4895                           ;./keypad.h: 63:     PORTAbits.RA0 = 0;
  4896   004932  90CA               	bcf	202,0,c	;volatile
  4897                           
  4898                           ;./keypad.h: 66:     PORTAbits.RA1 = 1;
  4899   004934  82CA               	bsf	202,1,c	;volatile
  4900                           
  4901                           ;./keypad.h: 67:     if(PORTAbits.RA4 == 1){
  4902   004936  A8CA               	btfss	202,4,c	;volatile
  4903   004938  EFA0  F024         	goto	i2u236_41
  4904   00493C  EFA2  F024         	goto	i2u236_40
  4905   004940                     i2u236_41:
  4906   004940  EFAD  F024         	goto	i2l133
  4907   004944                     i2u236_40:
  4908   004944                     
  4909                           ;./keypad.h: 69:         buttonNumber = 2;
  4910   004944  0E00               	movlw	0
  4911   004946  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  4912   004948  0E02               	movlw	2
  4913   00494A  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  4914   00494C                     i2l134:
  4915   00494C  B8CA               	btfsc	202,4,c	;volatile
  4916   00494E  EFAB  F024         	goto	i2u237_41
  4917   004952  EFAD  F024         	goto	i2u237_40
  4918   004956                     i2u237_41:
  4919   004956  EFA6  F024         	goto	i2l134
  4920   00495A                     i2u237_40:
  4921   00495A                     i2l133:
  4922                           
  4923                           ;./keypad.h: 72:     if(PORTAbits.RA5 == 1){
  4924   00495A  AACA               	btfss	202,5,c	;volatile
  4925   00495C  EFB2  F024         	goto	i2u238_41
  4926   004960  EFB4  F024         	goto	i2u238_40
  4927   004964                     i2u238_41:
  4928   004964  EFBF  F024         	goto	i2l137
  4929   004968                     i2u238_40:
  4930   004968                     
  4931                           ;./keypad.h: 74:         buttonNumber = 5;
  4932   004968  0E00               	movlw	0
  4933   00496A  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  4934   00496C  0E05               	movlw	5
  4935   00496E  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  4936   004970                     i2l138:
  4937   004970  BACA               	btfsc	202,5,c	;volatile
  4938   004972  EFBD  F024         	goto	i2u239_41
  4939   004976  EFBF  F024         	goto	i2u239_40
  4940   00497A                     i2u239_41:
  4941   00497A  EFB8  F024         	goto	i2l138
  4942   00497E                     i2u239_40:
  4943   00497E                     i2l137:
  4944                           
  4945                           ;./keypad.h: 77:     if(PORTAbits.RA3 == 1){
  4946   00497E  A6CA               	btfss	202,3,c	;volatile
  4947   004980  EFC4  F024         	goto	i2u240_41
  4948   004984  EFC6  F024         	goto	i2u240_40
  4949   004988                     i2u240_41:
  4950   004988  EFD1  F024         	goto	i2l141
  4951   00498C                     i2u240_40:
  4952   00498C                     
  4953                           ;./keypad.h: 79:         buttonNumber = 8;
  4954   00498C  0E00               	movlw	0
  4955   00498E  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  4956   004990  0E08               	movlw	8
  4957   004992  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  4958   004994                     i2l142:
  4959   004994  B6CA               	btfsc	202,3,c	;volatile
  4960   004996  EFCF  F024         	goto	i2u241_41
  4961   00499A  EFD1  F024         	goto	i2u241_40
  4962   00499E                     i2u241_41:
  4963   00499E  EFCA  F024         	goto	i2l142
  4964   0049A2                     i2u241_40:
  4965   0049A2                     i2l141:
  4966                           
  4967                           ;./keypad.h: 82:     if(PORTCbits.RC4 == 1){
  4968   0049A2  A8CC               	btfss	204,4,c	;volatile
  4969   0049A4  EFD6  F024         	goto	i2u242_41
  4970   0049A8  EFD8  F024         	goto	i2u242_40
  4971   0049AC                     i2u242_41:
  4972   0049AC  EFE3  F024         	goto	i2l145
  4973   0049B0                     i2u242_40:
  4974   0049B0                     
  4975                           ;./keypad.h: 84:         buttonNumber = 0;
  4976   0049B0  0E00               	movlw	0
  4977   0049B2  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  4978   0049B4  0E00               	movlw	0
  4979   0049B6  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  4980   0049B8                     i2l146:
  4981   0049B8  B8CC               	btfsc	204,4,c	;volatile
  4982   0049BA  EFE1  F024         	goto	i2u243_41
  4983   0049BE  EFE3  F024         	goto	i2u243_40
  4984   0049C2                     i2u243_41:
  4985   0049C2  EFDC  F024         	goto	i2l146
  4986   0049C6                     i2u243_40:
  4987   0049C6                     i2l145:
  4988                           
  4989                           ;./keypad.h: 87:     PORTAbits.RA1 = 0;
  4990   0049C6  92CA               	bcf	202,1,c	;volatile
  4991                           
  4992                           ;./keypad.h: 90:     PORTAbits.RA2 = 1;
  4993   0049C8  84CA               	bsf	202,2,c	;volatile
  4994                           
  4995                           ;./keypad.h: 91:     if(PORTAbits.RA4 == 1){
  4996   0049CA  A8CA               	btfss	202,4,c	;volatile
  4997   0049CC  EFEA  F024         	goto	i2u244_41
  4998   0049D0  EFEC  F024         	goto	i2u244_40
  4999   0049D4                     i2u244_41:
  5000   0049D4  EFF7  F024         	goto	i2l149
  5001   0049D8                     i2u244_40:
  5002   0049D8                     
  5003                           ;./keypad.h: 93:         buttonNumber = 3;
  5004   0049D8  0E00               	movlw	0
  5005   0049DA  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  5006   0049DC  0E03               	movlw	3
  5007   0049DE  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  5008   0049E0                     i2l150:
  5009   0049E0  B8CA               	btfsc	202,4,c	;volatile
  5010   0049E2  EFF5  F024         	goto	i2u245_41
  5011   0049E6  EFF7  F024         	goto	i2u245_40
  5012   0049EA                     i2u245_41:
  5013   0049EA  EFF0  F024         	goto	i2l150
  5014   0049EE                     i2u245_40:
  5015   0049EE                     i2l149:
  5016                           
  5017                           ;./keypad.h: 96:     if(PORTAbits.RA5 == 1){
  5018   0049EE  AACA               	btfss	202,5,c	;volatile
  5019   0049F0  EFFC  F024         	goto	i2u246_41
  5020   0049F4  EFFE  F024         	goto	i2u246_40
  5021   0049F8                     i2u246_41:
  5022   0049F8  EF09  F025         	goto	i2l153
  5023   0049FC                     i2u246_40:
  5024   0049FC                     
  5025                           ;./keypad.h: 98:         buttonNumber = 6;
  5026   0049FC  0E00               	movlw	0
  5027   0049FE  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  5028   004A00  0E06               	movlw	6
  5029   004A02  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  5030   004A04                     i2l154:
  5031   004A04  BACA               	btfsc	202,5,c	;volatile
  5032   004A06  EF07  F025         	goto	i2u247_41
  5033   004A0A  EF09  F025         	goto	i2u247_40
  5034   004A0E                     i2u247_41:
  5035   004A0E  EF02  F025         	goto	i2l154
  5036   004A12                     i2u247_40:
  5037   004A12                     i2l153:
  5038                           
  5039                           ;./keypad.h: 101:     if(PORTAbits.RA3 == 1){
  5040   004A12  A6CA               	btfss	202,3,c	;volatile
  5041   004A14  EF0E  F025         	goto	i2u248_41
  5042   004A18  EF10  F025         	goto	i2u248_40
  5043   004A1C                     i2u248_41:
  5044   004A1C  EF1B  F025         	goto	i2l157
  5045   004A20                     i2u248_40:
  5046   004A20                     
  5047                           ;./keypad.h: 103:         buttonNumber = 9;
  5048   004A20  0E00               	movlw	0
  5049   004A22  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  5050   004A24  0E09               	movlw	9
  5051   004A26  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  5052   004A28                     i2l158:
  5053   004A28  B6CA               	btfsc	202,3,c	;volatile
  5054   004A2A  EF19  F025         	goto	i2u249_41
  5055   004A2E  EF1B  F025         	goto	i2u249_40
  5056   004A32                     i2u249_41:
  5057   004A32  EF14  F025         	goto	i2l158
  5058   004A36                     i2u249_40:
  5059   004A36                     i2l157:
  5060                           
  5061                           ;./keypad.h: 106:     if(PORTCbits.RC4 == 1){
  5062   004A36  A8CC               	btfss	204,4,c	;volatile
  5063   004A38  EF20  F025         	goto	i2u250_41
  5064   004A3C  EF22  F025         	goto	i2u250_40
  5065   004A40                     i2u250_41:
  5066   004A40  EF2D  F025         	goto	i2l161
  5067   004A44                     i2u250_40:
  5068   004A44                     
  5069                           ;./keypad.h: 108:         buttonNumber = 10;
  5070   004A44  0E00               	movlw	0
  5071   004A46  6E04               	movwf	(i2getKeypad@buttonNumber+1)^0,c
  5072   004A48  0E0A               	movlw	10
  5073   004A4A  6E03               	movwf	i2getKeypad@buttonNumber^0,c
  5074   004A4C                     i2l162:
  5075   004A4C  B8CC               	btfsc	204,4,c	;volatile
  5076   004A4E  EF2B  F025         	goto	i2u251_41
  5077   004A52  EF2D  F025         	goto	i2u251_40
  5078   004A56                     i2u251_41:
  5079   004A56  EF26  F025         	goto	i2l162
  5080   004A5A                     i2u251_40:
  5081   004A5A                     i2l161:
  5082                           
  5083                           ;./keypad.h: 111:     PORTAbits.RA2 = 0;
  5084   004A5A  94CA               	bcf	202,2,c	;volatile
  5085                           
  5086                           ;./keypad.h: 138:     return buttonNumber;
  5087   004A5C  C003  F001         	movff	i2getKeypad@buttonNumber,?i2_getKeypad
  5088   004A60  C004  F002         	movff	i2getKeypad@buttonNumber+1,?i2_getKeypad+1
  5089   004A64  0012               	return		;funcret
  5090   004A66                     __end_ofi2_getKeypad:
  5091                           	callstack 0
  5092                           
  5093 ;; *************** function i2___wmul *****************
  5094 ;; Defined at:
  5095 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  multiplier      2    0[COMRAM] unsigned int 
  5098 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  product         2    4[COMRAM] unsigned int 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  2    0[COMRAM] unsigned int 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0, prodl, prodh
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5113 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5114 ;;Total ram usage:        6 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; This function calls:
  5117 ;;		Nothing
  5118 ;; This function is called by:
  5119 ;;		i2_getValue
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text33
  5124   00555A                     __ptext33:
  5125                           	callstack 0
  5126   00555A                     i2___wmul:
  5127                           	callstack 22
  5128   00555A  5001               	movf	i2___wmul@multiplier^0,w,c
  5129   00555C  0203               	mulwf	i2___wmul@multiplicand^0,c
  5130   00555E  006F FFCC  F005    	movff	prodl,i2___wmul@product
  5131   005564  006F FFD0  F006    	movff	prodh,i2___wmul@product+1
  5132   00556A  5001               	movf	i2___wmul@multiplier^0,w,c
  5133   00556C  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  5134   00556E  50F3               	movf	243,w,c
  5135   005570  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5136   005572  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  5137   005574  0203               	mulwf	i2___wmul@multiplicand^0,c
  5138   005576  50F3               	movf	243,w,c
  5139   005578  2606               	addwf	(i2___wmul@product+1)^0,f,c
  5140   00557A  C005  F001         	movff	i2___wmul@product,?i2___wmul
  5141   00557E  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  5142   005582  0012               	return		;funcret
  5143   005584                     __end_ofi2___wmul:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function i2_LCD_String_xy *****************
  5147 ;; Defined at:
  5148 ;;		line 63 in file "./LCD.h"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  row             1    wreg     unsigned char 
  5151 ;;  pos             1    9[COMRAM] unsigned char 
  5152 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  5153 ;;		 -> i2getValue@data(10), STR_9(17), STR_8(17), STR_7(15), 
  5154 ;;		 -> STR_6(14), getValue@data(10), STR_1(5), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  row             1   12[COMRAM] unsigned char 
  5157 ;;  location        1   13[COMRAM] unsigned char 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5167 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5170 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5171 ;;Total ram usage:        5 bytes
  5172 ;; Hardware stack levels used: 1
  5173 ;; Hardware stack levels required when called: 3
  5174 ;; This function calls:
  5175 ;;		i2_LCD_Command
  5176 ;;		i2_LCD_String
  5177 ;; This function is called by:
  5178 ;;		_INT0_ISR
  5179 ;;		i2_getValue
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text34
  5184   005382                     __ptext34:
  5185                           	callstack 0
  5186   005382                     i2_LCD_String_xy:
  5187                           	callstack 19
  5188                           
  5189                           ;incstack = 0
  5190                           ;i2LCD_String_xy@row stored from wreg
  5191   005382  6E0D               	movwf	i2LCD_String_xy@row^0,c
  5192   005384                     
  5193                           ;./LCD.h: 66:     if(row<=1)
  5194   005384  0E02               	movlw	2
  5195   005386  600D               	cpfslt	i2LCD_String_xy@row^0,c
  5196   005388  EFC8  F029         	goto	i2u227_41
  5197   00538C  EFCA  F029         	goto	i2u227_40
  5198   005390                     i2u227_41:
  5199   005390  EFD3  F029         	goto	i2l2182
  5200   005394                     i2u227_40:
  5201   005394                     
  5202                           ;./LCD.h: 67:     {;./LCD.h: 68:         location=(0x80) | ((pos) & 0x0f);
  5203   005394  500A               	movf	i2LCD_String_xy@pos^0,w,c
  5204   005396  0B0F               	andlw	15
  5205   005398  0980               	iorlw	128
  5206   00539A  6E0E               	movwf	i2LCD_String_xy@location^0,c
  5207   00539C                     
  5208                           ;./LCD.h: 69:         LCD_Command(location);
  5209   00539C  500E               	movf	i2LCD_String_xy@location^0,w,c
  5210   00539E  EC06  F02B         	call	i2_LCD_Command
  5211                           
  5212                           ;./LCD.h: 70:     }
  5213   0053A2  EFDA  F029         	goto	i2l2186
  5214   0053A6                     i2l2182:
  5215                           
  5216                           ;./LCD.h: 72:     {;./LCD.h: 73:         location=(0xC0) | ((pos) & 0x0f);
  5217   0053A6  500A               	movf	i2LCD_String_xy@pos^0,w,c
  5218   0053A8  0B0F               	andlw	15
  5219   0053AA  09C0               	iorlw	192
  5220   0053AC  6E0E               	movwf	i2LCD_String_xy@location^0,c
  5221   0053AE                     
  5222                           ;./LCD.h: 74:         LCD_Command(location);
  5223   0053AE  500E               	movf	i2LCD_String_xy@location^0,w,c
  5224   0053B0  EC06  F02B         	call	i2_LCD_Command
  5225   0053B4                     i2l2186:
  5226                           
  5227                           ;./LCD.h: 76:     LCD_String(msg);
  5228   0053B4  C00B  F008         	movff	i2LCD_String_xy@msg,i2LCD_String@msg
  5229   0053B8  C00C  F009         	movff	i2LCD_String_xy@msg+1,i2LCD_String@msg+1
  5230   0053BC  ECD9  F028         	call	i2_LCD_String	;wreg free
  5231   0053C0  0012               	return		;funcret
  5232   0053C2                     __end_ofi2_LCD_String_xy:
  5233                           	callstack 0
  5234                           
  5235 ;; *************** function i2_LCD_String *****************
  5236 ;; Defined at:
  5237 ;;		line 54 in file "./LCD.h"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  5240 ;;		 -> i2getValue@data(10), STR_9(17), STR_8(17), STR_7(15), 
  5241 ;;		 -> STR_6(14), getValue@data(10), STR_1(5), 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5257 ;;Total ram usage:        2 bytes
  5258 ;; Hardware stack levels used: 1
  5259 ;; Hardware stack levels required when called: 2
  5260 ;; This function calls:
  5261 ;;		i2_LCD_Char
  5262 ;; This function is called by:
  5263 ;;		i2_LCD_String_xy
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text35
  5268   0051B2                     __ptext35:
  5269                           	callstack 0
  5270   0051B2                     i2_LCD_String:
  5271                           	callstack 19
  5272   0051B2                     
  5273                           ;./LCD.h: 54: void LCD_String(const char *msg);./LCD.h: 55: {;./LCD.h: 56:     while((*m
      +                          sg)!='\0')
  5274   0051B2  EFF4  F028         	goto	i2l2100
  5275   0051B6                     i2l2096:
  5276                           
  5277                           ;./LCD.h: 57:     {;./LCD.h: 58:       LCD_Char(*msg);
  5278   0051B6  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  5279   0051BC  0060  F027  FFF7   	movff	i2LCD_String@msg+1,tblptrh
  5280   0051C2  0E00               	movlw	low (__smallconst shr (0+16))
  5281   0051C4  6EF8               	movwf	tblptru,c
  5282   0051C6  0E1F               	movlw	(high __ramtop+-1)
  5283   0051C8  64F7               	cpfsgt	tblptrh,c
  5284   0051CA  D003               	bra	i2u198_47
  5285   0051CC  0008               	tblrd		*
  5286   0051CE  50F5               	movf	tablat,w,c
  5287   0051D0  D007               	bra	i2u198_40
  5288   0051D2                     i2u198_47:
  5289   0051D2  006F FFDB FFE1     	movff	tblptrl,fsr1l
  5290   0051D8  006F FFDF FFE2     	movff	tblptrh,fsr1h
  5291   0051DE  50E7               	movf	indf1,w,c
  5292   0051E0                     i2u198_40:
  5293   0051E0  ECF7  F02A         	call	i2_LCD_Char
  5294   0051E4                     
  5295                           ;./LCD.h: 59:       msg++;
  5296   0051E4  4A08               	infsnz	i2LCD_String@msg^0,f,c
  5297   0051E6  2A09               	incf	(i2LCD_String@msg+1)^0,f,c
  5298   0051E8                     i2l2100:
  5299                           
  5300                           ;./LCD.h: 56:     while((*msg)!='\0')
  5301   0051E8  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  5302   0051EE  0060  F027  FFF7   	movff	i2LCD_String@msg+1,tblptrh
  5303   0051F4  0E00               	movlw	low (__smallconst shr (0+16))
  5304   0051F6  6EF8               	movwf	tblptru,c
  5305   0051F8  0E1F               	movlw	(high __ramtop+-1)
  5306   0051FA  64F7               	cpfsgt	tblptrh,c
  5307   0051FC  D003               	bra	i2u199_47
  5308   0051FE  0008               	tblrd		*
  5309   005200  50F5               	movf	tablat,w,c
  5310   005202  D007               	bra	i2u199_40
  5311   005204                     i2u199_47:
  5312   005204  006F FFDB FFE1     	movff	tblptrl,fsr1l
  5313   00520A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  5314   005210  50E7               	movf	indf1,w,c
  5315   005212                     i2u199_40:
  5316   005212  0900               	iorlw	0
  5317   005214  A4D8               	btfss	status,2,c
  5318   005216  EF0F  F029         	goto	i2u200_41
  5319   00521A  EF11  F029         	goto	i2u200_40
  5320   00521E                     i2u200_41:
  5321   00521E  EFDB  F028         	goto	i2l2096
  5322   005222                     i2u200_40:
  5323   005222  0012               	return		;funcret
  5324   005224                     __end_ofi2_LCD_String:
  5325                           	callstack 0
  5326                           
  5327 ;; *************** function i2_LCD_Char *****************
  5328 ;; Defined at:
  5329 ;;		line 43 in file "./LCD.h"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  dat             1    wreg     unsigned char 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  dat             1    6[COMRAM] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5347 ;;Total ram usage:        1 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 1
  5350 ;; This function calls:
  5351 ;;		i2_MSdelay
  5352 ;; This function is called by:
  5353 ;;		i2_LCD_String
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text36
  5358   0055EE                     __ptext36:
  5359                           	callstack 0
  5360   0055EE                     i2_LCD_Char:
  5361                           	callstack 19
  5362                           
  5363                           ;incstack = 0
  5364                           ;i2LCD_Char@dat stored from wreg
  5365   0055EE  6E07               	movwf	i2LCD_Char@dat^0,c
  5366   0055F0                     
  5367                           ;./LCD.h: 43: void LCD_Char(char dat);./LCD.h: 44: {;./LCD.h: 45:     LATD= dat;
  5368   0055F0  0060  F01F  FFBD   	movff	i2LCD_Char@dat,16317	;volatile
  5369   0055F6                     
  5370                           ;./LCD.h: 46:     LATC2 = 1;
  5371   0055F6  84BC               	bsf	16316,2,c	;volatile
  5372   0055F8                     
  5373                           ;./LCD.h: 47:     LATC3=1;
  5374   0055F8  86BC               	bsf	16316,3,c	;volatile
  5375   0055FA                     
  5376                           ;./LCD.h: 48:     __nop();
  5377   0055FA  0000               	nop	
  5378   0055FC                     
  5379                           ;./LCD.h: 49:     LATC3=0;
  5380   0055FC  96BC               	bcf	16316,3,c	;volatile
  5381   0055FE                     
  5382                           ;./LCD.h: 50:     MSdelay(1);
  5383   0055FE  0E00               	movlw	0
  5384   005600  6E02               	movwf	(i2MSdelay@val+1)^0,c
  5385   005602  0E01               	movlw	1
  5386   005604  6E01               	movwf	i2MSdelay@val^0,c
  5387   005606  EC38  F029         	call	i2_MSdelay	;wreg free
  5388   00560A  0012               	return		;funcret
  5389   00560C                     __end_ofi2_LCD_Char:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function _LCD_Clear *****************
  5393 ;; Defined at:
  5394 ;;		line 28 in file "./LCD.h"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, status,2, status,0, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5412 ;;Total ram usage:        0 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 2
  5415 ;; This function calls:
  5416 ;;		i2_LCD_Command
  5417 ;; This function is called by:
  5418 ;;		_INT0_ISR
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text37
  5423   005654                     __ptext37:
  5424                           	callstack 0
  5425   005654                     _LCD_Clear:
  5426                           	callstack 21
  5427   005654                     
  5428                           ;./LCD.h: 30:         LCD_Command(0x01);
  5429   005654  0E01               	movlw	1
  5430   005656  EC06  F02B         	call	i2_LCD_Command
  5431   00565A  0012               	return		;funcret
  5432   00565C                     __end_of_LCD_Clear:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function i2_LCD_Command *****************
  5436 ;; Defined at:
  5437 ;;		line 33 in file "./LCD.h"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  cmd             1    wreg     unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  cmd             1    6[COMRAM] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5455 ;;Total ram usage:        1 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 1
  5458 ;; This function calls:
  5459 ;;		i2_MSdelay
  5460 ;; This function is called by:
  5461 ;;		_LCD_Clear
  5462 ;;		i2_LCD_String_xy
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text38
  5467   00560C                     __ptext38:
  5468                           	callstack 0
  5469   00560C                     i2_LCD_Command:
  5470                           	callstack 20
  5471                           
  5472                           ;incstack = 0
  5473                           ;i2LCD_Command@cmd stored from wreg
  5474   00560C  6E07               	movwf	i2LCD_Command@cmd^0,c
  5475   00560E                     
  5476                           ;./LCD.h: 33: void LCD_Command(char cmd );./LCD.h: 34: {;./LCD.h: 35:     LATD= cmd;
  5477   00560E  0060  F01F  FFBD   	movff	i2LCD_Command@cmd,16317	;volatile
  5478   005614                     
  5479                           ;./LCD.h: 36:     LATC2 = 0;
  5480   005614  94BC               	bcf	16316,2,c	;volatile
  5481   005616                     
  5482                           ;./LCD.h: 37:     LATC3 = 1;
  5483   005616  86BC               	bsf	16316,3,c	;volatile
  5484   005618                     
  5485                           ;./LCD.h: 38:     __nop();
  5486   005618  0000               	nop	
  5487   00561A                     
  5488                           ;./LCD.h: 39:     LATC3 = 0;
  5489   00561A  96BC               	bcf	16316,3,c	;volatile
  5490   00561C                     
  5491                           ;./LCD.h: 40:     MSdelay(3);
  5492   00561C  0E00               	movlw	0
  5493   00561E  6E02               	movwf	(i2MSdelay@val+1)^0,c
  5494   005620  0E03               	movlw	3
  5495   005622  6E01               	movwf	i2MSdelay@val^0,c
  5496   005624  EC38  F029         	call	i2_MSdelay	;wreg free
  5497   005628  0012               	return		;funcret
  5498   00562A                     __end_ofi2_LCD_Command:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function i2_MSdelay *****************
  5502 ;; Defined at:
  5503 ;;		line 80 in file "./LCD.h"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  val             2    0[COMRAM] unsigned int 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  j               2    4[COMRAM] unsigned int 
  5508 ;;  i               2    2[COMRAM] unsigned int 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  1    wreg      void 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5518 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5519 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5521 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5522 ;;Total ram usage:        6 bytes
  5523 ;; Hardware stack levels used: 1
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		i2_LCD_Command
  5528 ;;		i2_LCD_Char
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text39
  5533   005270                     __ptext39:
  5534                           	callstack 0
  5535   005270                     i2_MSdelay:
  5536                           	callstack 19
  5537   005270                     
  5538                           ;./LCD.h: 80: void MSdelay(unsigned int val);./LCD.h: 81: {;./LCD.h: 82:      unsigned i
      +                          nt i,j;;./LCD.h: 83:         for(i=0;i<val;i++)
  5539   005270  0E00               	movlw	0
  5540   005272  6E04               	movwf	(i2MSdelay@i+1)^0,c
  5541   005274  0E00               	movlw	0
  5542   005276  6E03               	movwf	i2MSdelay@i^0,c
  5543   005278  EF51  F029         	goto	i2l1828
  5544   00527C                     i2l1816:
  5545                           
  5546                           ;./LCD.h: 84:             for(j=0;j<165;j++);
  5547   00527C  0E00               	movlw	0
  5548   00527E  6E06               	movwf	(i2MSdelay@j+1)^0,c
  5549   005280  0E00               	movlw	0
  5550   005282  6E05               	movwf	i2MSdelay@j^0,c
  5551   005284                     i2l1822:
  5552   005284  4A05               	infsnz	i2MSdelay@j^0,f,c
  5553   005286  2A06               	incf	(i2MSdelay@j+1)^0,f,c
  5554   005288  5006               	movf	(i2MSdelay@j+1)^0,w,c
  5555   00528A  E109               	bnz	i2u155_40
  5556   00528C  0EA5               	movlw	165
  5557   00528E  5C05               	subwf	i2MSdelay@j^0,w,c
  5558   005290  A0D8               	btfss	status,0,c
  5559   005292  EF4D  F029         	goto	i2u155_41
  5560   005296  EF4F  F029         	goto	i2u155_40
  5561   00529A                     i2u155_41:
  5562   00529A  EF42  F029         	goto	i2l1822
  5563   00529E                     i2u155_40:
  5564   00529E  4A03               	infsnz	i2MSdelay@i^0,f,c
  5565   0052A0  2A04               	incf	(i2MSdelay@i+1)^0,f,c
  5566   0052A2                     i2l1828:
  5567   0052A2  5001               	movf	i2MSdelay@val^0,w,c
  5568   0052A4  5C03               	subwf	i2MSdelay@i^0,w,c
  5569   0052A6  5002               	movf	(i2MSdelay@val+1)^0,w,c
  5570   0052A8  5804               	subwfb	(i2MSdelay@i+1)^0,w,c
  5571   0052AA  A0D8               	btfss	status,0,c
  5572   0052AC  EF5A  F029         	goto	i2u156_41
  5573   0052B0  EF5C  F029         	goto	i2u156_40
  5574   0052B4                     i2u156_41:
  5575   0052B4  EF3E  F029         	goto	i2l1816
  5576   0052B8                     i2u156_40:
  5577   0052B8  0012               	return		;funcret
  5578   0052BA                     __end_ofi2_MSdelay:
  5579                           	callstack 0
  5580                           
  5581                           ;
  5582                           ; H/W Interrupt Vector Table @ 0x4008
  5583                           ;
  5584                           
  5585                           	psect	ivt0x4008
  5586   004008                     __pivt0x4008:
  5587                           	callstack 0
  5588   004008                     ivt0x4008_base:
  5589                           	callstack 0
  5590                           
  5591                           ; Vector 0 : SWINT
  5592   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  5593                           
  5594                           ; Vector 1 : HLVD
  5595   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5596                           
  5597                           ; Vector 2 : OSF
  5598   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5599                           
  5600                           ; Vector 3 : CSW
  5601   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5602                           
  5603                           ; Vector 4 : NVM
  5604   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  5605                           
  5606                           ; Vector 5 : SCAN
  5607   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  5608                           
  5609                           ; Vector 6 : CRC
  5610   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  5611                           
  5612                           ; Vector 7 : IOC
  5613   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  5614                           
  5615                           ; Vector 8 : INT0
  5616   004018  130B               	dw	_INT0_ISR shr (0+2)
  5617                           
  5618                           ; Vector 9 : ZCD
  5619   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5620                           
  5621                           ; Vector 10 : AD
  5622   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5623                           
  5624                           ; Vector 11 : ADT
  5625   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5626                           
  5627                           ; Vector 12 : CMP1
  5628   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  5629                           
  5630                           ; Vector 13 : SMT1
  5631   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  5632                           
  5633                           ; Vector 14 : SMT1PRA
  5634   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  5635                           
  5636                           ; Vector 15 : SMT1PRW
  5637   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  5638                           
  5639                           ; Vector 16 : DMA1SCNT
  5640   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  5641                           
  5642                           ; Vector 17 : DMA1DCNT
  5643   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5644                           
  5645                           ; Vector 18 : DMA1OR
  5646   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5647                           
  5648                           ; Vector 19 : DMA1A
  5649   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5650                           
  5651                           ; Vector 20 : SPI1RX
  5652   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  5653                           
  5654                           ; Vector 21 : SPI1TX
  5655   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  5656                           
  5657                           ; Vector 22 : SPI1
  5658   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  5659                           
  5660                           ; Vector 23 : I2C1RX
  5661   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  5662                           
  5663                           ; Vector 24 : I2C1TX
  5664   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  5665                           
  5666                           ; Vector 25 : I2C1
  5667   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5668                           
  5669                           ; Vector 26 : I2C1E
  5670   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5671                           
  5672                           ; Vector 27 : U1RX
  5673   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5674                           
  5675                           ; Vector 28 : U1TX
  5676   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  5677                           
  5678                           ; Vector 29 : U1E
  5679   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  5680                           
  5681                           ; Vector 30 : U1
  5682   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  5683                           
  5684                           ; Vector 31 : TMR0
  5685   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  5686                           
  5687                           ; Vector 32 : TMR1
  5688   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  5689                           
  5690                           ; Vector 33 : TMR1G
  5691   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5692                           
  5693                           ; Vector 34 : TMR2
  5694   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5695                           
  5696                           ; Vector 35 : CCP1
  5697   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5698                           
  5699                           ; Vector 36 : Undefined
  5700   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  5701                           
  5702                           ; Vector 37 : NCO1
  5703   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  5704                           
  5705                           ; Vector 38 : CWG1
  5706   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  5707                           
  5708                           ; Vector 39 : CLC1
  5709   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  5710                           
  5711                           ; Vector 40 : INT1
  5712   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  5713                           
  5714                           ; Vector 41 : CMP2
  5715   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5716                           
  5717                           ; Vector 42 : DMA2SCNT
  5718   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5719                           
  5720                           ; Vector 43 : DMA2DCNT
  5721   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5722                           
  5723                           ; Vector 44 : DMA2OR
  5724   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  5725                           
  5726                           ; Vector 45 : DMA2A
  5727   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  5728                           
  5729                           ; Vector 46 : I2C2RX
  5730   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  5731                           
  5732                           ; Vector 47 : I2C2TX
  5733   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  5734                           
  5735                           ; Vector 48 : I2C2
  5736   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  5737                           
  5738                           ; Vector 49 : I2C2E
  5739   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5740                           
  5741                           ; Vector 50 : U2RX
  5742   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5743                           
  5744                           ; Vector 51 : U2TX
  5745   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5746                           
  5747                           ; Vector 52 : U2E
  5748   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  5749                           
  5750                           ; Vector 53 : U2
  5751   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  5752                           
  5753                           ; Vector 54 : TMR3
  5754   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  5755                           
  5756                           ; Vector 55 : TMR3G
  5757   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  5758                           
  5759                           ; Vector 56 : TMR4
  5760   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  5761                           
  5762                           ; Vector 57 : CCP2
  5763   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5764                           
  5765                           ; Vector 58 : Undefined
  5766   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5767                           
  5768                           ; Vector 59 : CWG2
  5769   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5770                           
  5771                           ; Vector 60 : CLC2
  5772   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  5773                           
  5774                           ; Vector 61 : INT2
  5775   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  5776                           
  5777                           ; Vector 62 : Undefined
  5778   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  5779                           
  5780                           ; Vector 63 : Undefined
  5781   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  5782                           
  5783                           ; Vector 64 : Undefined
  5784   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  5785                           
  5786                           ; Vector 65 : Undefined
  5787   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5788                           
  5789                           ; Vector 66 : Undefined
  5790   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5791                           
  5792                           ; Vector 67 : Undefined
  5793   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5794                           
  5795                           ; Vector 68 : Undefined
  5796   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  5797                           
  5798                           ; Vector 69 : Undefined
  5799   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  5800                           
  5801                           ; Vector 70 : TMR5
  5802   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  5803                           
  5804                           ; Vector 71 : TMR5G
  5805   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  5806                           
  5807                           ; Vector 72 : TMR6
  5808   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  5809                           
  5810                           ; Vector 73 : CCP3
  5811   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  5812                           
  5813                           ; Vector 74 : CWG3
  5814   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  5815                           
  5816                           ; Vector 75 : CLC3
  5817   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  5818                           
  5819                           ; Vector 76 : Undefined
  5820   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  5821                           
  5822                           ; Vector 77 : Undefined
  5823   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  5824                           
  5825                           ; Vector 78 : Undefined
  5826   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  5827                           
  5828                           ; Vector 79 : Undefined
  5829   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  5830                           
  5831                           ; Vector 80 : CCP4
  5832   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  5833                           
  5834                           ; Vector 81 : CLC4
  5835   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  5836   0040AC                     ivt0x4008_undefint:
  5837                           	callstack 0
  5838   0040AC  00FF               	reset	
  5839                           
  5840                           	psect	rparam
  5841   000000                     
  5842                           	psect	config
  5843                           
  5844                           ;Config register CONFIG1L @ 0x300000
  5845                           ;	External Oscillator Selection
  5846                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  5847                           ;	Reset Oscillator Selection
  5848                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  5849   300000                     	org	3145728
  5850   300000  F8                 	db	248
  5851                           
  5852                           ;Config register CONFIG1H @ 0x300001
  5853                           ;	Clock out Enable bit
  5854                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5855                           ;	PRLOCKED One-Way Set Enable bit
  5856                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  5857                           ;	Clock Switch Enable bit
  5858                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5859                           ;	Fail-Safe Clock Monitor Enable bit
  5860                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5861   300001                     	org	3145729
  5862   300001  FF                 	db	255
  5863                           
  5864                           ;Config register CONFIG2L @ 0x300002
  5865                           ;	MCLR Enable bit
  5866                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  5867                           ;	Power-up timer selection bits
  5868                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5869                           ;	Multi-vector enable bit
  5870                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  5871                           ;	IVTLOCK bit One-way set enable bit
  5872                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  5873                           ;	Low Power BOR Enable bit
  5874                           ;	LPBOREN = OFF, ULPBOR disabled
  5875                           ;	Brown-out Reset Enable bits
  5876                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5877   300002                     	org	3145730
  5878   300002  FF                 	db	255
  5879                           
  5880                           ;Config register CONFIG2H @ 0x300003
  5881                           ;	Brown-out Reset Voltage Selection bits
  5882                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  5883                           ;	ZCD Disable bit
  5884                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5885                           ;	PPSLOCK bit One-Way Set Enable bit
  5886                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5887                           ;	Stack Full/Underflow Reset Enable bit
  5888                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5889                           ;	Debugger Enable bit
  5890                           ;	DEBUG = OFF, Background debugger disabled
  5891                           ;	Extended Instruction Set Enable bit
  5892                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5893   300003                     	org	3145731
  5894   300003  FF                 	db	255
  5895                           
  5896                           ;Config register CONFIG3L @ 0x300004
  5897                           ;	WDT Period selection bits
  5898                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5899                           ;	WDT operating mode
  5900                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  5901   300004                     	org	3145732
  5902   300004  9F                 	db	159
  5903                           
  5904                           ;Config register CONFIG3H @ 0x300005
  5905                           ;	WDT Window Select bits
  5906                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5907                           ;	WDT input clock selector
  5908                           ;	WDTCCS = SC, Software Control
  5909   300005                     	org	3145733
  5910   300005  FF                 	db	255
  5911                           
  5912                           ;Config register CONFIG4L @ 0x300006
  5913                           ;	Boot Block Size selection bits
  5914                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  5915                           ;	Boot Block enable bit
  5916                           ;	BBEN = OFF, Boot block disabled
  5917                           ;	Storage Area Flash enable bit
  5918                           ;	SAFEN = OFF, SAF disabled
  5919                           ;	Application Block write protection bit
  5920                           ;	WRTAPP = OFF, Application Block not write protected
  5921   300006                     	org	3145734
  5922   300006  FF                 	db	255
  5923                           
  5924                           ;Config register CONFIG4H @ 0x300007
  5925                           ;	Boot Block Write Protection bit
  5926                           ;	WRTB = OFF, Boot Block not write-protected
  5927                           ;	Configuration Register Write Protection bit
  5928                           ;	WRTC = OFF, Configuration registers not write-protected
  5929                           ;	Data EEPROM Write Protection bit
  5930                           ;	WRTD = OFF, Data EEPROM not write-protected
  5931                           ;	SAF Write protection bit
  5932                           ;	WRTSAF = OFF, SAF not Write Protected
  5933                           ;	Low Voltage Programming Enable bit
  5934                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5935   300007                     	org	3145735
  5936   300007  FF                 	db	255
  5937                           
  5938                           ;Config register CONFIG5L @ 0x300008
  5939                           ;	PFM and Data EEPROM Code Protection bit
  5940                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  5941   300008                     	org	3145736
  5942   300008  FF                 	db	255
  5943                           
  5944                           ;Config register CONFIG5H @ 0x300009
  5945                           ;	unspecified, using default values
  5946   300009                     	org	3145737
  5947   300009  FF                 	db	255
  5948                           tosu	equ	0x3FFF
  5949                           tosh	equ	0x3FFE
  5950                           tosl	equ	0x3FFD
  5951                           stkptr	equ	0x3FFC
  5952                           pclatu	equ	0x3FFB
  5953                           pclath	equ	0x3FFA
  5954                           pcl	equ	0x3FF9
  5955                           tblptru	equ	0x3FF8
  5956                           tblptrh	equ	0x3FF7
  5957                           tblptrl	equ	0x3FF6
  5958                           tablat	equ	0x3FF5
  5959                           prodh	equ	0x3FF4
  5960                           prodl	equ	0x3FF3
  5961                           indf0	equ	0x3FEF
  5962                           postinc0	equ	0x3FEE
  5963                           postdec0	equ	0x3FED
  5964                           preinc0	equ	0x3FEC
  5965                           plusw0	equ	0x3FEB
  5966                           fsr0h	equ	0x3FEA
  5967                           fsr0l	equ	0x3FE9
  5968                           wreg	equ	0x3FE8
  5969                           indf1	equ	0x3FE7
  5970                           postinc1	equ	0x3FE6
  5971                           postdec1	equ	0x3FE5
  5972                           preinc1	equ	0x3FE4
  5973                           plusw1	equ	0x3FE3
  5974                           fsr1h	equ	0x3FE2
  5975                           fsr1l	equ	0x3FE1
  5976                           bsr	equ	0x3FE0
  5977                           indf2	equ	0x3FDF
  5978                           postinc2	equ	0x3FDE
  5979                           postdec2	equ	0x3FDD
  5980                           preinc2	equ	0x3FDC
  5981                           plusw2	equ	0x3FDB
  5982                           fsr2h	equ	0x3FDA
  5983                           fsr2l	equ	0x3FD9
  5984                           status	equ	0x3FD8

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     76      78
    BANK0           160     70     109
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    i2sprintf@f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    i2sprintf@f$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> getValue@data(BANK0[10]), STR_1(CODE[5]), STR_6(CODE[14]), STR_7(CODE[15]), 
		 -> STR_8(CODE[17]), STR_9(CODE[17]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> getValue@data(BANK0[10]), STR_1(CODE[5]), STR_6(CODE[14]), STR_7(CODE[15]), 
		 -> STR_8(CODE[17]), STR_9(CODE[17]), 

    S945$buffer	PTR unsigned char  size(2) Largest target is 0

    S945$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> getValue@data(BANK0[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_getValue
    i2_getValue->i2_sprintf
    i2_sprintf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_abs
    i2_abs->i2___awmod
    i2_LCD_String_xy->i2_LCD_String
    i2_LCD_String->i2_LCD_Char
    i2_LCD_Char->i2_MSdelay
    _LCD_Clear->i2_LCD_Command
    i2_LCD_Command->i2_MSdelay

Critical Paths under _main in BANK0

    _main->_getValue
    _getValue->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9951
               _INTERRUPT_Initialize
                           _LCD_Init
                      _LCD_String_xy
                           _getValue
                   _initializeKeypad
 ---------------------------------------------------------------------------------
 (1) _initializeKeypad                                     0     0      0       0
                    _initializePORTA
                    _initializePORTC
 ---------------------------------------------------------------------------------
 (2) _initializePORTC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializePORTA                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getValue                                            28    26      2    7137
                                             42 BANK0     28    26      2
                      _LCD_String_xy
                             ___wmul
                          _getKeypad
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    3763
                                             25 BANK0     17    13      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2947
                                             21 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    2586
                                             10 BANK0     11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _getKeypad                                            4     2      2      35
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    2152
                                              9 BANK0      5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     463
                                              7 BANK0      2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     342
                                              6 BANK0      1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     662
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     342
                                              6 BANK0      1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2     320
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             6     6      0    5329
                                             70 COMRAM     6     6      0
                          _LCD_Clear
                    i2_LCD_String_xy
                         i2_getValue
 ---------------------------------------------------------------------------------
 (8) i2_getValue                                          28    26      2    4209
                                             42 COMRAM    28    26      2
                    i2_LCD_String_xy
                           i2___wmul
                        i2_getKeypad
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (9) i2_sprintf                                           19    15      4    2341
                                             25 COMRAM    17    13      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (10) i2_vfprintf                                          4     1      3    1934
                                             21 COMRAM     4     1      3
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (11) i2_vfpfcnvrt                                        11     8      3    1734
                                             10 COMRAM    11     8      3
                          i2___awdiv
                          i2___awmod
                              i2_abs
                            i2_fputc
 ---------------------------------------------------------------------------------
 (12) i2_fputc                                             8     5      3     330
                                              0 COMRAM     8     5      3
                            i2_putch
 ---------------------------------------------------------------------------------
 (13) i2_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (12) i2_abs                                               4     2      2      92
                                              6 COMRAM     4     2      2
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (12) i2___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2___awdiv                                           8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) i2_getKeypad                                          4     2      2      35
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) i2___wmul                                             6     2      4     315
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) i2_LCD_String_xy                                      5     2      3     954
                                              9 COMRAM     5     2      3
                      i2_LCD_Command
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (10) i2_LCD_String                                        2     0      2     237
                                              7 COMRAM     2     0      2
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (11) i2_LCD_Char                                          1     1      0     166
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (8) _LCD_Clear                                            0     0      0     166
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (10) i2_LCD_Command                                       1     1      0     166
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (12) i2_MSdelay                                           6     4      2     144
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INTERRUPT_Initialize
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _getValue
     _LCD_String_xy
     ___wmul
     _getKeypad
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _initializeKeypad
     _initializePORTA
     _initializePORTC

 _INT0_ISR (ROOT)
   _LCD_Clear
     i2_LCD_Command
       i2_MSdelay
   i2_LCD_String_xy
     i2_LCD_Command
     i2_LCD_String
       i2_LCD_Char
         i2_MSdelay
   i2_getValue
     i2_LCD_String_xy
     i2___wmul
     i2_getKeypad
     i2_sprintf
       i2_vfprintf
         i2_vfpfcnvrt
           i2___awdiv
           i2___awmod
           i2_abs
             i2___awmod (ARG)
           i2_fputc
             i2_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      84        0.0%
BITBIGSFRlllhh     559      0       0      74        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllll    181      0       0      83        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      6D       5       68.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4C      4E       1       82.1%
BITBIGSFRllllhh     59      0       0      77        0.0%
BITBIGSFRllllhl     3E      0       0      80        0.0%
BITBIGSFRhhhhh      28      0       0      69        0.0%
BITBIGSFRlllllh      F      0       0      81        0.0%
BITBIGSFRlllllh      F      0       0      82        0.0%
BITBIGSFRlllhlh      F      0       0      75        0.0%
BITBIGSFRlllhll      F      0       0      76        0.0%
BITBIGSFRhhhl        5      0       0      71        0.0%
BITBIGSFRlhl         4      0       0      73        0.0%
BITBIGSFRhl          4      0       0      72        0.0%
BITBIGSFRllllhl      2      0       0      79        0.0%
BITBIGSFRhhhhl       2      0       0      70        0.0%
BITBIGSFRllllhl      1      0       0      78        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BB      30        0.0%
DATA                 0      0      BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat May 11 12:07:27 2024

                ?_LCD_Command 0001                            l83 55EC                            l92 51B0  
                          l77 54FE                            l86 55CA                            l97 5340  
                ___awdiv@sign 0065           ___wmul@multiplicand 0062                   ?_LCD_String 0067  
     i2getKeypad@buttonNumber 0003                           l111 563C                           l105 526E  
                         l121 453E                           l130 457C                           l122 4530  
                         l114 5648                           l210 53F2                           l211 53F2  
                         l108 5652                           l141 4600                           l133 45B4  
                         l125 4564                           l117 4518                           l150 4642  
                         l142 45F2                           l134 45A6                           l126 4556  
                         l118 450A                           l216 5558                           l161 46C2  
                         l153 4676                           l145 4626                           l137 45DA  
                         l129 458A                           l162 46B4                           l154 4668  
                         l146 4618                           l138 45CC                           l180 42DA  
                         l165 46CC                           l157 469C                           l149 4650  
                         l158 468E                           l191 552C                           l460 4F32  
                         l447 4DBC                           l932 489A                           l942 544E  
                         l945 5466                           l938 52FC                           l957 5090  
                         l894 5430                           l968 565C                           _abs 5432  
                ___awmod@sign 0065                           wreg 3FE8           __end_ofi2_vfpfcnvrt 4C2C  
                  i2_getValue 42DC                   LCD_Char@dat 0066                          ?_abs 0066  
                        l2120 5326                          l2112 5302                          l2122 532E  
                        l2114 5302                          l2130 44EC                          l2060 55DC  
                        l2052 55D0                          l2124 5334                          l2116 5314  
                        l2140 459C                          l2132 4502                          l2300 4262  
                        l2310 5510                          l2062 55DE                          l2054 55D6  
                        l2070 5176                          l2118 531C                          l2150 465E  
                        l2142 45C2                          l2134 4526                          l2302 42D2  
                        l2126 562A                          l2320 551C                          l2312 5512  
                        l2056 55D8                          l2240 54E6                          l2232 54D0  
                        l2064 513E                          l2152 4684                          l2144 45E8  
                        l2136 454C                          l2072 52BA                          l2160 540C  
                        l2128 563E                          l2400 53C6                          l2322 551E  
                        l2314 5514                          l2306 5500                          l2058 55DA  
                        l2242 54EC                          l2234 54DE                          l2066 5142  
                        l2170 5550                          l2154 46AA                          l2146 460E  
                        l2138 4572                          l2074 52C2                          l2162 5414  
                        l2250 564A                          l2402 53CA                          l2316 5516  
                        l2308 5504                          l1700 5224                          l2244 54F2  
                        l2236 54E2                          l2068 5170                          l2148 4638  
                        l2076 52D4                          l2164 5424                          l2156 53FA  
                        l2260 40DE                          l2252 564E                          l2404 53CE  
                        l2318 5518                          l1710 523E                          l1702 5232  
                        l2246 54F8                          l2238 54E4                          l2078 52F2  
                        l2158 5404                          l2270 4140                          l2262 40EA  
                        l2254 40B2                          l2406 53E6                          l1712 5254  
                        l2168 552E                          l1720 4D0C                          l1800 5006  
                        l2280 41A2                          l2272 414C                          l2264 40FA  
                        l2256 40C4                          l1714 5258                          l1730 4D32  
                        l1722 4D14                          l1810 5432                          l1802 5010  
                        l2290 4204                          l2282 41AE                          l2274 415C  
                        l2266 4116                          l2258 40C4                          l1708 523A  
                        l1740 4D6A                          l1732 4D3A                          l1724 4D18  
                        l1716 4CF8                          l1812 5442                          l1804 502C  
                        l2292 4210                          l2284 41BE                          l2276 4178  
                        l2268 412A                          l1750 4D96                          l1742 4D70  
                        l1734 4D4C                          l1726 4D26                          l1718 4CFE  
                        l1806 505E                          l2294 4220                          l2286 41DA  
                        l2278 418C                          l1744 4D86                          l1736 4D54  
                        l1752 4D9C                          l1728 4D2E                          l1760 4E82  
                        l2296 423C                          l2288 41EE                          l1930 55B4  
                        l1754 4DAC                          l1746 4D8E                          l1738 4D5C  
                        l1770 4EB0                          l1762 4E88                          l2298 4250  
                        l1932 55B6                          l1756 4DB4                          l1748 4D90  
                        l1780 4EE8                          l1772 4EB8                          l1764 4E96  
                        l1940 46CE                          l1934 55B8                          l1790 4F22  
                        l1782 4EFE                          l1774 4ECA                          l1766 4E9E  
                        l1950 4716                          l1942 46F4                          l2398 53C2  
                        l1936 55BA                          l1928 55AE                          l1792 4F2A  
                        l1784 4F06                          l1776 4ED2                          l1768 4EA2  
                        l1960 4790                          l1952 4734                          l1944 46FC  
                        l1938 55BC                          l1786 4F0C                          l1778 4EDA  
                        l1970 4812                          l1962 47C2                          l1954 4752  
                        l1946 4708                          l1788 4F12                          l1796 4FE4  
                        l1972 4822                          l1964 47DE                          l1956 476E  
                        l1980 4868                          l1948 470C                          l1798 4FF6  
                        l1974 4834                          l1966 47F2                          l1958 4778  
                        l1976 484E                          l1968 4802                          l1984 4876  
                        l1978 4852                          STR_1 2040                          STR_2 2045  
                        STR_3 2045                          STR_4 2045                          STR_5 2045  
                        STR_6 2032                          STR_7 2023                          STR_8 2012  
                        STR_9 2001                          u2020 5314                          u2100 458A  
                        u2021 5310                          u2101 4586                          u2110 459C  
                        u2030 4502                          u2111 4598                          u2031 44FE  
                        u2200 4650                          u2120 45B4                          u2040 4518  
                        u1400 4D4C                          u2201 464C                          u2121 45B0  
                        u2041 4514                          u1401 4D48                          u2210 465E  
                        u2130 45C2                          u2050 4526                          u1410 4D6A  
                        u2211 465A                          u2131 45BE                          u2051 4522  
                        u1411 4D66                          u2220 4676                          u2140 45DA  
                        u2060 453E                          u1420 4D86                          u1500 4FF6  
                        u2221 4672                          u2141 45D6                          u2061 453A  
                        u1421 4D82                          u1501 4FF2                          _LATA 3FBA  
                        u2230 4684                          u2150 45E8                          u2070 454C  
                        u1430 4DAC                          u1510 5006                          _LATB 3FBB  
                        u2231 4680                          u2151 45E4                          u2071 4548  
                        u1431 4DA8                          u1511 5002                          u1360 5254  
                        u2240 469C                          u2160 4600                          u2080 4564  
                        u1440 4E96                          u1520 502C                          _LATD 3FBD  
                        u1361 5250                          u2241 4698                          u2161 45FC  
                        u2081 4560                          u1441 4E92                          u1521 5028  
                        u1370 526E                          u2250 46AA                          u2170 460E  
                        u2090 4572                          u1450 4EB0                          u1530 505E  
                        u1371 526A                          u2251 46A6                          u2171 460A  
                        u2091 456E                          u1451 4EAC                          u1531 505A  
                        u2260 46C2                          u2180 4626                          u1380 4D0C  
                        u1460 4ECA                          u1540 5442                          u2261 46BE  
                        u2181 4622                          u1381 4D08                          u1461 4EC6  
                        u1541 543E                          u2190 4638                          u1390 4D26  
                        u1470 4EE8                          u2191 4634                          u1391 4D22  
                        u1471 4EE4                          u1480 4EFE                          u1800 4802  
                        u2520 40FA                          u1481 4EFA                          u1801 47FE  
                        u2521 40F6                          u1490 4F22                          u1810 4812  
                        u2530 4116                          u1491 4F1E                          u1811 480E  
                        u2531 4112                          u1820 4822                          u1740 46F4  
                        u2540 415C                          u1821 481E                          u1741 46F0  
                        u2541 4158                          u1830 4864                          u1750 4734  
                        u2550 4178                          u1831 4860                          u1751 4730  
                        u2551 4174                          u1760 4752                          u2560 41BE  
                        u1761 474E                          u2561 41BA                          u1770 478C  
                        u2570 41DA                          u1771 4786                          u2571 41D6  
                        u1940 516C                          u1780 478E                          u2580 4220  
                        u2581 421C                          u1950 51A0                          u1790 47F2  
                        u2590 423C                          u1791 47EE                          u2591 4238  
                        u1960 51B0                          u1961 51AC                          u1970 52F2  
                        u1947 515E                          u1971 52EE                          u1957 5192  
                        i2l80 565A                          i2l83 5628                          i2l92 5222  
                        i2l86 560A                          i2l97 53C0                   ?i2_LCD_Char 0001  
                        abs@a 0066                          _dbuf 00A6                          _main 53C2  
                        _prec 00C8                          fsr1h 3FE2                          fsr2h 3FDA  
                        indf1 3FE7                          indf2 3FDF                          fsr1l 3FE1  
                        fsr2l 3FD9                          prodh 3FF4                          prodl 3FF3  
                        start 40AE               __end_of_MSdelay 5270               __end_ofi2_fputc 513E  
               _LCD_String_xy 52FE               __end_ofi2_putch 5660                  ___param_bank 0000  
                 i2_getKeypad 489C                         ??_abs 0068              __end_of_LCD_Char 55CC  
                  i2_vfprintf 5342              __end_of_LCD_Init 5500              __end_of_INT0_ISR 4CF8  
                       ?_main 0001               __end_of___awdiv 4DBE               __end_of___awmod 4F34  
             ___awdiv@divisor 0062                         _LATC2 1FDE2                         _LATC3 1FDE3  
           ??_initializePORTA 0060             ??_initializePORTC 0060                         i2l105 52B8  
                       i2l121 48EA                         i2l130 4924                         i2l122 48DC  
                       i2l141 49A2                         i2l133 495A                         i2l125 490E  
                       i2l117 48C6                         i2l150 49E0                         i2l142 4994  
                       i2l134 494C                         i2l126 4900                         i2l118 48B8  
                       i2l216 5582                         i2l161 4A5A                         i2l153 4A12  
                       i2l145 49C6                         i2l137 497E                         i2l129 4932  
                       i2l162 4A4C                         i2l154 4A04                         i2l146 49B8  
                       i2l138 4970                         i2l180 44EA                         i2l165 4A64  
                       i2l157 4A36                         i2l149 49EE                         i2l158 4A28  
                       i2l460 4FE2                         i2l188 4CDE                         i2l447 4E80  
                       i2l932 4C2A                         i2l942 54B6                         i2l945 54CE  
                       i2l938 5380               ___awdiv@counter 0064                         i2l957 513C  
                       i2l894 549A                         i2l968 565E                  vfpfcnvrt@fmt 006B  
                       _PORTA 3FCA                         _PORTB 3FCB                         _TRISA 3FC2  
                       _TRISB 3FC3                         _TRISD 3FC5                         i2_abs 549C  
                       _flags 00CC                         _fputc 4FE4                         _width 00C6  
                       _putch 565C                         tablat 3FF5              __end_ofi2___wmul 5584  
                       status 3FD8               __end_of_sprintf 5432                ?_LCD_String_xy 0069  
             __initialization 5584                  __end_of_main 53FA                   i2_vfpfcnvrt 4A66  
               i2vfpfcnvrt@ap 000D                 i2vfpfcnvrt@cp 0010                 i2vfpfcnvrt@fp 000B  
                      ??_main 00A6                i2getValue@data 0033             __end_of_LCD_Clear 565C  
               __activetblptr 0002                    i2sprintf@f 001F                    i2sprintf@s 001A  
                      ?i2_abs 0007                   ?i2_getValue 002B                        ?_fputc 0060  
            ___awdiv@dividend 0060                        _ANSELA 3A40                        ?_putch 0001  
                      _ANSELB 3A50              LCD_String_xy@msg 006A              LCD_String_xy@pos 0069  
            LCD_String_xy@row 006C                        i2l2000 55FE                        i2l2010 4AA4  
                      i2l2002 4A66                        i2l2100 51E8                        i2l2020 4B10  
                      i2l2012 4AAE                        i2l2004 4A8A                        i2l2030 4B96  
                      i2l2022 4B28                        i2l2014 4ACC                        i2l2006 4A92  
                      i2l2102 5342                     ??_MSdelay 0062                        i2l2200 4968  
                      i2l2032 4BA6                        i2l2040 4BE4                        i2l2024 4B58  
                      i2l2016 4AEA                        i2l2008 4AA0                        i2l2104 534A  
                      i2l2210 4A20                        i2l2202 498C                        i2l2034 4BB6  
                      i2l2026 4B74                        i2l2018 4B06                        i2l2042 4BFA  
                      i2l2106 535A                        i2l2212 4A44                        i2l2204 49B0  
                      i2l2036 4BC8                        i2l2028 4B86                        i2l2108 5378  
                      i2l2220 5468                        i2l2214 555A                        i2l2206 49D8  
                      i2l2038 4BE2                        i2l2046 4C06                        i2l2222 5470  
                      i2l2216 557A                        i2l2208 49FC                        i2l2224 5478  
                      i2l2090 561A                        i2l2082 560E                        i2l2226 5480  
                      i2l2330 4306                        i2l2092 561C                        i2l2084 5614  
                      i2l2180 539C                        i2l2228 5490                        i2l2340 4364  
                      i2l2332 4312                        i2l2324 42DC                        i2l2086 5616  
                      i2l2094 51B2                        i2l2182 53A6                        i2l2174 5384  
                      i2l2190 48B0                        i2l2350 43C2                        i2l2342 4370  
                      i2l2334 4320                        i2l2326 42EC                        i2l2088 5618  
                      i2l2248 5654                        i2l2096 51B6                        i2l2184 53AE  
                      i2l2176 5384                        i2l2192 48D4                        i2l2360 4420  
                      i2l2352 43CE                        i2l2344 437E                        i2l2336 433C  
                      i2l2328 42EC                        i2l2098 51E4                        i2l2186 53B4  
                      i2l2178 5394                        i2l2194 48F8                        i2l2370 447A  
                      i2l2362 442C                        i2l2354 43DC                        i2l2346 439A  
                      i2l2338 4350                        i2l2196 491C                        i2l2188 489C  
                      i2l1900 4FBC                        i2l2372 44E2                        i2l2364 443A  
                      i2l2356 43F8                        i2l2348 43AE                        i2l2380 4C56  
                      i2l1822 5284                        i2l1814 5270                        i2l2198 4944  
                      i2l1830 4DBE                        i2l1902 4FC2                        i2l1910 549C  
                      i2l2366 4456                        i2l2358 440C                        i2l2390 4CA8  
                      i2l2382 4C6C                        i2l1824 5288                        i2l1816 527C  
                      i2l1840 4DEA                        i2l1832 4DC2                        i2l1904 4FD2  
                      i2l1912 54AA                        i2l1920 50BC                        i2l2368 446A  
                      i2l2392 4CBE                        i2l2384 4C78                        i2l2376 4C44  
                      i2l1826 529E                        i2l1850 4E18                        i2l1842 4DF2  
                      i2l1834 4DD0                        i2l1906 4FDA                        i2l1922 50D8  
                      i2l1914 5092                        i2l2394 4CD4                        i2l2386 4C8E  
                      i2l2378 4C52                        i2l1828 52A2                        i2l1860 4E52  
                      i2l1852 4E20                        i2l1844 4DF6                        i2l1836 4DD8  
                      i2l1924 510A                        i2l1916 50A2                        i2l2388 4C92  
                      i2l2396 4CDA                        i2l1870 4E78                        i2l1862 4E54  
                      i2l1854 4E2E                        i2l1846 4DFE                        i2l1838 4DDC  
                      i2l1918 50B2                        i2l1864 4E5A                        i2l1856 4E34  
                      i2l1848 4E10                        i2l1880 4F4E                        i2l1858 4E4A  
                      i2l1866 4E60                        i2l1890 4F82                        i2l1882 4F52  
                      i2l1874 4F34                        i2l1868 4E70                        i2l1892 4F8A  
                      i2l1884 4F60                        i2l1876 4F38                        i2l1990 55F0  
                      i2l1894 4F98                        i2l1886 4F68                        i2l1878 4F46  
                      i2l1992 55F6                        i2l1896 4FAE                        i2l1888 4F7A  
                      i2l1994 55F8                        i2l1898 4FB6                        i2l1996 55FA  
                      i2l1998 55FC                     ??i2_fputc 0004             ?_initializeKeypad 0001  
               vfpfcnvrt@done 006E                        _NVMDAT 39E3                     ??i2_putch 0001  
                      i2abs@a 0007            ??_initializeKeypad 0060              __end_of_getValue 42DC  
           __end_ofi2_MSdelay 52BA                  vfprintf@cfmt 0078                 i2vfprintf@fmt 0017  
                      ___wmul 552E                     ??___awdiv 0064                     ??___awmod 0064  
                 ?i2_vfprintf 0016                        clear_0 558A              ___awdiv@quotient 0066  
             ___awmod@divisor 0062                 ?i2_LCD_String 0008                        isa$std 0001  
             ___awmod@counter 0064                i2___awdiv@sign 0006                        fputc@c 0060  
           __end_ofi2___awdiv 4E82             __end_ofi2___awmod 4FE4                  __mediumconst 0000  
                      tblptrh 3FF7                        tblptrl 3FF6                        tblptru 3FF8  
                      putch@c 0001              __end_of_vfprintf 52FE                i2___awmod@sign 0006  
           ??i2_LCD_String_xy 000D                     ??_sprintf 007D                     ?_LCD_Char 0001  
                  __accesstop 0060       __end_of__initialization 55A0                     ?_LCD_Init 0001  
                   ?_INT0_ISR 0001               ??_LCD_String_xy 006C                 ___rparam_used 0001  
           __end_ofi2_sprintf 549C                 __end_ofi2_abs 54D0                __pcstackCOMRAM 0001  
               __end_of_fputc 5092                 __end_of_putch 565E                ??i2_LCD_String 000A  
                ??_LCD_String 0069                     ?i2___wmul 0001              i2LCD_Command@cmd 0007  
                     ??i2_abs 0009                i2vfpfcnvrt@fmt 000C                       ??_fputc 0063  
                     ??_putch 0060                    __pbssBANK0 00A6                   i2sprintf@ap 001E  
                ??i2_LCD_Char 0007                    ??_LCD_Char 0066                    ??_LCD_Init 0067  
                  ??_INT0_ISR 0047            __end_of_LCD_String 51B2                       IVTBASEH 3FD6  
                     IVTBASEL 3FD5                       IVTBASEU 3FD7               _initializePORTA 562A  
             _initializePORTC 563E                       ?___wmul 0060                  ?i2_getKeypad 0001  
               i2_LCD_Command 560C                    ??i2___wmul 0005            __end_ofi2_LCD_Char 560C  
                     _NVMADRL 39E0                       _NVMCON1 39E5                       _NVMCON2 39E6  
                   ?_getValue 008A                       _MSdelay 5224                       i2_fputc 5092  
                     i2_putch 565E                 LCD_String@msg 0067             __end_of_getKeypad 46CE  
                     __Hparam 0000                       __Lparam 0000                       ___awdiv 4CF8  
                     ___awmod 4E82                     ?_vfprintf 0075                i2vfprintf@cfmt 0019  
                __psmallconst 2000                ?i2_LCD_Command 0001                  ?i2_vfpfcnvrt 000B  
                     __pcinit 5584                       __ramtop 2000                 ivt0x4008_base 4008  
                     __ptext0 53C2                       __ptext1 564A                       __ptext2 563E  
                     __ptext3 562A                       __ptext4 40B2                       __ptext5 53FA  
                     __ptext6 52BA                       __ptext7 46CE                       __ptext8 4FE4  
                     __ptext9 565C              ___awmod@dividend 0060                     _LCD_Clear 5654  
                ??i2_getValue 002D                    ??_getValue 008C                       _sprintf 53FA  
        end_of_initialization 55A0          __end_ofi2_LCD_String 5224       __end_of_initializePORTA 563E  
     __end_of_initializePORTC 564A                       fputc@fp 0062                LCD_Command@cmd 0066  
               __Lmediumconst 0000           i2___wmul@multiplier 0001        i2getValue@decimalValue 003D  
           __end_of_vfpfcnvrt 489C                       postdec2 3FDD                       postinc0 3FEE  
                     postinc1 3FE6                       postinc2 3FDE              vfpfcnvrt@convarg 0070  
                ??i2_vfprintf 0019                    ??_vfprintf 0078            __end_ofi2_getValue 44EC  
                   i2_MSdelay 5270               i2_LCD_String_xy 5382                     _PORTAbits 3FCA  
                   _PORTBbits 3FCB                     _PORTCbits 3FCC                     _TRISCbits 3FC4  
                  ?_LCD_Clear 0001                     i2___awdiv 4DBE                     i2___awmod 4F34  
          __end_ofi2_vfprintf 5382            i2___awdiv@dividend 0001            i2LCD_String_xy@msg 000B  
          i2LCD_String_xy@pos 000A            i2LCD_String_xy@row 000D               ??i2_LCD_Command 0007  
                   i2_sprintf 5468  __end_of_INTERRUPT_Initialize 552E                 ??_LCD_Command 0066  
                 vfpfcnvrt@ap 006C                   vfpfcnvrt@cp 006F                   vfpfcnvrt@fp 006A  
              __end_of___wmul 555A                    ?i2_MSdelay 0001                     i2fputc@fp 0003  
            i2___wmul@product 0005           start_initialization 5584            i2___awdiv@quotient 0007  
                 __end_of_abs 5468                    ?i2___awdiv 0001                    ?i2___awmod 0001  
                i2vfpfcnvrt@c 0015              ?_initializePORTA 0001              ?_initializePORTC 0001  
       __end_of_LCD_String_xy 5342       __end_ofi2_LCD_String_xy 53C2                   vfprintf@fmt 0076  
                i2vfprintf@ap 0018               i2vfpfcnvrt@done 000F                  i2vfprintf@fp 0016  
                    ??___wmul 0064                    ?i2_sprintf 001A              i2getValue@value1 003F  
            i2getValue@value2 0041              i2getValue@value3 0043              i2getValue@value4 0045  
         __end_of_LCD_Command 55EE                  i2sprintf@fmt 001B                   __pbssCOMRAM 004D  
               __pcstackBANK0 0060                   ??_LCD_Clear 0008                 i2LCD_Char@dat 0007  
                    ?_MSdelay 0060                      ?i2_fputc 0001                      ?i2_putch 0001  
                 __pivt0x4008 4008                  i2MSdelay@val 0001                     _getKeypad 44EC  
                    ?___awdiv 0060                      ?___awmod 0060              _initializeKeypad 564A  
                 ??i2_MSdelay 0003                  i2_LCD_String 51B2                   __smallconst 2000  
       LCD_String_xy@location 006D                   ??i2___awdiv 0005                   ??i2___awmod 0005  
                    ?_sprintf 0079          _INTERRUPT_Initialize 5500                      MSdelay@i 0062  
                    MSdelay@j 0064                      _LCD_Char 55AA                      _LCD_Init 54D0  
                    _INT0_ISR 4C2C                ___wmul@product 0064                      _LATCbits 3FBC  
                    _IPR1bits 3981                      _PIE1bits 3991                      _IVTBASEH 3FD6  
                    _IVTBASEL 3FD5                      _IVTBASEU 3FD7                      i2u200_40 5222  
                    i2u200_41 521E                      i2u201_40 5378                      i2u201_41 5374  
                    i2u230_40 48D4                      i2u230_41 48D0                      i2u231_40 48EA  
                    i2u231_41 48E6                      i2u240_40 498C                      i2u232_40 48F8  
                    i2u160_40 4E2E                      i2u240_41 4988                      i2u232_41 48F4  
                    i2u160_41 4E2A                      i2u241_40 49A2                      i2u233_40 490E  
                    i2u161_40 4E4A                      i2u241_41 499E                      i2u233_41 490A  
                    i2u161_41 4E46                      i2u250_40 4A44                      i2u242_40 49B0  
                    i2u234_40 491C                      i2u162_40 4E70                      i2u170_40 50A2  
                    i2u250_41 4A40                      i2u242_41 49AC                      i2u234_41 4918  
                    i2u162_41 4E6C                      i2u170_41 509E                      i2u155_40 529E  
                    i2u227_40 5394                      i2u251_40 4A5A                      i2u243_40 49C6  
                    i2u235_40 4932                      i2u163_40 4F46                      i2u171_40 50B2  
                    i2u155_41 529A                      i2u227_41 5390                      i2u251_41 4A56  
                    i2u243_41 49C2                      i2u235_41 492E                      i2u163_41 4F42  
                    i2u171_41 50AE                      i2u156_40 52B8                      i2u244_40 49D8  
                    i2u236_40 4944                      i2u228_40 48B0                      i2u164_40 4F60  
                    i2u172_40 50D8                      i2u260_40 4320                      i2u156_41 52B4  
                    i2u244_41 49D4                      i2u236_41 4940                      i2u228_41 48AC  
                    i2u164_41 4F5C                      i2u172_41 50D4                      i2u260_41 431C  
                    i2u245_40 49EE                      i2u237_40 495A                      i2u229_40 48C6  
                    i2u157_40 4DD0                      i2u165_40 4F7A                      i2u173_40 510A  
                    i2u261_40 433C                      i2u245_41 49EA                      i2u237_41 4956  
                    i2u229_41 48C2                      i2u157_41 4DCC                      i2u165_41 4F76  
                    i2u173_41 5106                      i2u261_41 4338                      i2u246_40 49FC  
                    i2u238_40 4968                      i2u158_40 4DEA                      i2u166_40 4F98  
                    i2u190_40 4B96                      i2u262_40 437E                      i2u246_41 49F8  
                    i2u238_41 4964                      i2u158_41 4DE6                      i2u166_41 4F94  
                    i2u190_41 4B92                      i2u262_41 437A                      i2u270_47 4CC8  
                    i2u247_40 4A12                      i2u239_40 497E                      i2u159_40 4E10  
                    i2u167_40 4FAE                      i2u191_40 4BA6                      i2u263_40 439A  
                    i2u247_41 4A0E                      i2u239_41 497A                      i2u159_41 4E0C  
                    i2u167_41 4FAA                      i2u191_41 4BA2                      i2u263_41 4396  
                    i2u248_40 4A20                      i2u168_40 4FD2                      i2u192_40 4BB6  
                    i2u184_40 4A8A                      i2u264_40 43DC                      i2u248_41 4A1C  
                    i2u168_41 4FCE                      i2u192_41 4BB2                      i2u184_41 4A86  
                    i2u264_41 43D8                      i2u249_40 4A36                      i2u169_40 54AA  
                    i2u193_40 4BF6                      i2u185_40 4ACC                      i2u265_40 43F8  
                    i2u249_41 4A32                      i2u169_41 54A6                      i2u193_41 4BF2  
                    i2u185_41 4AC8                      i2u265_41 43F4                      _PIR1bits 39A1  
                    i2u186_40 4AEA                      i2u266_40 443A                      i2u186_41 4AE6  
                    i2u266_41 4436                      i2u187_40 4B24                      i2u267_40 4456  
                    i2u187_41 4B1E                      i2u267_41 4452                      i2u188_40 4B26  
                    i2u268_40 4C52                      i2u268_41 4C4E                      i2u189_40 4B86  
                    i2u189_41 4B82                      i2u269_47 4C82                      i2u198_40 51E0  
                    i2u198_47 51D2                      i2u199_40 5212                      i2u199_47 5204  
            ?i2_LCD_String_xy 000A             ivt0x4008_undefint 40AC                    ?_getKeypad 0060  
                 ??i2_sprintf 001E                   _LCD_Command 55CC                     _vfpfcnvrt 46CE  
           ___wmul@multiplier 0060                      i2___wmul 555A                     _userGuess 00CA  
           i2___awdiv@divisor 0003             i2___awdiv@counter 0005                    vfpfcnvrt@c 0074  
                 _INTCON0bits 3FD2                      i2fputc@c 0001         ?_INTERRUPT_Initialize 0001  
          i2___awmod@dividend 0001                getValue@value1 009E                getValue@value2 00A0  
              getValue@value3 00A2                getValue@value4 00A4                      __Hrparam 0000  
                  vfprintf@ap 0077                      __Lrparam 0000                    vfprintf@fp 0075  
             i2LCD_String@msg 0008         i2___wmul@multiplicand 0003                    ?_vfpfcnvrt 006A  
                  _ANSELCbits 3A60            i2vfpfcnvrt@convarg 0011         getKeypad@buttonNumber 0062  
                  sprintf@fmt 007A                      __ptext10 5432                      __ptext11 4E82  
                    __ptext20 5224                      __ptext12 4CF8                      __ptext21 5500  
                    __ptext13 44EC                      __ptext30 4F34                      __ptext22 4C2C  
                    __ptext14 552E                      __ptext31 4DBE                      __ptext23 42DC  
                    __ptext15 52FE                      __ptext32 489C                      __ptext24 5468  
                    __ptext16 513E                      __ptext33 555A                      __ptext25 5342  
                    __ptext17 55AA                      __ptext34 5382                      __ptext26 4A66  
                    __ptext18 54D0                      __ptext35 51B2                      __ptext27 5092  
                    __ptext19 55CC                      __ptext36 55EE                      __ptext28 565E  
                    __ptext37 5654                      __ptext29 549C                      __ptext38 560C  
                    __ptext39 5270                      _getValue 40B2                      _password 004D  
                  MSdelay@val 0060                      isa$xinst 0000          getValue@decimalValue 009C  
               ??i2_getKeypad 0003                   ??_getKeypad 0062                      _vfprintf 52BA  
       __end_ofi2_LCD_Command 562A                    _LCD_String 513E             i2___awmod@divisor 0003  
           i2___awmod@counter 0005                   _NVMCON1bits 39E5       i2LCD_String_xy@location 000E  
      ??_INTERRUPT_Initialize 0060                      intlevel2 0000                     sprintf@ap 007D  
    __end_of_initializeKeypad 5654                    i2MSdelay@i 0003                    i2MSdelay@j 0005  
                  i2_LCD_Char 55EE                  getValue@data 0092                 ??i2_vfpfcnvrt 000E  
                 ??_vfpfcnvrt 006D           __end_ofi2_getKeypad 4A66                      sprintf@f 007E  
                    sprintf@s 0079  
