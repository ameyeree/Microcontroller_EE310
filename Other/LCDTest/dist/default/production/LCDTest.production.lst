

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 26 12:42:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 12/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F47K42 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     _LATD1	set	130537
    54   000000                     _LATB	set	16315
    55   000000                     _TRISB	set	16323
    56   000000                     _TRISD	set	16325
    57   000000                     _LATD0	set	130536
    58                           
    59                           	psect	smallconst
    60   002000                     __psmallconst:
    61                           	callstack 0
    62   002000  00                 	db	0
    63   002001                     STR_1:
    64   002001  41                 	db	65	;'A'
    65   002002  6E                 	db	110	;'n'
    66   002003  74                 	db	116	;'t'
    67   002004  68                 	db	104	;'h'
    68   002005  6F                 	db	111	;'o'
    69   002006  6E                 	db	110	;'n'
    70   002007  79                 	db	121	;'y'
    71   002008  20                 	db	32
    72   002009  4D                 	db	77	;'M'
    73   00200A  65                 	db	101	;'e'
    74   00200B  79                 	db	121	;'y'
    75   00200C  65                 	db	101	;'e'
    76   00200D  72                 	db	114	;'r'
    77   00200E  00                 	db	0
    78   00200F                     STR_2:
    79   00200F  53                 	db	83	;'S'
    80   002010  6C                 	db	108	;'l'
    81   002011  65                 	db	101	;'e'
    82   002012  63                 	db	99	;'c'
    83   002013  68                 	db	104	;'h'
    84   002014  74                 	db	116	;'t'
    85   002015  61                 	db	97	;'a'
    86   002016  00                 	db	0
    87   002017  00                 	db	0	; dummy byte at the end
    88   000000                     
    89                           ; #config settings
    90                           
    91                           	psect	cinit
    92   002160                     __pcinit:
    93                           	callstack 0
    94   002160                     start_initialization:
    95                           	callstack 0
    96   002160                     __initialization:
    97                           	callstack 0
    98   002160                     end_of_initialization:
    99                           	callstack 0
   100   002160                     __end_of__initialization:
   101                           	callstack 0
   102   002160  0E00               	movlw	low (__Lsmallconst shr (0+16))
   103   002162  6EF8               	movwf	tblptru,c
   104   002164  0E20               	movlw	high __Lsmallconst
   105   002166  6EF7               	movwf	tblptrh,c
   106   002168  0100               	movlb	0
   107   00216A  EF7E  F010         	goto	_main	;jump to C main() function
   108                           
   109                           	psect	cstackCOMRAM
   110   000001                     __pcstackCOMRAM:
   111                           	callstack 0
   112   000001                     MSdelay@val:
   113                           	callstack 0
   114                           
   115                           ; 2 bytes @ 0x0
   116   000001                     	ds	2
   117   000003                     MSdelay@i:
   118                           	callstack 0
   119                           
   120                           ; 2 bytes @ 0x2
   121   000003                     	ds	2
   122   000005                     MSdelay@j:
   123                           	callstack 0
   124                           
   125                           ; 2 bytes @ 0x4
   126   000005                     	ds	2
   127   000007                     LCD_Command@cmd:
   128                           	callstack 0
   129   000007                     LCD_Char@dat:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x6
   133   000007                     	ds	1
   134   000008                     LCD_String@msg:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x7
   138   000008                     	ds	1
   139   000009                     LCD_String_xy@pos:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x8
   143   000009                     	ds	1
   144   00000A                     LCD_String_xy@msg:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x9
   148   00000A                     	ds	1
   149   00000B                     LCD_String_xy@row:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0xA
   153   00000B                     	ds	1
   154   00000C                     LCD_String_xy@location:
   155                           	callstack 0
   156                           
   157                           ; 1 bytes @ 0xB
   158   00000C                     	ds	1
   159   00000D                     
   160                           ; 1 bytes @ 0xC
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 87 in file "main.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels required when called: 4
   186 ;; This function calls:
   187 ;;		_LCD_Init
   188 ;;		_LCD_String_xy
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text0
   195   0020FC                     __ptext0:
   196                           	callstack 0
   197   0020FC                     _main:
   198                           	callstack 27
   199   0020FC                     
   200                           ;main.c: 90:     LCD_Init();
   201   0020FC  EC67  F010         	call	_LCD_Init	;wreg free
   202   002100                     
   203                           ;main.c: 92:     LCD_String_xy(1,0,"Anthony Meyer");
   204   002100  0E00               	movlw	0
   205   002102  6E09               	movwf	LCD_String_xy@pos^0,c
   206   002104  0E01               	movlw	low STR_1
   207   002106  6E0A               	movwf	LCD_String_xy@msg^0,c
   208   002108  0E01               	movlw	1
   209   00210A  EC31  F010         	call	_LCD_String_xy
   210   00210E                     
   211                           ;main.c: 94:     LCD_String_xy(2,0,"Slechta");
   212   00210E  0E00               	movlw	0
   213   002110  6E09               	movwf	LCD_String_xy@pos^0,c
   214   002112  0E0F               	movlw	low STR_2
   215   002114  6E0A               	movwf	LCD_String_xy@msg^0,c
   216   002116  0E02               	movlw	2
   217   002118  EC31  F010         	call	_LCD_String_xy
   218   00211C                     l25:
   219   00211C  EF8E  F010         	goto	l25
   220   002120  EFFE  F0FF         	goto	start
   221   002124                     __end_of_main:
   222                           	callstack 0
   223                           
   224 ;; *************** function _LCD_String_xy *****************
   225 ;; Defined at:
   226 ;;		line 147 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;  row             1    wreg     unsigned char 
   229 ;;  pos             1    8[COMRAM] unsigned char 
   230 ;;  msg             1    9[COMRAM] PTR const unsigned char 
   231 ;;		 -> STR_2(8), STR_1(14), 
   232 ;; Auto vars:     Size  Location     Type
   233 ;;  row             1   10[COMRAM] unsigned char 
   234 ;;  location        1   11[COMRAM] unsigned char 
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   248 ;;Total ram usage:        4 bytes
   249 ;; Hardware stack levels used: 1
   250 ;; Hardware stack levels required when called: 3
   251 ;; This function calls:
   252 ;;		_LCD_Command
   253 ;;		_LCD_String
   254 ;; This function is called by:
   255 ;;		_main
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text1
   260   002062                     __ptext1:
   261                           	callstack 0
   262   002062                     _LCD_String_xy:
   263                           	callstack 27
   264                           
   265                           ;incstack = 0
   266                           ;LCD_String_xy@row stored from wreg
   267   002062  6E0B               	movwf	LCD_String_xy@row^0,c
   268   002064                     
   269                           ;main.c: 150:     if(row<=1)
   270   002064  0E02               	movlw	2
   271   002066  600B               	cpfslt	LCD_String_xy@row^0,c
   272   002068  EF38  F010         	goto	u81
   273   00206C  EF3A  F010         	goto	u80
   274   002070                     u81:
   275   002070  EF43  F010         	goto	l873
   276   002074                     u80:
   277   002074                     
   278                           ;main.c: 151:     {;main.c: 152:         location=(0x80) | ((pos) & 0x0f);
   279   002074  5009               	movf	LCD_String_xy@pos^0,w,c
   280   002076  0B0F               	andlw	15
   281   002078  0980               	iorlw	128
   282   00207A  6E0C               	movwf	LCD_String_xy@location^0,c
   283   00207C                     
   284                           ;main.c: 153:         LCD_Command(location);
   285   00207C  500C               	movf	LCD_String_xy@location^0,w,c
   286   00207E  ECA1  F010         	call	_LCD_Command
   287                           
   288                           ;main.c: 154:     }
   289   002082  EF4A  F010         	goto	l877
   290   002086                     l873:
   291                           
   292                           ;main.c: 156:     {;main.c: 157:         location=(0xC0) | ((pos) & 0x0f);
   293   002086  5009               	movf	LCD_String_xy@pos^0,w,c
   294   002088  0B0F               	andlw	15
   295   00208A  09C0               	iorlw	192
   296   00208C  6E0C               	movwf	LCD_String_xy@location^0,c
   297   00208E                     
   298                           ;main.c: 158:         LCD_Command(location);
   299   00208E  500C               	movf	LCD_String_xy@location^0,w,c
   300   002090  ECA1  F010         	call	_LCD_Command
   301   002094                     l877:
   302                           
   303                           ;main.c: 160:     LCD_String(msg);
   304   002094  C00A  F008         	movff	LCD_String_xy@msg,LCD_String@msg
   305   002098  EC4F  F010         	call	_LCD_String	;wreg free
   306   00209C  0012               	return		;funcret
   307   00209E                     __end_of_LCD_String_xy:
   308                           	callstack 0
   309                           
   310 ;; *************** function _LCD_String *****************
   311 ;; Defined at:
   312 ;;		line 138 in file "main.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;  msg             1    7[COMRAM] PTR const unsigned char 
   315 ;;		 -> STR_2(8), STR_1(14), 
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   327 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   331 ;;Total ram usage:        1 bytes
   332 ;; Hardware stack levels used: 1
   333 ;; Hardware stack levels required when called: 2
   334 ;; This function calls:
   335 ;;		_LCD_Char
   336 ;; This function is called by:
   337 ;;		_LCD_String_xy
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text2
   342   00209E                     __ptext2:
   343                           	callstack 0
   344   00209E                     _LCD_String:
   345                           	callstack 27
   346   00209E                     
   347                           ;main.c: 138: void LCD_String(const char *msg);main.c: 139: {;main.c: 140:     while((*m
      +                          sg)!='\0')
   348   00209E  EF59  F010         	goto	l857
   349   0020A2                     l853:
   350                           
   351                           ;main.c: 141:     {;main.c: 142:       LCD_Char(*msg);
   352   0020A2  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
   353   0020A8                     	if	0	;There is only one active tblptr byte
   354   0020A8                     	endif
   355   0020A8                     	if	0	;tblptru may be non-zero
   356   0020A8                     	endif
   357   0020A8                     	if	0	;tblptru may be non-zero
   358   0020A8                     	endif
   359   0020A8  0008               	tblrd		*
   360   0020AA  50F5               	movf	tablat,w,c
   361   0020AC  EC92  F010         	call	_LCD_Char
   362   0020B0                     
   363                           ;main.c: 143:       msg++;
   364   0020B0  2A08               	incf	LCD_String@msg^0,f,c
   365   0020B2                     l857:
   366                           
   367                           ;main.c: 140:     while((*msg)!='\0')
   368   0020B2  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
   369   0020B8                     	if	0	;There is only one active tblptr byte
   370   0020B8                     	endif
   371   0020B8                     	if	0	;tblptru may be non-zero
   372   0020B8                     	endif
   373   0020B8                     	if	0	;tblptru may be non-zero
   374   0020B8                     	endif
   375   0020B8  0008               	tblrd		*
   376   0020BA  50F5               	movf	tablat,w,c
   377   0020BC  0900               	iorlw	0
   378   0020BE  A4D8               	btfss	status,2,c
   379   0020C0  EF64  F010         	goto	u71
   380   0020C4  EF66  F010         	goto	u70
   381   0020C8                     u71:
   382   0020C8  EF51  F010         	goto	l853
   383   0020CC                     u70:
   384   0020CC  0012               	return		;funcret
   385   0020CE                     __end_of_LCD_String:
   386                           	callstack 0
   387                           
   388 ;; *************** function _LCD_Char *****************
   389 ;; Defined at:
   390 ;;		line 127 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;  dat             1    wreg     unsigned char 
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  dat             1    6[COMRAM] unsigned char 
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   407 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   408 ;;Total ram usage:        1 bytes
   409 ;; Hardware stack levels used: 1
   410 ;; Hardware stack levels required when called: 1
   411 ;; This function calls:
   412 ;;		_MSdelay
   413 ;; This function is called by:
   414 ;;		_LCD_String
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text3
   419   002124                     __ptext3:
   420                           	callstack 0
   421   002124                     _LCD_Char:
   422                           	callstack 27
   423                           
   424                           ;incstack = 0
   425                           ;LCD_Char@dat stored from wreg
   426   002124  6E07               	movwf	LCD_Char@dat^0,c
   427   002126                     
   428                           ;main.c: 127: void LCD_Char(char dat);main.c: 128: {;main.c: 129:     LATB= dat;
   429   002126  0060  F01F  FFBB   	movff	LCD_Char@dat,16315	;volatile
   430   00212C                     
   431                           ;main.c: 130:     LATD0 = 1;
   432   00212C  80BD               	bsf	16317,0,c	;volatile
   433   00212E                     
   434                           ;main.c: 131:     LATD1=1;
   435   00212E  82BD               	bsf	16317,1,c	;volatile
   436   002130                     
   437                           ;main.c: 132:     __nop();
   438   002130  0000               	nop	
   439   002132                     
   440                           ;main.c: 133:     LATD1=0;
   441   002132  92BD               	bcf	16317,1,c	;volatile
   442   002134                     
   443                           ;main.c: 134:     MSdelay(1);
   444   002134  0E00               	movlw	0
   445   002136  6E02               	movwf	(MSdelay@val+1)^0,c
   446   002138  0E01               	movlw	1
   447   00213A  6E01               	movwf	MSdelay@val^0,c
   448   00213C  EC0C  F010         	call	_MSdelay	;wreg free
   449   002140  0012               	return		;funcret
   450   002142                     __end_of_LCD_Char:
   451                           	callstack 0
   452                           
   453 ;; *************** function _LCD_Init *****************
   454 ;; Defined at:
   455 ;;		line 101 in file "main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   473 ;;Total ram usage:        0 bytes
   474 ;; Hardware stack levels used: 1
   475 ;; Hardware stack levels required when called: 2
   476 ;; This function calls:
   477 ;;		_LCD_Command
   478 ;;		_MSdelay
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           	psect	text4
   485   0020CE                     __ptext4:
   486                           	callstack 0
   487   0020CE                     _LCD_Init:
   488                           	callstack 28
   489   0020CE                     
   490                           ;main.c: 103:     MSdelay(15);
   491   0020CE  0E00               	movlw	0
   492   0020D0  6E02               	movwf	(MSdelay@val+1)^0,c
   493   0020D2  0E0F               	movlw	15
   494   0020D4  6E01               	movwf	MSdelay@val^0,c
   495   0020D6  EC0C  F010         	call	_MSdelay	;wreg free
   496   0020DA                     
   497                           ;main.c: 104:     TRISB = 0x00;
   498   0020DA  0E00               	movlw	0
   499   0020DC  6EC3               	movwf	195,c	;volatile
   500   0020DE                     
   501                           ;main.c: 105:     TRISD = 0x00;
   502   0020DE  0E00               	movlw	0
   503   0020E0  6EC5               	movwf	197,c	;volatile
   504                           
   505                           ;main.c: 106:     LCD_Command(0x01);
   506   0020E2  0E01               	movlw	1
   507   0020E4  ECA1  F010         	call	_LCD_Command
   508                           
   509                           ;main.c: 107:     LCD_Command(0x38);
   510   0020E8  0E38               	movlw	56
   511   0020EA  ECA1  F010         	call	_LCD_Command
   512                           
   513                           ;main.c: 108:     LCD_Command(0x0c);
   514   0020EE  0E0C               	movlw	12
   515   0020F0  ECA1  F010         	call	_LCD_Command
   516                           
   517                           ;main.c: 109:     LCD_Command(0x06);
   518   0020F4  0E06               	movlw	6
   519   0020F6  ECA1  F010         	call	_LCD_Command
   520   0020FA  0012               	return		;funcret
   521   0020FC                     __end_of_LCD_Init:
   522                           	callstack 0
   523                           
   524 ;; *************** function _LCD_Command *****************
   525 ;; Defined at:
   526 ;;		line 117 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  cmd             1    wreg     unsigned char 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  cmd             1    6[COMRAM] unsigned char 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   544 ;;Total ram usage:        1 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; Hardware stack levels required when called: 1
   547 ;; This function calls:
   548 ;;		_MSdelay
   549 ;; This function is called by:
   550 ;;		_LCD_Init
   551 ;;		_LCD_String_xy
   552 ;;		_LCD_Clear
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text5
   557   002142                     __ptext5:
   558                           	callstack 0
   559   002142                     _LCD_Command:
   560                           	callstack 28
   561                           
   562                           ;incstack = 0
   563                           ;LCD_Command@cmd stored from wreg
   564   002142  6E07               	movwf	LCD_Command@cmd^0,c
   565   002144                     
   566                           ;main.c: 117: void LCD_Command(char cmd );main.c: 118: {;main.c: 119:     LATB= cmd;
   567   002144  0060  F01F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
   568   00214A                     
   569                           ;main.c: 120:     LATD0 = 0;
   570   00214A  90BD               	bcf	16317,0,c	;volatile
   571   00214C                     
   572                           ;main.c: 121:     LATD1 = 1;
   573   00214C  82BD               	bsf	16317,1,c	;volatile
   574   00214E                     
   575                           ;main.c: 122:     __nop();
   576   00214E  0000               	nop	
   577   002150                     
   578                           ;main.c: 123:     LATD1 = 0;
   579   002150  92BD               	bcf	16317,1,c	;volatile
   580   002152                     
   581                           ;main.c: 124:     MSdelay(3);
   582   002152  0E00               	movlw	0
   583   002154  6E02               	movwf	(MSdelay@val+1)^0,c
   584   002156  0E03               	movlw	3
   585   002158  6E01               	movwf	MSdelay@val^0,c
   586   00215A  EC0C  F010         	call	_MSdelay	;wreg free
   587   00215E  0012               	return		;funcret
   588   002160                     __end_of_LCD_Command:
   589                           	callstack 0
   590                           
   591 ;; *************** function _MSdelay *****************
   592 ;; Defined at:
   593 ;;		line 164 in file "main.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  val             2    0[COMRAM] unsigned int 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  j               2    4[COMRAM] unsigned int 
   598 ;;  i               2    2[COMRAM] unsigned int 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, status,2, status,0
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   609 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   611 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   612 ;;Total ram usage:        6 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_LCD_Init
   618 ;;		_LCD_Command
   619 ;;		_LCD_Char
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text6
   624   002018                     __ptext6:
   625                           	callstack 0
   626   002018                     _MSdelay:
   627                           	callstack 27
   628   002018                     
   629                           ;main.c: 164: void MSdelay(unsigned int val);main.c: 165: {;main.c: 166:      unsigned i
      +                          nt i,j;;main.c: 167:         for(i=0;i<val;i++)
   630   002018  0E00               	movlw	0
   631   00201A  6E04               	movwf	(MSdelay@i+1)^0,c
   632   00201C  0E00               	movlw	0
   633   00201E  6E03               	movwf	MSdelay@i^0,c
   634   002020  EF25  F010         	goto	l825
   635   002024                     l813:
   636                           
   637                           ;main.c: 168:             for(j=0;j<165;j++);
   638   002024  0E00               	movlw	0
   639   002026  6E06               	movwf	(MSdelay@j+1)^0,c
   640   002028  0E00               	movlw	0
   641   00202A  6E05               	movwf	MSdelay@j^0,c
   642   00202C                     l819:
   643   00202C  4A05               	infsnz	MSdelay@j^0,f,c
   644   00202E  2A06               	incf	(MSdelay@j+1)^0,f,c
   645   002030  5006               	movf	(MSdelay@j+1)^0,w,c
   646   002032  E109               	bnz	u50
   647   002034  0EA5               	movlw	165
   648   002036  5C05               	subwf	MSdelay@j^0,w,c
   649   002038  A0D8               	btfss	status,0,c
   650   00203A  EF21  F010         	goto	u51
   651   00203E  EF23  F010         	goto	u50
   652   002042                     u51:
   653   002042  EF16  F010         	goto	l819
   654   002046                     u50:
   655   002046  4A03               	infsnz	MSdelay@i^0,f,c
   656   002048  2A04               	incf	(MSdelay@i+1)^0,f,c
   657   00204A                     l825:
   658   00204A  5001               	movf	MSdelay@val^0,w,c
   659   00204C  5C03               	subwf	MSdelay@i^0,w,c
   660   00204E  5002               	movf	(MSdelay@val+1)^0,w,c
   661   002050  5804               	subwfb	(MSdelay@i+1)^0,w,c
   662   002052  A0D8               	btfss	status,0,c
   663   002054  EF2E  F010         	goto	u61
   664   002058  EF30  F010         	goto	u60
   665   00205C                     u61:
   666   00205C  EF12  F010         	goto	l813
   667   002060                     u60:
   668   002060  0012               	return		;funcret
   669   002062                     __end_of_MSdelay:
   670                           	callstack 0
   671                           
   672                           	psect	rparam
   673   000000                     
   674                           	psect	config
   675                           
   676                           ;Config register CONFIG1L @ 0x300000
   677                           ;	External Oscillator Selection
   678                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
   679                           ;	Reset Oscillator Selection
   680                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   681   300000                     	org	3145728
   682   300000  F8                 	db	248
   683                           
   684                           ;Config register CONFIG1H @ 0x300001
   685                           ;	Clock out Enable bit
   686                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   687                           ;	PRLOCKED One-Way Set Enable bit
   688                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
   689                           ;	Clock Switch Enable bit
   690                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   691                           ;	Fail-Safe Clock Monitor Enable bit
   692                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   693   300001                     	org	3145729
   694   300001  FF                 	db	255
   695                           
   696                           ;Config register CONFIG2L @ 0x300002
   697                           ;	MCLR Enable bit
   698                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   699                           ;	Power-up timer selection bits
   700                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   701                           ;	Multi-vector enable bit
   702                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   703                           ;	IVTLOCK bit One-way set enable bit
   704                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
   705                           ;	Low Power BOR Enable bit
   706                           ;	LPBOREN = OFF, ULPBOR disabled
   707                           ;	Brown-out Reset Enable bits
   708                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   709   300002                     	org	3145730
   710   300002  FF                 	db	255
   711                           
   712                           ;Config register CONFIG2H @ 0x300003
   713                           ;	Brown-out Reset Voltage Selection bits
   714                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   715                           ;	ZCD Disable bit
   716                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   717                           ;	PPSLOCK bit One-Way Set Enable bit
   718                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   719                           ;	Stack Full/Underflow Reset Enable bit
   720                           ;	STVREN = ON, Stack full/underflow will cause Reset
   721                           ;	Debugger Enable bit
   722                           ;	DEBUG = OFF, Background debugger disabled
   723                           ;	Extended Instruction Set Enable bit
   724                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   725   300003                     	org	3145731
   726   300003  FF                 	db	255
   727                           
   728                           ;Config register CONFIG3L @ 0x300004
   729                           ;	WDT Period selection bits
   730                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   731                           ;	WDT operating mode
   732                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   733   300004                     	org	3145732
   734   300004  9F                 	db	159
   735                           
   736                           ;Config register CONFIG3H @ 0x300005
   737                           ;	WDT Window Select bits
   738                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   739                           ;	WDT input clock selector
   740                           ;	WDTCCS = SC, Software Control
   741   300005                     	org	3145733
   742   300005  FF                 	db	255
   743                           
   744                           ;Config register CONFIG4L @ 0x300006
   745                           ;	Boot Block Size selection bits
   746                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   747                           ;	Boot Block enable bit
   748                           ;	BBEN = OFF, Boot block disabled
   749                           ;	Storage Area Flash enable bit
   750                           ;	SAFEN = OFF, SAF disabled
   751                           ;	Application Block write protection bit
   752                           ;	WRTAPP = OFF, Application Block not write protected
   753   300006                     	org	3145734
   754   300006  FF                 	db	255
   755                           
   756                           ;Config register CONFIG4H @ 0x300007
   757                           ;	Boot Block Write Protection bit
   758                           ;	WRTB = OFF, Boot Block not write-protected
   759                           ;	Configuration Register Write Protection bit
   760                           ;	WRTC = OFF, Configuration registers not write-protected
   761                           ;	Data EEPROM Write Protection bit
   762                           ;	WRTD = OFF, Data EEPROM not write-protected
   763                           ;	SAF Write protection bit
   764                           ;	WRTSAF = OFF, SAF not Write Protected
   765                           ;	Low Voltage Programming Enable bit
   766                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   767   300007                     	org	3145735
   768   300007  FF                 	db	255
   769                           
   770                           ;Config register CONFIG5L @ 0x300008
   771                           ;	PFM and Data EEPROM Code Protection bit
   772                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   773   300008                     	org	3145736
   774   300008  FF                 	db	255
   775                           
   776                           ;Config register CONFIG5H @ 0x300009
   777                           ;	unspecified, using default values
   778   300009                     	org	3145737
   779   300009  FF                 	db	255
   780                           tosu	equ	0x3FFF
   781                           tosh	equ	0x3FFE
   782                           tosl	equ	0x3FFD
   783                           stkptr	equ	0x3FFC
   784                           pclatu	equ	0x3FFB
   785                           pclath	equ	0x3FFA
   786                           pcl	equ	0x3FF9
   787                           tblptru	equ	0x3FF8
   788                           tblptrh	equ	0x3FF7
   789                           tblptrl	equ	0x3FF6
   790                           tablat	equ	0x3FF5
   791                           prodh	equ	0x3FF4
   792                           prodl	equ	0x3FF3
   793                           indf0	equ	0x3FEF
   794                           postinc0	equ	0x3FEE
   795                           postdec0	equ	0x3FED
   796                           preinc0	equ	0x3FEC
   797                           plusw0	equ	0x3FEB
   798                           fsr0h	equ	0x3FEA
   799                           fsr0l	equ	0x3FE9
   800                           wreg	equ	0x3FE8
   801                           indf1	equ	0x3FE7
   802                           postinc1	equ	0x3FE6
   803                           postdec1	equ	0x3FE5
   804                           preinc1	equ	0x3FE4
   805                           plusw1	equ	0x3FE3
   806                           fsr1h	equ	0x3FE2
   807                           fsr1l	equ	0x3FE1
   808                           bsr	equ	0x3FE0
   809                           indf2	equ	0x3FDF
   810                           postinc2	equ	0x3FDE
   811                           postdec2	equ	0x3FDD
   812                           preinc2	equ	0x3FDC
   813                           plusw2	equ	0x3FDB
   814                           fsr2h	equ	0x3FDA
   815                           fsr2l	equ	0x3FD9
   816                           status	equ	0x3FD8

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1906
                           _LCD_Init
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2    1244
                                              8 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1     463
                                              7 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     342
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     662
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     342
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     320
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      C       C       1       12.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK27          100      0       0      58        0.0%
BANK27             100      0       0      59        0.0%
BITBANK28          100      0       0      60        0.0%
BANK28             100      0       0      61        0.0%
BITBANK29          100      0       0      62        0.0%
BANK29             100      0       0      63        0.0%
BITBANK30          100      0       0      64        0.0%
BANK30             100      0       0      65        0.0%
BITBANK31          100      0       0      66        0.0%
BANK31             100      0       0      67        0.0%
BITBIGSFRhh         3A      0       0      68        0.0%
BITBIGSFRhl          1      0       0      69        0.0%
BITBIGSFRlhh         5      0       0      70        0.0%
BITBIGSFRlhl         1      0       0      71        0.0%
BITBIGSFRll        7BB      0       0      72        0.0%
ABS                  0      0       0      73        0.0%
BIGRAM            1FFF      0       0      74        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 26 12:42:56 2024

           ?_LCD_Command 0001                       l31 20FA                       l40 2140  
                     l25 211C                       l26 211C                       l51 209C  
                     l37 215E                       l46 20CC                       l59 2060  
                     u50 2046                       u51 2042                       u60 2060  
                     u61 205C                       u70 20CC                       u71 20C8  
                     u80 2074                       u81 2070              ?_LCD_String 0008  
                    l811 2018                      l821 2030                      l813 2024  
                    l823 2046                      l831 212E                      l825 204A  
                    l841 214A                      l833 2130                      l819 202C  
                    l843 214C                      l835 2132                      l827 2126  
                    l851 209E                      l845 214E                      l861 20DA  
                    l837 2134                      l829 212C                      l853 20A2  
                    l847 2150                      l839 2144                      l863 20DE  
                    l855 20B0                      l871 207C                      l849 2152  
                    l857 20B2                      l873 2086                      l865 2064  
                    l881 2100                      l859 20CE                      l875 208E  
                    l867 2064                      l883 210E                      l877 2094  
                    l869 2074                      l879 20FC              LCD_Char@dat 0007  
                   STR_1 2001                     STR_2 200F                     _LATB 3FBB  
                   _main 20FC                     start FFFC          __end_of_MSdelay 2062  
          _LCD_String_xy 2062             ___param_bank 0000         __end_of_LCD_Char 2142  
       __end_of_LCD_Init 20FC                    ?_main 0001                    _LATD0 1FDE8  
                  _LATD1 1FDE9                    _TRISB 3FC3                    _TRISD 3FC5  
                  tablat 3FF5                    status 3FD8           ?_LCD_String_xy 0009  
        __initialization 2160             __end_of_main 2124                   ??_main 000D  
          __activetblptr 0001         LCD_String_xy@msg 000A         LCD_String_xy@pos 0009  
       LCD_String_xy@row 000B                ??_MSdelay 0003                   isa$std 0001  
           __mediumconst 0000                   tblptrh 3FF7                   tblptrl 3FF6  
                 tblptru 3FF8                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 2160                ?_LCD_Init 0001          ??_LCD_String_xy 000B  
          ___rparam_used 0001           __pcstackCOMRAM 0001             ??_LCD_String 0009  
             ??_LCD_Char 0007               ??_LCD_Init 0008       __end_of_LCD_String 20CE  
                _MSdelay 2018            LCD_String@msg 0008                  __Hparam 0000  
                __Lparam 0000             __psmallconst 2000                  __pcinit 2160  
                __ramtop 2000                  __ptext0 20FC                  __ptext1 2062  
                __ptext2 209E                  __ptext3 2124                  __ptext4 20CE  
                __ptext5 2142                  __ptext6 2018     end_of_initialization 2160  
         LCD_Command@cmd 0007            ??_LCD_Command 0007      start_initialization 2160  
  __end_of_LCD_String_xy 209E      __end_of_LCD_Command 2160                 ?_MSdelay 0001  
            __smallconst 2000    LCD_String_xy@location 000C                 MSdelay@i 0003  
               MSdelay@j 0005                 _LCD_Char 2124                 _LCD_Init 20CE  
            _LCD_Command 2142                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2000               MSdelay@val 0001                 isa$xinst 0000  
             _LCD_String 209E  
