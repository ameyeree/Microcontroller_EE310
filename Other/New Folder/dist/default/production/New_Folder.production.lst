

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Apr 25 15:11:03 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F47K42 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _PORTBbits	set	16331
    53   000000                     _ANSELB	set	14928
    54   000000                     _LATB	set	16315
    55   000000                     _TRISB	set	16323
    56   000000                     _PORTB	set	16331
    57   000000                     _PORTD	set	16333
    58   000000                     _TRISD	set	16325
    59   000000                     _LATD	set	16317
    60   000000                     _ANSELD	set	14960
    61                           
    62                           	psect	smallconst
    63   002000                     __psmallconst:
    64                           	callstack 0
    65   002000  00                 	db	0
    66   002001                     STR_1:
    67   002001  48                 	db	72	;'H'
    68   002002  65                 	db	101	;'e'
    69   002003  6C                 	db	108	;'l'
    70   002004  6C                 	db	108	;'l'
    71   002005  6F                 	db	111	;'o'
    72   002006  20                 	db	32
    73   002007  57                 	db	87	;'W'
    74   002008  6F                 	db	111	;'o'
    75   002009  72                 	db	114	;'r'
    76   00200A  6C                 	db	108	;'l'
    77   00200B  64                 	db	100	;'d'
    78   00200C  00                 	db	0
    79   00200D                     STR_2:
    80   00200D  53                 	db	83	;'S'
    81   00200E  65                 	db	101	;'e'
    82   00200F  63                 	db	99	;'c'
    83   002010  6F                 	db	111	;'o'
    84   002011  6E                 	db	110	;'n'
    85   002012  64                 	db	100	;'d'
    86   002013  20                 	db	32
    87   002014  6C                 	db	108	;'l'
    88   002015  69                 	db	105	;'i'
    89   002016  6E                 	db	110	;'n'
    90   002017  65                 	db	101	;'e'
    91   002018  00                 	db	0
    92   002019  00                 	db	0	; dummy byte at the end
    93   000000                     
    94                           ; #config settings
    95                           
    96                           	psect	cinit
    97   002136                     __pcinit:
    98                           	callstack 0
    99   002136                     start_initialization:
   100                           	callstack 0
   101   002136                     __initialization:
   102                           	callstack 0
   103   002136                     end_of_initialization:
   104                           	callstack 0
   105   002136                     __end_of__initialization:
   106                           	callstack 0
   107   002136  0E00               	movlw	low (__Lsmallconst shr (0+16))
   108   002138  6EF8               	movwf	tblptru,c
   109   00213A  0E20               	movlw	high __Lsmallconst
   110   00213C  6EF7               	movwf	tblptrh,c
   111   00213E  0100               	movlb	0
   112   002140  EF0D  F010         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	cstackCOMRAM
   115   000001                     __pcstackCOMRAM:
   116                           	callstack 0
   117   000001                     ??_LCD_Command:
   118   000001                     ??_LCD_Char:
   119                           
   120                           ; 1 bytes @ 0x0
   121   000001                     	ds	1
   122   000002                     LCD_Command@cmd:
   123                           	callstack 0
   124   000002                     LCD_Char@dat:
   125                           	callstack 0
   126                           
   127                           ; 1 bytes @ 0x1
   128   000002                     	ds	1
   129   000003                     ??_LCD_Init:
   130   000003                     LCD_String@msg:
   131                           	callstack 0
   132   000003                     lcd_set_cursor@line:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x2
   136   000003                     	ds	1
   137   000004                     lcd_set_cursor@col:
   138                           	callstack 0
   139                           
   140                           ; 1 bytes @ 0x3
   141   000004                     	ds	1
   142   000005                     
   143                           ; 1 bytes @ 0x4
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 86 in file "main.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels required when called: 2
   169 ;; This function calls:
   170 ;;		_LCD_Init
   171 ;;		_LCD_String
   172 ;;		_lcd_set_cursor
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text0
   179   00201A                     __ptext0:
   180                           	callstack 0
   181   00201A                     _main:
   182                           	callstack 29
   183   00201A                     
   184                           ;main.c: 88:     PORTB = 0;
   185   00201A  0E00               	movlw	0
   186   00201C  6ECB               	movwf	203,c	;volatile
   187                           
   188                           ;main.c: 89:     TRISB = 0;
   189   00201E  0E00               	movlw	0
   190   002020  6EC3               	movwf	195,c	;volatile
   191                           
   192                           ;main.c: 90:     LATB = 0;
   193   002022  0E00               	movlw	0
   194   002024  6EBB               	movwf	187,c	;volatile
   195                           
   196                           ;main.c: 91:     ANSELB = 0;
   197   002026  0E00               	movlw	0
   198   002028  013A               	movlb	58	; () banked
   199   00202A  6F50               	movwf	80,b	;volatile
   200                           
   201                           ;main.c: 93:     PORTD = 0;
   202   00202C  0E00               	movlw	0
   203   00202E  6ECD               	movwf	205,c	;volatile
   204                           
   205                           ;main.c: 94:     TRISD = 0;
   206   002030  0E00               	movlw	0
   207   002032  6EC5               	movwf	197,c	;volatile
   208                           
   209                           ;main.c: 95:     LATD = 0;
   210   002034  0E00               	movlw	0
   211   002036  6EBD               	movwf	189,c	;volatile
   212                           
   213                           ;main.c: 96:     ANSELD = 0;
   214   002038  0E00               	movlw	0
   215   00203A  6F70               	movwf	112,b	;volatile
   216   00203C                     
   217                           ; BSR set to: 58
   218                           ;main.c: 98:     LCD_Init();
   219   00203C  EC66  F010         	call	_LCD_Init	;wreg free
   220   002040                     
   221                           ;main.c: 99:     LCD_String("Hello World");
   222   002040  0E01               	movlw	low STR_1
   223   002042  6E03               	movwf	LCD_String@msg^0,c
   224   002044  EC4E  F010         	call	_LCD_String	;wreg free
   225   002048                     
   226                           ;main.c: 100:     lcd_set_cursor(3,2);
   227   002048  0E02               	movlw	2
   228   00204A  6E03               	movwf	lcd_set_cursor@line^0,c
   229   00204C  0E03               	movlw	3
   230   00204E  EC31  F010         	call	_lcd_set_cursor
   231   002052                     
   232                           ;main.c: 101:     LCD_String("Second line");
   233   002052  0E0D               	movlw	low STR_2
   234   002054  6E03               	movwf	LCD_String@msg^0,c
   235   002056  EC4E  F010         	call	_LCD_String	;wreg free
   236   00205A                     l35:
   237   00205A  EF2D  F010         	goto	l35
   238   00205E  EFFE  F0FF         	goto	start
   239   002062                     __end_of_main:
   240                           	callstack 0
   241                           
   242 ;; *************** function _lcd_set_cursor *****************
   243 ;; Defined at:
   244 ;;		line 174 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;  col             1    wreg     unsigned char 
   247 ;;  line            1    2[COMRAM] unsigned char 
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  col             1    3[COMRAM] unsigned char 
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, status,2, status,0, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   259 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   260 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   262 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   263 ;;Total ram usage:        2 bytes
   264 ;; Hardware stack levels used: 1
   265 ;; Hardware stack levels required when called: 1
   266 ;; This function calls:
   267 ;;		_LCD_Command
   268 ;; This function is called by:
   269 ;;		_main
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text1
   274   002062                     __ptext1:
   275                           	callstack 0
   276   002062                     _lcd_set_cursor:
   277                           	callstack 29
   278                           
   279                           ;incstack = 0
   280                           ;lcd_set_cursor@col stored from wreg
   281   002062  6E04               	movwf	lcd_set_cursor@col^0,c
   282   002064                     
   283                           ;main.c: 175:     if (line == 1){
   284   002064  0403               	decf	lcd_set_cursor@line^0,w,c
   285   002066  A4D8               	btfss	status,2,c
   286   002068  EF38  F010         	goto	u81
   287   00206C  EF3A  F010         	goto	u80
   288   002070                     u81:
   289   002070  EF40  F010         	goto	l853
   290   002074                     u80:
   291   002074                     
   292                           ;main.c: 176:         LCD_Command(0b10000000 | col);
   293   002074  5004               	movf	lcd_set_cursor@col^0,w,c
   294   002076  0980               	iorlw	128
   295   002078  EC8B  F010         	call	_LCD_Command
   296                           
   297                           ;main.c: 177:     }else if(line == 2){
   298   00207C  EF4D  F010         	goto	l67
   299   002080                     l853:
   300   002080  0E02               	movlw	2
   301   002082  1803               	xorwf	lcd_set_cursor@line^0,w,c
   302   002084  A4D8               	btfss	status,2,c
   303   002086  EF47  F010         	goto	u91
   304   00208A  EF49  F010         	goto	u90
   305   00208E                     u91:
   306   00208E  EF4D  F010         	goto	l67
   307   002092                     u90:
   308   002092                     
   309                           ;main.c: 178:         LCD_Command(0b11000000 | col);
   310   002092  5004               	movf	lcd_set_cursor@col^0,w,c
   311   002094  09C0               	iorlw	192
   312   002096  EC8B  F010         	call	_LCD_Command
   313   00209A                     l67:
   314   00209A  0012               	return		;funcret
   315   00209C                     __end_of_lcd_set_cursor:
   316                           	callstack 0
   317                           
   318 ;; *************** function _LCD_String *****************
   319 ;; Defined at:
   320 ;;		line 149 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;  msg             1    2[COMRAM] PTR const unsigned char 
   323 ;;		 -> STR_2(12), STR_1(12), 
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   335 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   338 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   339 ;;Total ram usage:        1 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; Hardware stack levels required when called: 1
   342 ;; This function calls:
   343 ;;		_LCD_Char
   344 ;; This function is called by:
   345 ;;		_main
   346 ;;		_LCD_String_xy
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text2
   351   00209C                     __ptext2:
   352                           	callstack 0
   353   00209C                     _LCD_String:
   354                           	callstack 29
   355   00209C                     
   356                           ;main.c: 149: void LCD_String(const char *msg);main.c: 150: {;main.c: 151:     while((*m
      +                          sg)!=0)
   357   00209C  EF58  F010         	goto	l847
   358   0020A0                     l843:
   359                           
   360                           ;main.c: 152:     {;main.c: 153:       LCD_Char(*msg);
   361   0020A0  0060  F00F  FFF6   	movff	LCD_String@msg,tblptrl
   362   0020A6                     	if	0	;There is only one active tblptr byte
   363   0020A6                     	endif
   364   0020A6                     	if	0	;tblptru may be non-zero
   365   0020A6                     	endif
   366   0020A6                     	if	0	;tblptru may be non-zero
   367   0020A6                     	endif
   368   0020A6  0008               	tblrd		*
   369   0020A8  50F5               	movf	tablat,w,c
   370   0020AA  EC7B  F010         	call	_LCD_Char
   371   0020AE                     
   372                           ;main.c: 154:       msg++;
   373   0020AE  2A03               	incf	LCD_String@msg^0,f,c
   374   0020B0                     l847:
   375                           
   376                           ;main.c: 151:     while((*msg)!=0)
   377   0020B0  0060  F00F  FFF6   	movff	LCD_String@msg,tblptrl
   378   0020B6                     	if	0	;There is only one active tblptr byte
   379   0020B6                     	endif
   380   0020B6                     	if	0	;tblptru may be non-zero
   381   0020B6                     	endif
   382   0020B6                     	if	0	;tblptru may be non-zero
   383   0020B6                     	endif
   384   0020B6  0008               	tblrd		*
   385   0020B8  50F5               	movf	tablat,w,c
   386   0020BA  0900               	iorlw	0
   387   0020BC  A4D8               	btfss	status,2,c
   388   0020BE  EF63  F010         	goto	u71
   389   0020C2  EF65  F010         	goto	u70
   390   0020C6                     u71:
   391   0020C6  EF50  F010         	goto	l843
   392   0020CA                     u70:
   393   0020CA  0012               	return		;funcret
   394   0020CC                     __end_of_LCD_String:
   395                           	callstack 0
   396                           
   397 ;; *************** function _LCD_Char *****************
   398 ;; Defined at:
   399 ;;		line 138 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;  dat             1    wreg     unsigned char 
   402 ;; Auto vars:     Size  Location     Type
   403 ;;  dat             1    1[COMRAM] unsigned char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   417 ;;Total ram usage:        2 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_LCD_String
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           	psect	text3
   427   0020F6                     __ptext3:
   428                           	callstack 0
   429   0020F6                     _LCD_Char:
   430                           	callstack 29
   431                           
   432                           ;incstack = 0
   433                           ;LCD_Char@dat stored from wreg
   434   0020F6  6E02               	movwf	LCD_Char@dat^0,c
   435   0020F8                     
   436                           ;main.c: 138: void LCD_Char(char dat);main.c: 139: {;main.c: 140:     PORTD = dat;
   437   0020F8  0060  F00B  FFCD   	movff	LCD_Char@dat,16333	;volatile
   438   0020FE                     
   439                           ;main.c: 141:     PORTBbits.RB0 = 1;
   440   0020FE  80CB               	bsf	203,0,c	;volatile
   441   002100                     
   442                           ;main.c: 142:     PORTBbits.RB1=1;
   443   002100  82CB               	bsf	203,1,c	;volatile
   444   002102                     
   445                           ;main.c: 143:     __nop();
   446   002102  0000               	nop	
   447   002104                     
   448                           ;main.c: 144:     PORTBbits.RB1=0;
   449   002104  92CB               	bcf	203,1,c	;volatile
   450   002106                     
   451                           ;main.c: 145:     _delay((unsigned long)((15)*(4000000/4000.0)));
   452   002106  0E14               	movlw	20
   453   002108  6E01               	movwf	??_LCD_Char^0,c
   454   00210A  0E7A               	movlw	122
   455   00210C                     u117:
   456   00210C  2EE8               	decfsz	wreg,f,c
   457   00210E  D7FE               	bra	u117
   458   002110  2E01               	decfsz	??_LCD_Char^0,f,c
   459   002112  D7FC               	bra	u117
   460   002114  0012               	return		;funcret
   461   002116                     __end_of_LCD_Char:
   462                           	callstack 0
   463                           
   464 ;; *************** function _LCD_Init *****************
   465 ;; Defined at:
   466 ;;		line 111 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   482 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   484 ;;Total ram usage:        2 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; Hardware stack levels required when called: 1
   487 ;; This function calls:
   488 ;;		_LCD_Command
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text4
   495   0020CC                     __ptext4:
   496                           	callstack 0
   497   0020CC                     _LCD_Init:
   498                           	callstack 29
   499   0020CC                     
   500                           ;main.c: 113:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   501   0020CC  0E06               	movlw	6
   502   0020CE  6E04               	movwf	(??_LCD_Init+1)^0,c
   503   0020D0  0E13               	movlw	19
   504   0020D2  6E03               	movwf	??_LCD_Init^0,c
   505   0020D4  0EAE               	movlw	174
   506   0020D6                     u127:
   507   0020D6  2EE8               	decfsz	wreg,f,c
   508   0020D8  D7FE               	bra	u127
   509   0020DA  2E03               	decfsz	??_LCD_Init^0,f,c
   510   0020DC  D7FC               	bra	u127
   511   0020DE  2E04               	decfsz	(??_LCD_Init+1)^0,f,c
   512   0020E0  D7FA               	bra	u127
   513   0020E2                     
   514                           ;main.c: 117:     LCD_Command(0b00111100);
   515   0020E2  0E3C               	movlw	60
   516   0020E4  EC8B  F010         	call	_LCD_Command
   517   0020E8                     
   518                           ;main.c: 118:     LCD_Command(0b00001100);
   519   0020E8  0E0C               	movlw	12
   520   0020EA  EC8B  F010         	call	_LCD_Command
   521   0020EE                     
   522                           ;main.c: 119:     LCD_Command(0b00000110);
   523   0020EE  0E06               	movlw	6
   524   0020F0  EC8B  F010         	call	_LCD_Command
   525   0020F4  0012               	return		;funcret
   526   0020F6                     __end_of_LCD_Init:
   527                           	callstack 0
   528                           
   529 ;; *************** function _LCD_Command *****************
   530 ;; Defined at:
   531 ;;		line 128 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;  cmd             1    wreg     unsigned char 
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  cmd             1    1[COMRAM] unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   549 ;;Total ram usage:        2 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_LCD_Init
   555 ;;		_lcd_set_cursor
   556 ;;		_LCD_Clear
   557 ;;		_LCD_String_xy
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text5
   562   002116                     __ptext5:
   563                           	callstack 0
   564   002116                     _LCD_Command:
   565                           	callstack 29
   566                           
   567                           ;incstack = 0
   568                           ;LCD_Command@cmd stored from wreg
   569   002116  6E02               	movwf	LCD_Command@cmd^0,c
   570   002118                     
   571                           ;main.c: 128: void LCD_Command(char cmd );main.c: 129: {;main.c: 130:     PORTD = cmd;
   572   002118  0060  F00B  FFCD   	movff	LCD_Command@cmd,16333	;volatile
   573   00211E                     
   574                           ;main.c: 131:     PORTBbits.RB0 = 0;
   575   00211E  90CB               	bcf	203,0,c	;volatile
   576   002120                     
   577                           ;main.c: 132:     PORTBbits.RB1 = 1;
   578   002120  82CB               	bsf	203,1,c	;volatile
   579   002122                     
   580                           ;main.c: 133:     __nop();
   581   002122  0000               	nop	
   582   002124                     
   583                           ;main.c: 134:     PORTBbits.RB1 = 0;
   584   002124  92CB               	bcf	203,1,c	;volatile
   585   002126                     
   586                           ;main.c: 135:     _delay((unsigned long)((15)*(4000000/4000.0)));
   587   002126  0E14               	movlw	20
   588   002128  6E01               	movwf	??_LCD_Command^0,c
   589   00212A  0E7A               	movlw	122
   590   00212C                     u137:
   591   00212C  2EE8               	decfsz	wreg,f,c
   592   00212E  D7FE               	bra	u137
   593   002130  2E01               	decfsz	??_LCD_Command^0,f,c
   594   002132  D7FC               	bra	u137
   595   002134  0012               	return		;funcret
   596   002136                     __end_of_LCD_Command:
   597                           	callstack 0
   598                           
   599                           	psect	rparam
   600   000000                     
   601                           	psect	config
   602                           
   603                           ;Config register CONFIG1L @ 0x300000
   604                           ;	External Oscillator Selection
   605                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
   606                           ;	Reset Oscillator Selection
   607                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
   608   300000                     	org	3145728
   609   300000  F8                 	db	248
   610                           
   611                           ;Config register CONFIG1H @ 0x300001
   612                           ;	Clock out Enable bit
   613                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
   614                           ;	PRLOCKED One-Way Set Enable bit
   615                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
   616                           ;	Clock Switch Enable bit
   617                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
   618                           ;	Fail-Safe Clock Monitor Enable bit
   619                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
   620   300001                     	org	3145729
   621   300001  FF                 	db	255
   622                           
   623                           ;Config register CONFIG2L @ 0x300002
   624                           ;	MCLR Enable bit
   625                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
   626                           ;	Power-up timer selection bits
   627                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   628                           ;	Multi-vector enable bit
   629                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
   630                           ;	IVTLOCK bit One-way set enable bit
   631                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
   632                           ;	Low Power BOR Enable bit
   633                           ;	LPBOREN = OFF, ULPBOR disabled
   634                           ;	Brown-out Reset Enable bits
   635                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
   636   300002                     	org	3145730
   637   300002  FF                 	db	255
   638                           
   639                           ;Config register CONFIG2H @ 0x300003
   640                           ;	Brown-out Reset Voltage Selection bits
   641                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
   642                           ;	ZCD Disable bit
   643                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
   644                           ;	PPSLOCK bit One-Way Set Enable bit
   645                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
   646                           ;	Stack Full/Underflow Reset Enable bit
   647                           ;	STVREN = ON, Stack full/underflow will cause Reset
   648                           ;	Debugger Enable bit
   649                           ;	DEBUG = OFF, Background debugger disabled
   650                           ;	Extended Instruction Set Enable bit
   651                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
   652   300003                     	org	3145731
   653   300003  FF                 	db	255
   654                           
   655                           ;Config register CONFIG3L @ 0x300004
   656                           ;	WDT Period selection bits
   657                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   658                           ;	WDT operating mode
   659                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
   660   300004                     	org	3145732
   661   300004  9F                 	db	159
   662                           
   663                           ;Config register CONFIG3H @ 0x300005
   664                           ;	WDT Window Select bits
   665                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
   666                           ;	WDT input clock selector
   667                           ;	WDTCCS = SC, Software Control
   668   300005                     	org	3145733
   669   300005  FF                 	db	255
   670                           
   671                           ;Config register CONFIG4L @ 0x300006
   672                           ;	Boot Block Size selection bits
   673                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
   674                           ;	Boot Block enable bit
   675                           ;	BBEN = OFF, Boot block disabled
   676                           ;	Storage Area Flash enable bit
   677                           ;	SAFEN = OFF, SAF disabled
   678                           ;	Application Block write protection bit
   679                           ;	WRTAPP = OFF, Application Block not write protected
   680   300006                     	org	3145734
   681   300006  FF                 	db	255
   682                           
   683                           ;Config register CONFIG4H @ 0x300007
   684                           ;	Boot Block Write Protection bit
   685                           ;	WRTB = OFF, Boot Block not write-protected
   686                           ;	Configuration Register Write Protection bit
   687                           ;	WRTC = OFF, Configuration registers not write-protected
   688                           ;	Data EEPROM Write Protection bit
   689                           ;	WRTD = OFF, Data EEPROM not write-protected
   690                           ;	SAF Write protection bit
   691                           ;	WRTSAF = OFF, SAF not Write Protected
   692                           ;	Low Voltage Programming Enable bit
   693                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
   694   300007                     	org	3145735
   695   300007  FF                 	db	255
   696                           
   697                           ;Config register CONFIG5L @ 0x300008
   698                           ;	PFM and Data EEPROM Code Protection bit
   699                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
   700   300008                     	org	3145736
   701   300008  FF                 	db	255
   702                           
   703                           ;Config register CONFIG5H @ 0x300009
   704                           ;	unspecified, using default values
   705   300009                     	org	3145737
   706   300009  FF                 	db	255
   707                           tosu	equ	0x3FFF
   708                           tosh	equ	0x3FFE
   709                           tosl	equ	0x3FFD
   710                           stkptr	equ	0x3FFC
   711                           pclatu	equ	0x3FFB
   712                           pclath	equ	0x3FFA
   713                           pcl	equ	0x3FF9
   714                           tblptru	equ	0x3FF8
   715                           tblptrh	equ	0x3FF7
   716                           tblptrl	equ	0x3FF6
   717                           tablat	equ	0x3FF5
   718                           prodh	equ	0x3FF4
   719                           prodl	equ	0x3FF3
   720                           indf0	equ	0x3FEF
   721                           postinc0	equ	0x3FEE
   722                           postdec0	equ	0x3FED
   723                           preinc0	equ	0x3FEC
   724                           plusw0	equ	0x3FEB
   725                           fsr0h	equ	0x3FEA
   726                           fsr0l	equ	0x3FE9
   727                           wreg	equ	0x3FE8
   728                           indf1	equ	0x3FE7
   729                           postinc1	equ	0x3FE6
   730                           postdec1	equ	0x3FE5
   731                           preinc1	equ	0x3FE4
   732                           plusw1	equ	0x3FE3
   733                           fsr1h	equ	0x3FE2
   734                           fsr1l	equ	0x3FE1
   735                           bsr	equ	0x3FE0
   736                           indf2	equ	0x3FDF
   737                           postinc2	equ	0x3FDE
   738                           postdec2	equ	0x3FDD
   739                           preinc2	equ	0x3FDC
   740                           plusw2	equ	0x3FDB
   741                           fsr2h	equ	0x3FDA
   742                           fsr2l	equ	0x3FD9
   743                           status	equ	0x3FD8

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _main->_lcd_set_cursor
    _lcd_set_cursor->_LCD_Command
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     482
                           _LCD_Init
                         _LCD_String
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       2     1      1     179
                                              2 COMRAM     2     1      1
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           1     0      1     288
                                              2 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Char                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      15
                                              2 COMRAM     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _lcd_set_cursor
     _LCD_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
ABS                  0      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK16          100      0       0      37        0.0%
BANK16             100      0       0      38        0.0%
BITBANK17          100      0       0      39        0.0%
BANK17             100      0       0      40        0.0%
BITBANK18          100      0       0      41        0.0%
BANK18             100      0       0      42        0.0%
BITBANK19          100      0       0      43        0.0%
BANK19             100      0       0      44        0.0%
BITBANK20          100      0       0      45        0.0%
BANK20             100      0       0      46        0.0%
BITBANK21          100      0       0      47        0.0%
BANK21             100      0       0      48        0.0%
BITBANK22          100      0       0      49        0.0%
BANK22             100      0       0      50        0.0%
BITBANK23          100      0       0      51        0.0%
BANK23             100      0       0      52        0.0%
BITBANK24          100      0       0      53        0.0%
BANK24             100      0       0      54        0.0%
BITBANK25          100      0       0      55        0.0%
BANK25             100      0       0      56        0.0%
BITBANK26          100      0       0      57        0.0%
BANK26             100      0       0      58        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBIGSFRhh         32      0       0      69        0.0%
BITBIGSFRhl          1      0       0      70        0.0%
BITBIGSFRlhh         5      0       0      71        0.0%
BITBIGSFRlhl         1      0       0      72        0.0%
BITBIGSFRllhh        5      0       0      73        0.0%
BITBIGSFRllhl        1      0       0      74        0.0%
BITBIGSFRlllhh     54A      0       0      75        0.0%
BITBIGSFRlllhl      1F      0       0      76        0.0%
BITBIGSFRllll      250      0       0      77        0.0%
BIGRAM            1FFF      0       0      78        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Apr 25 15:11:03 2024

           ?_LCD_Command 0001                       l41 20F4                       l50 2114  
                     l35 205A                       l36 205A                       l47 2134  
                     l56 20CA                       l67 209A                       u70 20CA  
                     u71 20C6                       u80 2074                       u81 2070  
                     u90 2092                       u91 208E              ?_LCD_String 0003  
                    l751 2118                      l761 2126                      l753 211E  
                    l841 209C                      l755 2120                      l771 2104  
                    l763 20F8                      l843 20A0                      l851 2074  
                    l757 2122                      l781 20EE                      l773 2106  
                    l765 20FE                      l845 20AE                      l853 2080  
                    l861 2040                      l759 2124                      l775 20CC  
                    l767 2100                      l847 20B0                      l855 2092  
                    l863 2048                      l777 20E2                      l769 2102  
                    l849 2064                      l865 2052                      l857 201A  
                    l779 20E8                      l859 203C                      u117 210C  
                    u127 20D6                      u137 212C                      wreg 3FE8  
        ?_lcd_set_cursor 0003              LCD_Char@dat 0002                     STR_1 2001  
                   STR_2 200D                     _LATB 3FBB                     _LATD 3FBD  
                   _main 201A                     start FFFC             ___param_bank 0000  
       __end_of_LCD_Char 2116         __end_of_LCD_Init 20F6                    ?_main 0001  
                  _PORTB 3FCB                    _PORTD 3FCD                    _TRISB 3FC3  
                  _TRISD 3FC5                    tablat 3FF5                    status 3FD8  
        __initialization 2136             __end_of_main 2062                   ??_main 0005  
          __activetblptr 0001                   _ANSELB 3A50                   _ANSELD 3A70  
                 isa$std 0001             __mediumconst 0000                   tblptrh 3FF7  
                 tblptrl 3FF6                   tblptru 3FF8                ?_LCD_Char 0001  
             __accesstop 0060  __end_of__initialization 2136                ?_LCD_Init 0001  
          ___rparam_used 0001           __pcstackCOMRAM 0001             ??_LCD_String 0004  
       ??_lcd_set_cursor 0004               ??_LCD_Char 0001               ??_LCD_Init 0003  
     __end_of_LCD_String 20CC            LCD_String@msg 0003                  __Hparam 0000  
                __Lparam 0000             __psmallconst 2000                  __pcinit 2136  
                __ramtop 2000                  __ptext0 201A                  __ptext1 2062  
                __ptext2 209C                  __ptext3 20F6                  __ptext4 20CC  
                __ptext5 2116     end_of_initialization 2136           LCD_Command@cmd 0002  
              _PORTBbits 3FCB            ??_LCD_Command 0001      start_initialization 2136  
    __end_of_LCD_Command 2136              __smallconst 2000                 _LCD_Char 20F6  
               _LCD_Init 20CC              _LCD_Command 2116                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2000       lcd_set_cursor@line 0003  
               isa$xinst 0000               _LCD_String 209C           _lcd_set_cursor 2062  
      lcd_set_cursor@col 0004   __end_of_lcd_set_cursor 209C  
